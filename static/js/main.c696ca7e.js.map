{"version":3,"sources":["webpack:///static/js/main.c696ca7e.js","webpack:///webpack/bootstrap 864bfa6365cc8011fd52","webpack:///./~/matter-js/build/matter.js","webpack:///./~/react/index.js","webpack:///D:/Puzzles/RedBall/react/red-ball/~/promise/lib/core.js","webpack:///./~/object-assign/index.js","webpack:///D:/Puzzles/RedBall/react/red-ball/~/asap/browser-raw.js","webpack:///D:/Puzzles/RedBall/react/red-ball/~/promise/lib/es6-extensions.js","webpack:///D:/Puzzles/RedBall/react/red-ball/~/promise/lib/rejection-tracking.js","webpack:///D:/Puzzles/RedBall/react/red-ball/~/react-scripts/config/polyfills.js","webpack:///D:/Puzzles/RedBall/react/red-ball/~/whatwg-fetch/fetch.js","webpack:///./src/components/app/app.js","webpack:///./src/index.js","webpack:///./src/matter/bodies/ball.js","webpack:///./src/matter/constraints/drag.js","webpack:///./src/matter/renderers/render.js","webpack:///./~/react-dom/cjs/react-dom.production.min.js","webpack:///./~/react-dom/index.js","webpack:///./~/react/cjs/react.production.min.js","webpack:///./~/scheduler/cjs/scheduler.production.min.js","webpack:///./~/scheduler/index.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","i","Object","prototype","hasOwnProperty","_m","args","slice","fn","a","b","apply","this","concat","require","global","f","r","e","n","t","o","u","Error","code","length","1","_dereq_","Body","Vertices","Vector","Sleeping","Common","Bounds","Axes","_inertiaScale","_nextCollidingGroupId","_nextNonCollidingGroupId","_nextCategory","create","options","defaults","nextId","type","label","parts","plugin","angle","vertices","fromPath","position","x","y","force","torque","positionImpulse","constraintImpulse","totalContacts","speed","angularSpeed","velocity","angularVelocity","isSensor","isStatic","isSleeping","motion","sleepThreshold","density","restitution","friction","frictionStatic","frictionAir","collisionFilter","category","mask","group","slop","timeScale","render","visible","opacity","sprite","xScale","yScale","xOffset","yOffset","lineWidth","body","extend","_initProperties","nextGroup","isNonColliding","nextCategory","set","bounds","positionPrev","clone","anglePrev","parent","rotate","axes","update","area","mass","inertia","defaultFillStyle","choose","defaultStrokeStyle","fillStyle","strokeStyle","min","max","settings","value","property","setStatic","setMass","setDensity","setInertia","setVertices","setPosition","setAngle","setVelocity","setAngularVelocity","setParts","part","_original","inverseMass","inverseInertia","Infinity","moment","fromVertices","centre","translate","autoHull","push","clockwiseSort","hull","hullCentre","total","_totalProperties","delta","sub","rotateAbout","magnitude","Math","abs","translation","add","rotation","point","cos","sin","dx","dy","scale","scaleX","scaleY","totalArea","totalInertia","circleRadius","deltaTime","correction","deltaTimeSquared","pow","velocityPrevX","velocityPrevY","applyForce","offset","properties","mult","div","../core/Common","../core/Sleeping","../geometry/Axes","../geometry/Bounds","../geometry/Vector","../geometry/Vertices","../render/Render","2","Composite","Events","isModified","bodies","constraints","composites","setModified","composite","updateParents","updateChildren","childComposite","object","objects","trigger","obj","warn","addBody","addConstraint","addComposite","constraint","remove","deep","removeBody","removeConstraint","removeComposite","compositeA","compositeB","indexOf","removeCompositeAt","splice","removeBodyAt","removeConstraintAt","clear","keepStatic","filter","allBodies","allConstraints","allComposites","get","toString","move","rebase","recursive","../core/Events","./Body","3","World","gravity","../constraint/Constraint","./Composite","4","Contact","vertex","normalImpulse","tangentImpulse","index","5","Detector","SAT","Pair","collisions","broadphasePairs","engine","pairsTable","pairs","table","bodyA","bodyB","canCollide","overlaps","j","partA","k","partB","previousCollision","pairId","pair","isActive","collision","collides","collided","filterA","filterB","./Pair","./SAT","6","Grid","controller","detector","buckets","pairsList","bucketWidth","bucketHeight","grid","forceUpdate","col","row","bucket","bucketId","world","gridChanged","newRegion","_getRegion","region","union","_regionUnion","startCol","endCol","startRow","endRow","_getBucketId","isInsideNewRegion","isInsideOldRegion","_bucketRemoveBody","_createBucket","_bucketAddBody","_createActivePairsList","regionA","regionB","_createRegion","floor","column","pairKeys","keys","./Detector","7","timestamp","parentA","parentB","contacts","activeContacts","separation","timeCreated","timeUpdated","supports","support","contactId","contact","depth","setActive","./Contact","8","Pairs","_pairMaxIdleLife","list","collisionStart","collisionActive","collisionEnd","activePairIds","removeOld","pairIndex","indexesToRemove","9","Query","Bodies","ray","startPoint","endPoint","rayWidth","rayAngle","rayLength","rayX","rayY","rectangle","outside","result","contains","../factory/Bodies","10","Resolver","_restingThresh","_restingThreshTangent","_positionDampen","_positionWarming","_frictionNormalMultiplier","preSolvePosition","activeCount","solvePosition","normal","bodyBtoA","contactShare","tempA","_temp","tempB","tempC","tempD","penetration","dot","postSolvePosition","preSolveVelocity","tangent","contactVertex","impulse","cross","solveVelocity","timeScaleSquared","tempE","offsetA","offsetB","velocityPointA","perp","velocityPointB","relativeVelocity","normalVelocity","tangentVelocity","tangentSpeed","tangentVelocityDirection","sign","normalForce","clamp","maxFriction","oAcN","oBcN","share","contactNormalImpulse","contactTangentImpulse","11","overlapAB","overlapBA","minOverlap","canReusePrevCol","axisBodyA","axisBody","axisBodyB","axisNumber","_overlapAxes","reused","overlap","axis","verticesB","_findSupports","verticesA","neg","projectionA","projectionB","Number","MAX_VALUE","_projectToAxis","projection","distance","vertexA","vertexB","nearestDistance","vertexToBody","bodyAPosition","prevIndex","nextIndex","12","Constraint","_warming","_torqueDampen","_minLength","pointA","pointB","initialPointA","initialPointB","stiffness","damping","angularStiffness","angleA","angleB","anchors","preSolveAll","solveAll","fixedA","fixedB","solve","pointAWorld","pointBWorld","currentLength","difference","massTotal","inertiaTotal","resistanceTotal","zero","postSolveAll","13","MouseConstraint","Mouse","mouse","canvas","element","mouseConstraint","on","_triggerEvents","button","mouseEvents","sourceEvents","mousemove","mousedown","mouseup","clearSourceEvents","../body/Composite","../collision/Detector","../core/Mouse","./Constraint","14","_nextId","_seed","_nowStartTime","Date","argsStart","deepClone","arguments","source","prop","constructor","key","values","path","begin","end","split","val","shuffle","array","random","temp","choices","isElement","HTMLElement","nodeType","nodeName","isArray","isFunction","isPlainObject","isString","now","window","performance","webkitNow","_seededRandom","colorToNumber","colorString","replace","charAt","parseInt","logLevel","log","console","Array","info","haystack","needle","map","func","mapped","topologicalSort","graph","visited","node","_topologicalSort","neighbors","neighbor","chain","funcs","_chained","lastResult","l","chainPathBefore","base","chainPathAfter","_requireGlobal","globalName","moduleName","self","15","Engine","Render","positionIterations","velocityIterations","constraintIterations","enableSleeping","events","timing","broadphase","renderDefaults","metrics","extended","event","_bodiesApplyGravity","_bodiesUpdate","afterCollisions","_bodiesClearForces","merge","engineA","engineB","gravityScale","worldBounds","../body/Body","../body/World","../collision/Grid","../collision/Pairs","../collision/Resolver","./Common","./Events","./Metrics","./Sleeping","16","eventNames","callback","name","names","off","join","callbacks","newCallbacks","eventClone","17","Matter","Plugin","version","uses","used","use","before","after","./Plugin","18","19","document","absolute","mousedownPosition","mouseupPosition","wheelDelta","pixelRatio","getAttribute","mousewheel","_getRelativeMousePosition","touches","changedTouches","preventDefault","detail","setElement","addEventListener","setOffset","setScale","elementBounds","getBoundingClientRect","rootNode","documentElement","parentNode","scrollX","undefined","pageXOffset","scrollLeft","scrollY","pageYOffset","scrollTop","pageX","left","pageY","top","clientWidth","width","clientHeight","height","20","_registry","register","isPlugin","registered","pluginVersion","versionParse","number","registeredVersion","resolve","dependency","dependencyParse","range","install","isUsed","isFor","parsed","for","versionSatisfies","plugins","dependencies","sortedDependencies","status","_warned","tracked","parsedBase","resolved","pattern","test","identifiers","isRange","isNaN","substr","operator","prerelease","rangeParsed","rangeParts","versionParsed","versionParts","21","Runner","_requestAnimationFrame","_cancelAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","_frameTimeout","setTimeout","clearTimeout","fps","deltaSampleSize","counterTimestamp","frameCounter","deltaHistory","timePrev","timeScalePrev","frameRequestId","isFixed","enabled","runner","deltaMin","deltaMax","run","time","tick","stop","start","./Engine","22","_motionWakeThreshold","_motionSleepThreshold","_minBias","timeFactor","minMotion","maxMotion","sleepCounter","sleepingBody","movingBody","wasSleeping","23","decomp","chamfer","radius","quality","qualityMin","qualityMax","trapezoid","slope","verticesPath","roof","x1","x2","x3","circle","maxSides","sides","ceil","polygon","theta","PI","xx","yy","toFixed","vertexSets","flagInternal","removeCollinear","minimumArea","isConvex","v","z","concave","makeCCW","removeCollinearPoints","decomposed","quickDecomp","chunk","chunkVertices","coincident_max_dist","pav","pbv","da","magnitudeSquared","db","isInternal","24","Composites","stack","columns","rows","columnGap","rowGap","lastBody","maxHeight","bodyHeight","bodyWidth","xOffsetA","yOffsetA","xOffsetB","yOffsetB","bodyAHeight","bodyAWidth","bodyBHeight","bodyBWidth","mesh","crossBrace","bodyC","pyramid","actualRows","lastBodyWidth","newtonsCradle","size","car","wheelSize","wheelBase","wheelAOffset","wheelBOffset","wheelYOffset","wheelA","wheelB","axelA","axelB","softBody","particleRadius","particleOptions","constraintOptions","./Bodies","25","normalise","gradient","26","boundsA","boundsB","vector","shift","deltaX","deltaY","27","Svg","pathToVertices","sampleLength","il","segment","segments","segmentsQueue","lastSegment","lastPoint","segmentIndex","lx","ly","points","addPoint","px","py","pathSegType","isRelative","addSegmentPoint","segType","pathSegTypeAsLetter","toUpperCase","_svgPathToAbsolute","getTotalLength","pathSegList","numberOfItems","getItem","getPathSegAtLength","getPointAtLength","x0","y0","y1","y2","segs","len","seg","replaceItem","createSVGPathSegMovetoAbs","createSVGPathSegLinetoAbs","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoVerticalAbs","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegArcAbs","r1","r2","largeArcFlag","sweepFlag","28","sqrt","output","vectorA","vectorB","cross3","vectorC","scalar","negate","atan2","29","pathPattern","match","parseFloat","mean","average","signed","numerator","denominator","vertice","nextVertice","newVertices","prevVertex","nextVertex","currentRadius","prevNormal","nextNormal","diagonalRadius","radiusVector","midNormal","scaledVertex","precision","alpha","acos","sort","flag","upper","lower","pop","30","RenderPixi","../collision/Contact","../collision/Pair","../collision/Query","../collision/SAT","../constraint/MouseConstraint","../core/Engine","../core/Matter","../core/Metrics","../core/Plugin","../core/Runner","../factory/Composites","../geometry/Svg","../render/RenderPixi","31","background","wireframeBackground","hasBounds","wireframes","showSleeping","showDebug","showBroadphase","showBounds","showVelocity","showCollisions","showSeparations","showAxes","showPositions","showAngleIndicator","showIds","showShadows","showVertexNumbers","showConvexHulls","showInternalEdges","showMousePosition","_createCanvas","context","getContext","textures","setPixelRatio","appendChild","loop","_getPixelRatio","setAttribute","style","lookAt","padding","center","viewHeight","viewWidth","outerRatio","innerRatio","startViewTransform","boundsWidth","boundsHeight","boundsScaleX","boundsScaleY","endViewTransform","setTransform","currentBackground","_applyBackground","globalCompositeOperation","fillRect","bodyConvexHulls","bodyWireframes","bodyBounds","bodyAxes","bodyPositions","bodyVelocity","bodyIds","separations","vertexNumbers","mousePosition","debug","space","debugTimestamp","text","round","debugString","font","fillText","beginPath","arc","closePath","moveTo","coils","lineTo","stroke","fill","bodyShadows","distanceX","distanceY","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","globalAlpha","texture","_getTexture","drawImage","rect","normalPosX","normalPosY","bucketKeys","inspector","selected","item","data","setLineDash","selectStart","selectBounds","createElement","oncontextmenu","onselectstart","devicePixelRatio","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","imagePath","image","Image","src","cssBackground","backgroundSize","32","renderer","container","spriteContainer","pixiOptions","transparent","view","antialias","backgroundColor","PIXI","WebGLRenderer","Container","sprites","primitives","addChild","children","removeChild","bgSprite","addChildAt","setBackground","isColor","color","Sprite","constraintRender","primitiveId","primitive","Graphics","beginFill","lineStyle","endFill","bodyRender","spriteId","_createBodySprite","_createBodyPrimitive","initialAngle","texturePath","anchor","strokeStyleIndicator","strokeStyleWireframe","strokeStyleWireframeIndicator","Texture","fromImage","noop","getThen","then","ex","LAST_ERROR","IS_ERROR","tryCallOne","tryCallTwo","Promise","TypeError","_45","_81","_65","_54","doResolve","safeThen","onFulfilled","onRejected","reject","res","handle","Handler","deferred","_10","handleResolved","asap","cb","promise","ret","newValue","finale","bind","_97","done","reason","_61","toObject","shouldUseNative","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","order2","test3","forEach","letter","err","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","target","from","symbols","to","s","rawAsap","task","queue","requestFlush","flushing","flush","currentIndex","capacity","scan","newLength","makeRequestCallFromMutationObserver","toggle","observer","BrowserMutationObserver","createTextNode","observe","characterData","makeRequestCallFromTimer","handleTimer","timeoutHandle","clearInterval","intervalHandle","setInterval","scope","MutationObserver","WebKitMutationObserver","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","all","arr","remaining","race","disable","enable","onUnhandled","allRejections","matchWhitelist","rejections","error","whitelist","DEFAULT_WHITELIST","displayId","logged","logError","onHandled","_72","timeout","errStr","line","some","cls","ReferenceError","RangeError","normalizeName","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","iterable","Symbol","Headers","headers","append","consumed","bodyUsed","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","Uint8Array","chars","bufferClone","byteLength","buffer","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","rejected","decode","json","JSON","parse","normalizeMethod","method","upcased","methods","Request","input","url","credentials","mode","referrer","form","trim","bytes","decodeURIComponent","parseHeaders","rawHeaders","Response","bodyInit","ok","statusText","fetch","viewClasses","DataView","isView","oldValue","has","thisArg","entries","response","redirectStatuses","redirect","location","init","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","_interopRequireDefault","__esModule","default","_classCallCheck","instance","Constructor","_possibleConstructorReturn","_inherits","subClass","superClass","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_react","_react2","_matterJs","_matterJs2","_ball","_ball2","_drag","_drag2","_render","_render2","App","_Component","_this","getPrototypeOf","state","ball","Ball","ground","dragConstraint","getElementById","setupWorld","className","href","Component","_reactDom","_reactDom2","_app","_app2","ReactDOM","createMouseDragConstraint","createRender","ba","d","g","h","framesToPop","encodeURIComponent","ca","onError","ja","ea","ia","ka","fa","ha","na","la","ma","oa","extractEvents","eventTypes","pa","phasedRegistrationNames","qa","registrationName","ra","sa","wa","currentTarget","va","xa","ya","Aa","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","Ca","stateNode","ta","disabled","Da","za","Ha","Fa","tag","Ia","Ja","Ka","Ga","La","return","Ma","dispatchConfig","Na","_targetInst","Oa","Pa","Qa","Sa","Wa","Ua","Ta","Va","eb","bb","textContent","fb","gb","nativeEvent","Interface","isDefaultPrevented","defaultPrevented","returnValue","ib","eventPool","jb","destructor","hb","getPooled","ub","mb","keyCode","vb","xb","which","tb","rb","yb","wb","nb","ctrlKey","altKey","metaKey","char","qb","locale","Db","ua","Ab","Eb","Bb","Cb","Fb","Gb","Hb","Ib","Kb","Jb","Mb","Lb","Nb","srcElement","correspondingUseElement","Ob","Ra","Pb","Qb","getOwnPropertyDescriptor","getValue","setValue","stopTracking","_valueTracker","Rb","Sb","checked","hc","gc","ic","displayName","bc","Xb","Wb","Zb","Yb","dc","$$typeof","ac","$b","cc","ec","fc","_status","_result","jc","_debugOwner","_debugSource","fileName","Ub","lineNumber","oc","lc","nc","mc","kc","pc","acceptsBooleans","qc","C","attributeName","attributeNamespace","mustUseProperty","propertyName","sc","tc","D","removeAttribute","setAttributeNS","uc","vc","defaultChecked","defaultValue","_wrapperState","initialChecked","wc","initialValue","controlled","xc","yc","zc","Ac","ownerDocument","activeElement","Cc","Bc","change","Fc","Gc","Hc","Jc","Dc","detachEvent","Kc","Ec","Lc","attachEvent","Mc","Nc","Oc","Sc","getModifierState","Rc","Tc","bd","dd","cd","ed","alternate","effectTag","fd","gd","child","sibling","current","hd","ld","charCode","wd","bubbled","captured","isInteractive","ud","vd","Ad","targetInst","ancestors","containerInfo","topLevelType","E","yd","Cd","Dd","Ed","Bd","zd","Id","Hd","Gd","Fd","Jd","Kd","firstChild","Ld","nextSibling","Md","compareDocumentPosition","Nd","HTMLIFrameElement","contentWindow","Od","contentEditable","Pd","selectionStart","selectionEnd","defaultView","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","A","nodeValue","focusedElem","selectionRange","Qd","createRange","setStart","removeAllRanges","addRange","setEnd","focus","Xd","Wd","Td","Vd","Sd","select","Ud","Zd","aa","Children","$d","ae","defaultSelected","be","dangerouslySetInnerHTML","ce","de","ee","ge","he","ke","lastChild","ne","le","oe","setProperty","qe","pe","re","is","se","blur","ab","te","we","autoFocus","xe","__html","Ce","je","wasMultiple","multiple","De","Ee","F","Ge","Fe","G","Je","contextTypes","He","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","J","childContextTypes","Ke","I","H","Le","Me","Ne","getChildContext","Oe","__reactInternalMemoizedMergedChildContext","Ie","Pe","Se","Te","__REACT_DEVTOOLS_GLOBAL_HOOK__","isDisabled","supportsFiber","inject","Qe","onCommitFiberRoot","Re","onCommitFiberUnmount","Ue","elementType","ref","pendingProps","contextDependencies","memoizedState","updateQueue","memoizedProps","lastEffect","firstEffect","nextEffect","childExpirationTime","expirationTime","K","Ve","isReactComponent","We","Xe","Ye","Ze","$e","af","bf","pendingChildren","implementation","cf","didError","earliestPendingTime","latestPendingTime","df","ef","earliestSuspendedTime","latestSuspendedTime","latestPingedTime","ff","gf","nextExpirationTimeToWorkOn","L","defaultProps","hf","_ctor","kf","baseState","uf","shouldComponentUpdate","isPureReactComponent","vf","contextType","M","updater","tf","_reactInternalFiber","wf","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","enqueueReplaceState","xf","refs","jf","yf","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Af","_owner","_stringRef","Bf","Cf","Map","Vb","zf","q","B","w","delete","R","If","Ff","Jf","Hf","Gf","N","namespaceURI","tagName","Kf","Lf","Mf","fg","gg","hg","Wf","Xf","P","Vf","ig","jg","cg","eg","Zf","Yf","ag","Q","O","dg","kg","$f","bg","lg","mg","baseUpdate","ng","og","pg","lastRenderedReducer","dispatch","action","qg","last","lastRenderedState","eagerReducer","eagerState","rg","destroy","deps","sg","tg","Nf","ug","vg","wg","of","lf","mf","qf","Ag","Bg","Cg","zg","yg","xg","Dg","Eg","Fg","S","Ef","Df","Hg","Ig","Jg","Kg","compare","Lg","Mg","Ng","Og","Pg","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","Qg","Gg","getDerivedStateFromError","Rg","pendingContext","Sg","timedOutAt","fallback","Tg","Ug","hydrate","hidden","_context","_calculateChangedBits","first","observedBits","nf","sf","pf","unstable_observedBits","Vg","_currentValue","Zg","Wg","Yg","Xg","bh","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","ch","$g","payload","dh","eh","fh","gh","rf","ah","hh","ih","jh","kh","qh","rh","sh","th","uh","display","vh","componentWillUnmount","wh","xh","yh","insertBefore","_reactRootContainer","onclick","zh","Pf","Qf","ph","Ah","Ch","Dh","Eh","componentDidCatch","Fh","Set","componentStack","Gh","Sh","T","Lh","U","Mh","Nh","Th","V","Uh","Of","__reactInternalSnapshotBeforeUpdate","Vh","Rf","Sf","Ph","Wh","Rh","Qh","W","Uf","Tf","Xh","X","Yh","Be","Zh","Oh","Kh","pendingCommitExpirationTime","Ih","ue","ve","unstable_runWithPriority","unstable_NormalPriority","Ae","$h","ai","mh","nh","onClick","fe","html","innerHTML","createElementNS","lh","oh","bi","ci","Hh","di","maxDuration","pingCache","Bh","ei","finishedWork","fi","unstable_getCurrentPriorityLevel","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_LowPriority","unstable_IdlePriority","gi","hi","ii","ji","ki","xi","ui","unstable_now","ti","yi","mi","ni","unstable_cancelCallback","unstable_scheduleCallback","zi","ye","Ai","vi","Bi","Ci","Z","nextScheduledRoot","Y","li","ri","oi","Di","Ei","unstable_shouldYield","wi","si","_onComplete","pi","qi","Fi","ze","firstBatch","_expirationTime","_defer","Gi","Hi","Ii","Ji","Ki","Li","Mi","Ni","Jh","_root","_callbacks","_next","_hasChildren","_didComplete","_children","Oi","_didCommit","_onCommit","Pi","_internalRoot","Qi","Ri","hasAttribute","Si","legacy_renderSubtreeIntoContainer","Ti","Ui","Ba","injectEventPluginOrder","injectEventPluginsByName","Ea","animationend","animationiteration","animationstart","transitionend","animation","transition","Xa","Ya","Za","$a","stopPropagation","cancelBubble","persist","eventPhase","bubbles","cancelable","timeStamp","isTrusted","kb","lb","ob","documentMode","pb","sb","beforeInput","compositionEnd","compositionStart","compositionUpdate","zb","date","datetime","datetime-local","email","month","password","search","tel","week","Tb","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","rc","Ic","Pc","_isInputEventSupported","Qc","Alt","Control","Meta","Shift","Uc","Vc","Wc","Xc","Yc","screenX","screenY","clientX","clientY","shiftKey","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Zc","pointerId","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","$c","mouseEnter","mouseLeave","pointerEnter","pointerLeave","ad","parentWindow","animationName","elapsedTime","pseudoElement","jd","clipboardData","kd","md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","nd","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","od","repeat","pd","dataTransfer","qd","targetTouches","rd","sd","wheelDeltaX","wheelDeltaY","deltaZ","deltaMode","td","xd","isInteractiveTopLevelEventType","Rd","Yd","onSelect","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","mathml","svg","ie","MSApp","execUnsafeLocalFunction","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","me","substring","menuitem","br","embed","hr","img","keygen","link","meta","param","track","wbr","isMounted","enqueueSetState","enqueueForceUpdate","readContext","useCallback","useContext","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","ReactCurrentOwner","WeakSet","WeakMap","querySelectorAll","stringify","commit","unmount","createBatch","Vi","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_interactiveUpdates","flushSync","unstable_createRoot","unstable_flushControlled","findFiberByHostInstance","overrideProps","currentDispatcherRef","findHostInstanceByFiber","bundleType","rendererPackageName","Wi","Xi","checkDCE","escape","=",":","keyPrefix","count","setState","__self","__source","toArray","only","createRef","PureComponent","createContext","_currentValue2","_threadCount","Provider","Consumer","forwardRef","lazy","memo","Fragment","StrictMode","Suspense","cloneElement","createFactory","isValidElement","unstable_ConcurrentMode","unstable_Profiler","previous","priorityLevel","_schedMock","MessageChannel","port2","port1","onmessage","postMessage","unstable_next","unstable_wrapCallback","unstable_continueExecution","unstable_pauseExecution","unstable_getFirstCallbackNode"],"mappings":"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","file":"static/js/main.c696ca7e.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/red-ball/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ((function(modules) {\n\t// Check all modules for deduplicated modules\n\tfor(var i in modules) {\n\t\tif(Object.prototype.hasOwnProperty.call(modules, i)) {\n\t\t\tswitch(typeof modules[i]) {\n\t\t\tcase \"function\": break;\n\t\t\tcase \"object\":\n\t\t\t\t// Module can be created from a template\n\t\t\t\tmodules[i] = (function(_m) {\n\t\t\t\t\tvar args = _m.slice(1), fn = modules[_m[0]];\n\t\t\t\t\treturn function (a,b,c) {\n\t\t\t\t\t\tfn.apply(this, [a,b,c].concat(args));\n\t\t\t\t\t};\n\t\t\t\t}(modules[i]));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// Module is a copy of another module\n\t\t\t\tmodules[i] = modules[modules[i]];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn modules;\n}([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(11);\n\tmodule.exports = __webpack_require__(14);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar require;var require;/* WEBPACK VAR INJECTION */(function(global) {/**\n\t* matter-js 0.14.2 by @liabru 2018-06-11\n\t* http://brm.io/matter-js/\n\t* License MIT\n\t*/\n\t\n\t/**\n\t * The MIT License (MIT)\n\t * \n\t * Copyright (c) Liam Brummitt and contributors.\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\t\n\t(function(f){if(true){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Matter = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return require(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.Body` module contains methods for creating and manipulating body models.\n\t* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n\t* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n\t*\n\t* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\t\n\t* @class Body\n\t*/\n\t\n\tvar Body = {};\n\t\n\tmodule.exports = Body;\n\t\n\tvar Vertices = _dereq_('../geometry/Vertices');\n\tvar Vector = _dereq_('../geometry/Vector');\n\tvar Sleeping = _dereq_('../core/Sleeping');\n\tvar Render = _dereq_('../render/Render');\n\tvar Common = _dereq_('../core/Common');\n\tvar Bounds = _dereq_('../geometry/Bounds');\n\tvar Axes = _dereq_('../geometry/Axes');\n\t\n\t(function() {\n\t\n\t    Body._inertiaScale = 4;\n\t    Body._nextCollidingGroupId = 1;\n\t    Body._nextNonCollidingGroupId = -1;\n\t    Body._nextCategory = 0x0001;\n\t\n\t    /**\n\t     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n\t     * All properties have default values, and many are pre-calculated automatically based on other properties.\n\t     * Vertices must be specified in clockwise order.\n\t     * See the properties section below for detailed information on what you can pass via the `options` object.\n\t     * @method create\n\t     * @param {} options\n\t     * @return {body} body\n\t     */\n\t    Body.create = function(options) {\n\t        var defaults = {\n\t            id: Common.nextId(),\n\t            type: 'body',\n\t            label: 'Body',\n\t            parts: [],\n\t            plugin: {},\n\t            angle: 0,\n\t            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n\t            position: { x: 0, y: 0 },\n\t            force: { x: 0, y: 0 },\n\t            torque: 0,\n\t            positionImpulse: { x: 0, y: 0 },\n\t            constraintImpulse: { x: 0, y: 0, angle: 0 },\n\t            totalContacts: 0,\n\t            speed: 0,\n\t            angularSpeed: 0,\n\t            velocity: { x: 0, y: 0 },\n\t            angularVelocity: 0,\n\t            isSensor: false,\n\t            isStatic: false,\n\t            isSleeping: false,\n\t            motion: 0,\n\t            sleepThreshold: 60,\n\t            density: 0.001,\n\t            restitution: 0,\n\t            friction: 0.1,\n\t            frictionStatic: 0.5,\n\t            frictionAir: 0.01,\n\t            collisionFilter: {\n\t                category: 0x0001,\n\t                mask: 0xFFFFFFFF,\n\t                group: 0\n\t            },\n\t            slop: 0.05,\n\t            timeScale: 1,\n\t            render: {\n\t                visible: true,\n\t                opacity: 1,\n\t                sprite: {\n\t                    xScale: 1,\n\t                    yScale: 1,\n\t                    xOffset: 0,\n\t                    yOffset: 0\n\t                },\n\t                lineWidth: 0\n\t            }\n\t        };\n\t\n\t        var body = Common.extend(defaults, options);\n\t\n\t        _initProperties(body, options);\n\t\n\t        return body;\n\t    };\n\t\n\t    /**\n\t     * Returns the next unique group index for which bodies will collide.\n\t     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n\t     * See `body.collisionFilter` for more information.\n\t     * @method nextGroup\n\t     * @param {bool} [isNonColliding=false]\n\t     * @return {Number} Unique group index\n\t     */\n\t    Body.nextGroup = function(isNonColliding) {\n\t        if (isNonColliding)\n\t            return Body._nextNonCollidingGroupId--;\n\t\n\t        return Body._nextCollidingGroupId++;\n\t    };\n\t\n\t    /**\n\t     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n\t     * There are 32 available. See `body.collisionFilter` for more information.\n\t     * @method nextCategory\n\t     * @return {Number} Unique category bitfield\n\t     */\n\t    Body.nextCategory = function() {\n\t        Body._nextCategory = Body._nextCategory << 1;\n\t        return Body._nextCategory;\n\t    };\n\t\n\t    /**\n\t     * Initialises body properties.\n\t     * @method _initProperties\n\t     * @private\n\t     * @param {body} body\n\t     * @param {} [options]\n\t     */\n\t    var _initProperties = function(body, options) {\n\t        options = options || {};\n\t\n\t        // init required properties (order is important)\n\t        Body.set(body, {\n\t            bounds: body.bounds || Bounds.create(body.vertices),\n\t            positionPrev: body.positionPrev || Vector.clone(body.position),\n\t            anglePrev: body.anglePrev || body.angle,\n\t            vertices: body.vertices,\n\t            parts: body.parts || [body],\n\t            isStatic: body.isStatic,\n\t            isSleeping: body.isSleeping,\n\t            parent: body.parent || body\n\t        });\n\t\n\t        Vertices.rotate(body.vertices, body.angle, body.position);\n\t        Axes.rotate(body.axes, body.angle);\n\t        Bounds.update(body.bounds, body.vertices, body.velocity);\n\t\n\t        // allow options to override the automatically calculated properties\n\t        Body.set(body, {\n\t            axes: options.axes || body.axes,\n\t            area: options.area || body.area,\n\t            mass: options.mass || body.mass,\n\t            inertia: options.inertia || body.inertia\n\t        });\n\t\n\t        // render properties\n\t        var defaultFillStyle = (body.isStatic ? '#2e2b44' : Common.choose(['#006BA6', '#0496FF', '#FFBC42', '#D81159', '#8F2D56'])),\n\t            defaultStrokeStyle = '#000';\n\t        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n\t        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n\t        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n\t        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n\t    };\n\t\n\t    /**\n\t     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n\t     * Prefer to use the actual setter functions in performance critical situations.\n\t     * @method set\n\t     * @param {body} body\n\t     * @param {} settings A property name (or map of properties and values) to set on the body.\n\t     * @param {} value The value to set if `settings` is a single property name.\n\t     */\n\t    Body.set = function(body, settings, value) {\n\t        var property;\n\t\n\t        if (typeof settings === 'string') {\n\t            property = settings;\n\t            settings = {};\n\t            settings[property] = value;\n\t        }\n\t\n\t        for (property in settings) {\n\t            value = settings[property];\n\t\n\t            if (!settings.hasOwnProperty(property))\n\t                continue;\n\t\n\t            switch (property) {\n\t\n\t            case 'isStatic':\n\t                Body.setStatic(body, value);\n\t                break;\n\t            case 'isSleeping':\n\t                Sleeping.set(body, value);\n\t                break;\n\t            case 'mass':\n\t                Body.setMass(body, value);\n\t                break;\n\t            case 'density':\n\t                Body.setDensity(body, value);\n\t                break;\n\t            case 'inertia':\n\t                Body.setInertia(body, value);\n\t                break;\n\t            case 'vertices':\n\t                Body.setVertices(body, value);\n\t                break;\n\t            case 'position':\n\t                Body.setPosition(body, value);\n\t                break;\n\t            case 'angle':\n\t                Body.setAngle(body, value);\n\t                break;\n\t            case 'velocity':\n\t                Body.setVelocity(body, value);\n\t                break;\n\t            case 'angularVelocity':\n\t                Body.setAngularVelocity(body, value);\n\t                break;\n\t            case 'parts':\n\t                Body.setParts(body, value);\n\t                break;\n\t            default:\n\t                body[property] = value;\n\t\n\t            }\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n\t     * @method setStatic\n\t     * @param {body} body\n\t     * @param {bool} isStatic\n\t     */\n\t    Body.setStatic = function(body, isStatic) {\n\t        for (var i = 0; i < body.parts.length; i++) {\n\t            var part = body.parts[i];\n\t            part.isStatic = isStatic;\n\t\n\t            if (isStatic) {\n\t                part._original = {\n\t                    restitution: part.restitution,\n\t                    friction: part.friction,\n\t                    mass: part.mass,\n\t                    inertia: part.inertia,\n\t                    density: part.density,\n\t                    inverseMass: part.inverseMass,\n\t                    inverseInertia: part.inverseInertia\n\t                };\n\t\n\t                part.restitution = 0;\n\t                part.friction = 1;\n\t                part.mass = part.inertia = part.density = Infinity;\n\t                part.inverseMass = part.inverseInertia = 0;\n\t\n\t                part.positionPrev.x = part.position.x;\n\t                part.positionPrev.y = part.position.y;\n\t                part.anglePrev = part.angle;\n\t                part.angularVelocity = 0;\n\t                part.speed = 0;\n\t                part.angularSpeed = 0;\n\t                part.motion = 0;\n\t            } else if (part._original) {\n\t                part.restitution = part._original.restitution;\n\t                part.friction = part._original.friction;\n\t                part.mass = part._original.mass;\n\t                part.inertia = part._original.inertia;\n\t                part.density = part._original.density;\n\t                part.inverseMass = part._original.inverseMass;\n\t                part.inverseInertia = part._original.inverseInertia;\n\t\n\t                delete part._original;\n\t            }\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n\t     * @method setMass\n\t     * @param {body} body\n\t     * @param {number} mass\n\t     */\n\t    Body.setMass = function(body, mass) {\n\t        var moment = body.inertia / (body.mass / 6);\n\t        body.inertia = moment * (mass / 6);\n\t        body.inverseInertia = 1 / body.inertia;\n\t\n\t        body.mass = mass;\n\t        body.inverseMass = 1 / body.mass;\n\t        body.density = body.mass / body.area;\n\t    };\n\t\n\t    /**\n\t     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n\t     * @method setDensity\n\t     * @param {body} body\n\t     * @param {number} density\n\t     */\n\t    Body.setDensity = function(body, density) {\n\t        Body.setMass(body, density * body.area);\n\t        body.density = density;\n\t    };\n\t\n\t    /**\n\t     * Sets the moment of inertia (i.e. second moment of area) of the body of the body. \n\t     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n\t     * @method setInertia\n\t     * @param {body} body\n\t     * @param {number} inertia\n\t     */\n\t    Body.setInertia = function(body, inertia) {\n\t        body.inertia = inertia;\n\t        body.inverseInertia = 1 / body.inertia;\n\t    };\n\t\n\t    /**\n\t     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n\t     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n\t     * They are then automatically translated to world space based on `body.position`.\n\t     *\n\t     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n\t     * Vertices must form a convex hull, concave hulls are not supported.\n\t     *\n\t     * @method setVertices\n\t     * @param {body} body\n\t     * @param {vector[]} vertices\n\t     */\n\t    Body.setVertices = function(body, vertices) {\n\t        // change vertices\n\t        if (vertices[0].body === body) {\n\t            body.vertices = vertices;\n\t        } else {\n\t            body.vertices = Vertices.create(vertices, body);\n\t        }\n\t\n\t        // update properties\n\t        body.axes = Axes.fromVertices(body.vertices);\n\t        body.area = Vertices.area(body.vertices);\n\t        Body.setMass(body, body.density * body.area);\n\t\n\t        // orient vertices around the centre of mass at origin (0, 0)\n\t        var centre = Vertices.centre(body.vertices);\n\t        Vertices.translate(body.vertices, centre, -1);\n\t\n\t        // update inertia while vertices are at origin (0, 0)\n\t        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\t\n\t        // update geometry\n\t        Vertices.translate(body.vertices, body.position);\n\t        Bounds.update(body.bounds, body.vertices, body.velocity);\n\t    };\n\t\n\t    /**\n\t     * Sets the parts of the `body` and updates mass, inertia and centroid.\n\t     * Each part will have its parent set to `body`.\n\t     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n\t     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n\t     * @method setParts\n\t     * @param {body} body\n\t     * @param [body] parts\n\t     * @param {bool} [autoHull=true]\n\t     */\n\t    Body.setParts = function(body, parts, autoHull) {\n\t        var i;\n\t\n\t        // add all the parts, ensuring that the first part is always the parent body\n\t        parts = parts.slice(0);\n\t        body.parts.length = 0;\n\t        body.parts.push(body);\n\t        body.parent = body;\n\t\n\t        for (i = 0; i < parts.length; i++) {\n\t            var part = parts[i];\n\t            if (part !== body) {\n\t                part.parent = body;\n\t                body.parts.push(part);\n\t            }\n\t        }\n\t\n\t        if (body.parts.length === 1)\n\t            return;\n\t\n\t        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\t\n\t        // find the convex hull of all parts to set on the parent body\n\t        if (autoHull) {\n\t            var vertices = [];\n\t            for (i = 0; i < parts.length; i++) {\n\t                vertices = vertices.concat(parts[i].vertices);\n\t            }\n\t\n\t            Vertices.clockwiseSort(vertices);\n\t\n\t            var hull = Vertices.hull(vertices),\n\t                hullCentre = Vertices.centre(hull);\n\t\n\t            Body.setVertices(body, hull);\n\t            Vertices.translate(body.vertices, hullCentre);\n\t        }\n\t\n\t        // sum the properties of all compound parts of the parent body\n\t        var total = Body._totalProperties(body);\n\t\n\t        body.area = total.area;\n\t        body.parent = body;\n\t        body.position.x = total.centre.x;\n\t        body.position.y = total.centre.y;\n\t        body.positionPrev.x = total.centre.x;\n\t        body.positionPrev.y = total.centre.y;\n\t\n\t        Body.setMass(body, total.mass);\n\t        Body.setInertia(body, total.inertia);\n\t        Body.setPosition(body, total.centre);\n\t    };\n\t\n\t    /**\n\t     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n\t     * @method setPosition\n\t     * @param {body} body\n\t     * @param {vector} position\n\t     */\n\t    Body.setPosition = function(body, position) {\n\t        var delta = Vector.sub(position, body.position);\n\t        body.positionPrev.x += delta.x;\n\t        body.positionPrev.y += delta.y;\n\t\n\t        for (var i = 0; i < body.parts.length; i++) {\n\t            var part = body.parts[i];\n\t            part.position.x += delta.x;\n\t            part.position.y += delta.y;\n\t            Vertices.translate(part.vertices, delta);\n\t            Bounds.update(part.bounds, part.vertices, body.velocity);\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n\t     * @method setAngle\n\t     * @param {body} body\n\t     * @param {number} angle\n\t     */\n\t    Body.setAngle = function(body, angle) {\n\t        var delta = angle - body.angle;\n\t        body.anglePrev += delta;\n\t\n\t        for (var i = 0; i < body.parts.length; i++) {\n\t            var part = body.parts[i];\n\t            part.angle += delta;\n\t            Vertices.rotate(part.vertices, delta, body.position);\n\t            Axes.rotate(part.axes, delta);\n\t            Bounds.update(part.bounds, part.vertices, body.velocity);\n\t            if (i > 0) {\n\t                Vector.rotateAbout(part.position, delta, body.position, part.position);\n\t            }\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n\t     * @method setVelocity\n\t     * @param {body} body\n\t     * @param {vector} velocity\n\t     */\n\t    Body.setVelocity = function(body, velocity) {\n\t        body.positionPrev.x = body.position.x - velocity.x;\n\t        body.positionPrev.y = body.position.y - velocity.y;\n\t        body.velocity.x = velocity.x;\n\t        body.velocity.y = velocity.y;\n\t        body.speed = Vector.magnitude(body.velocity);\n\t    };\n\t\n\t    /**\n\t     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n\t     * @method setAngularVelocity\n\t     * @param {body} body\n\t     * @param {number} velocity\n\t     */\n\t    Body.setAngularVelocity = function(body, velocity) {\n\t        body.anglePrev = body.angle - velocity;\n\t        body.angularVelocity = velocity;\n\t        body.angularSpeed = Math.abs(body.angularVelocity);\n\t    };\n\t\n\t    /**\n\t     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n\t     * @method translate\n\t     * @param {body} body\n\t     * @param {vector} translation\n\t     */\n\t    Body.translate = function(body, translation) {\n\t        Body.setPosition(body, Vector.add(body.position, translation));\n\t    };\n\t\n\t    /**\n\t     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n\t     * @method rotate\n\t     * @param {body} body\n\t     * @param {number} rotation\n\t     * @param {vector} [point]\n\t     */\n\t    Body.rotate = function(body, rotation, point) {\n\t        if (!point) {\n\t            Body.setAngle(body, body.angle + rotation);\n\t        } else {\n\t            var cos = Math.cos(rotation),\n\t                sin = Math.sin(rotation),\n\t                dx = body.position.x - point.x,\n\t                dy = body.position.y - point.y;\n\t                \n\t            Body.setPosition(body, {\n\t                x: point.x + (dx * cos - dy * sin),\n\t                y: point.y + (dx * sin + dy * cos)\n\t            });\n\t\n\t            Body.setAngle(body, body.angle + rotation);\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n\t     * @method scale\n\t     * @param {body} body\n\t     * @param {number} scaleX\n\t     * @param {number} scaleY\n\t     * @param {vector} [point]\n\t     */\n\t    Body.scale = function(body, scaleX, scaleY, point) {\n\t        var totalArea = 0,\n\t            totalInertia = 0;\n\t\n\t        point = point || body.position;\n\t\n\t        for (var i = 0; i < body.parts.length; i++) {\n\t            var part = body.parts[i];\n\t\n\t            // scale vertices\n\t            Vertices.scale(part.vertices, scaleX, scaleY, point);\n\t\n\t            // update properties\n\t            part.axes = Axes.fromVertices(part.vertices);\n\t            part.area = Vertices.area(part.vertices);\n\t            Body.setMass(part, body.density * part.area);\n\t\n\t            // update inertia (requires vertices to be at origin)\n\t            Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n\t            Body.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass));\n\t            Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n\t\n\t            if (i > 0) {\n\t                totalArea += part.area;\n\t                totalInertia += part.inertia;\n\t            }\n\t\n\t            // scale position\n\t            part.position.x = point.x + (part.position.x - point.x) * scaleX;\n\t            part.position.y = point.y + (part.position.y - point.y) * scaleY;\n\t\n\t            // update bounds\n\t            Bounds.update(part.bounds, part.vertices, body.velocity);\n\t        }\n\t\n\t        // handle parent body\n\t        if (body.parts.length > 1) {\n\t            body.area = totalArea;\n\t\n\t            if (!body.isStatic) {\n\t                Body.setMass(body, body.density * totalArea);\n\t                Body.setInertia(body, totalInertia);\n\t            }\n\t        }\n\t\n\t        // handle circles\n\t        if (body.circleRadius) { \n\t            if (scaleX === scaleY) {\n\t                body.circleRadius *= scaleX;\n\t            } else {\n\t                // body is no longer a circle\n\t                body.circleRadius = null;\n\t            }\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n\t     * @method update\n\t     * @param {body} body\n\t     * @param {number} deltaTime\n\t     * @param {number} timeScale\n\t     * @param {number} correction\n\t     */\n\t    Body.update = function(body, deltaTime, timeScale, correction) {\n\t        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\t\n\t        // from the previous step\n\t        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n\t            velocityPrevX = body.position.x - body.positionPrev.x,\n\t            velocityPrevY = body.position.y - body.positionPrev.y;\n\t\n\t        // update velocity with Verlet integration\n\t        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n\t        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\t\n\t        body.positionPrev.x = body.position.x;\n\t        body.positionPrev.y = body.position.y;\n\t        body.position.x += body.velocity.x;\n\t        body.position.y += body.velocity.y;\n\t\n\t        // update angular velocity with Verlet integration\n\t        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n\t        body.anglePrev = body.angle;\n\t        body.angle += body.angularVelocity;\n\t\n\t        // track speed and acceleration\n\t        body.speed = Vector.magnitude(body.velocity);\n\t        body.angularSpeed = Math.abs(body.angularVelocity);\n\t\n\t        // transform the body geometry\n\t        for (var i = 0; i < body.parts.length; i++) {\n\t            var part = body.parts[i];\n\t\n\t            Vertices.translate(part.vertices, body.velocity);\n\t            \n\t            if (i > 0) {\n\t                part.position.x += body.velocity.x;\n\t                part.position.y += body.velocity.y;\n\t            }\n\t\n\t            if (body.angularVelocity !== 0) {\n\t                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n\t                Axes.rotate(part.axes, body.angularVelocity);\n\t                if (i > 0) {\n\t                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n\t                }\n\t            }\n\t\n\t            Bounds.update(part.bounds, part.vertices, body.velocity);\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Applies a force to a body from a given world-space position, including resulting torque.\n\t     * @method applyForce\n\t     * @param {body} body\n\t     * @param {vector} position\n\t     * @param {vector} force\n\t     */\n\t    Body.applyForce = function(body, position, force) {\n\t        body.force.x += force.x;\n\t        body.force.y += force.y;\n\t        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n\t        body.torque += offset.x * force.y - offset.y * force.x;\n\t    };\n\t\n\t    /**\n\t     * Returns the sums of the properties of all compound parts of the parent body.\n\t     * @method _totalProperties\n\t     * @private\n\t     * @param {body} body\n\t     * @return {}\n\t     */\n\t    Body._totalProperties = function(body) {\n\t        // from equations at:\n\t        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n\t        // http://output.to/sideway/default.asp?qno=121100087\n\t\n\t        var properties = {\n\t            mass: 0,\n\t            area: 0,\n\t            inertia: 0,\n\t            centre: { x: 0, y: 0 }\n\t        };\n\t\n\t        // sum the properties of all compound parts of the parent body\n\t        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n\t            var part = body.parts[i],\n\t                mass = part.mass !== Infinity ? part.mass : 1;\n\t\n\t            properties.mass += mass;\n\t            properties.area += part.area;\n\t            properties.inertia += part.inertia;\n\t            properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));\n\t        }\n\t\n\t        properties.centre = Vector.div(properties.centre, properties.mass);\n\t\n\t        return properties;\n\t    };\n\t\n\t    /*\n\t    *\n\t    *  Events Documentation\n\t    *\n\t    */\n\t\n\t    /**\n\t    * Fired when a body starts sleeping (where `this` is the body).\n\t    *\n\t    * @event sleepStart\n\t    * @this {body} The body that has started sleeping\n\t    * @param {} event An event object\n\t    * @param {} event.source The source object of the event\n\t    * @param {} event.name The name of the event\n\t    */\n\t\n\t    /**\n\t    * Fired when a body ends sleeping (where `this` is the body).\n\t    *\n\t    * @event sleepEnd\n\t    * @this {body} The body that has ended sleeping\n\t    * @param {} event An event object\n\t    * @param {} event.source The source object of the event\n\t    * @param {} event.name The name of the event\n\t    */\n\t\n\t    /*\n\t    *\n\t    *  Properties Documentation\n\t    *\n\t    */\n\t\n\t    /**\n\t     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n\t     *\n\t     * @property id\n\t     * @type number\n\t     */\n\t\n\t    /**\n\t     * A `String` denoting the type of object.\n\t     *\n\t     * @property type\n\t     * @type string\n\t     * @default \"body\"\n\t     * @readOnly\n\t     */\n\t\n\t    /**\n\t     * An arbitrary `String` name to help the user identify and manage bodies.\n\t     *\n\t     * @property label\n\t     * @type string\n\t     * @default \"Body\"\n\t     */\n\t\n\t    /**\n\t     * An array of bodies that make up this body. \n\t     * The first body in the array must always be a self reference to the current body instance.\n\t     * All bodies in the `parts` array together form a single rigid compound body.\n\t     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n\t     * Parts themselves should never be added to a `World`, only the parent body should be.\n\t     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n\t     *\n\t     * @property parts\n\t     * @type body[]\n\t     */\n\t\n\t    /**\n\t     * An object reserved for storing plugin-specific properties.\n\t     *\n\t     * @property plugin\n\t     * @type {}\n\t     */\n\t\n\t    /**\n\t     * A self reference if the body is _not_ a part of another body.\n\t     * Otherwise this is a reference to the body that this is a part of.\n\t     * See `body.parts`.\n\t     *\n\t     * @property parent\n\t     * @type body\n\t     */\n\t\n\t    /**\n\t     * A `Number` specifying the angle of the body, in radians.\n\t     *\n\t     * @property angle\n\t     * @type number\n\t     * @default 0\n\t     */\n\t\n\t    /**\n\t     * An array of `Vector` objects that specify the convex hull of the rigid body.\n\t     * These should be provided about the origin `(0, 0)`. E.g.\n\t     *\n\t     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n\t     *\n\t     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n\t     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \n\t     *\n\t     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n\t     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n\t     *\n\t     * @property vertices\n\t     * @type vector[]\n\t     */\n\t\n\t    /**\n\t     * A `Vector` that specifies the current world-space position of the body.\n\t     *\n\t     * @property position\n\t     * @type vector\n\t     * @default { x: 0, y: 0 }\n\t     */\n\t\n\t    /**\n\t     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n\t     *\n\t     * @property force\n\t     * @type vector\n\t     * @default { x: 0, y: 0 }\n\t     */\n\t\n\t    /**\n\t     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n\t     *\n\t     * @property torque\n\t     * @type number\n\t     * @default 0\n\t     */\n\t\n\t    /**\n\t     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n\t     *\n\t     * @readOnly\n\t     * @property speed\n\t     * @type number\n\t     * @default 0\n\t     */\n\t\n\t    /**\n\t     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n\t     *\n\t     * @readOnly\n\t     * @property angularSpeed\n\t     * @type number\n\t     * @default 0\n\t     */\n\t\n\t    /**\n\t     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \n\t     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n\t     *\n\t     * @readOnly\n\t     * @property velocity\n\t     * @type vector\n\t     * @default { x: 0, y: 0 }\n\t     */\n\t\n\t    /**\n\t     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \n\t     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n\t     *\n\t     * @readOnly\n\t     * @property angularVelocity\n\t     * @type number\n\t     * @default 0\n\t     */\n\t\n\t    /**\n\t     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n\t     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n\t     *\n\t     * @property isStatic\n\t     * @type boolean\n\t     * @default false\n\t     */\n\t\n\t    /**\n\t     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n\t     *\n\t     * @property isSensor\n\t     * @type boolean\n\t     * @default false\n\t     */\n\t\n\t    /**\n\t     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n\t     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n\t     *\n\t     * @property isSleeping\n\t     * @type boolean\n\t     * @default false\n\t     */\n\t\n\t    /**\n\t     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n\t     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n\t     *\n\t     * @readOnly\n\t     * @property motion\n\t     * @type number\n\t     * @default 0\n\t     */\n\t\n\t    /**\n\t     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n\t     *\n\t     * @property sleepThreshold\n\t     * @type number\n\t     * @default 60\n\t     */\n\t\n\t    /**\n\t     * A `Number` that defines the density of the body, that is its mass per unit area.\n\t     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n\t     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n\t     *\n\t     * @property density\n\t     * @type number\n\t     * @default 0.001\n\t     */\n\t\n\t    /**\n\t     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n\t     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n\t     *\n\t     * @property mass\n\t     * @type number\n\t     */\n\t\n\t    /**\n\t     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n\t     * If you modify this value, you must also modify the `body.mass` property.\n\t     *\n\t     * @property inverseMass\n\t     * @type number\n\t     */\n\t\n\t    /**\n\t     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n\t     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n\t     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n\t     *\n\t     * @property inertia\n\t     * @type number\n\t     */\n\t\n\t    /**\n\t     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n\t     * If you modify this value, you must also modify the `body.inertia` property.\n\t     *\n\t     * @property inverseInertia\n\t     * @type number\n\t     */\n\t\n\t    /**\n\t     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n\t     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \n\t     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n\t     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n\t     *\n\t     *     Math.max(bodyA.restitution, bodyB.restitution)\n\t     *\n\t     * @property restitution\n\t     * @type number\n\t     * @default 0\n\t     */\n\t\n\t    /**\n\t     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n\t     * A value of `0` means that the body may slide indefinitely.\n\t     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n\t     *\n\t     * The effects of the value may be non-linear. \n\t     * High values may be unstable depending on the body.\n\t     * The engine uses a Coulomb friction model including static and kinetic friction.\n\t     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n\t     *\n\t     *     Math.min(bodyA.friction, bodyB.friction)\n\t     *\n\t     * @property friction\n\t     * @type number\n\t     * @default 0.1\n\t     */\n\t\n\t    /**\n\t     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \n\t     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n\t     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n\t     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n\t     *\n\t     * @property frictionStatic\n\t     * @type number\n\t     * @default 0.5\n\t     */\n\t\n\t    /**\n\t     * A `Number` that defines the air friction of the body (air resistance). \n\t     * A value of `0` means the body will never slow as it moves through space.\n\t     * The higher the value, the faster a body slows when moving through space.\n\t     * The effects of the value are non-linear. \n\t     *\n\t     * @property frictionAir\n\t     * @type number\n\t     * @default 0.01\n\t     */\n\t\n\t    /**\n\t     * An `Object` that specifies the collision filtering properties of this body.\n\t     *\n\t     * Collisions between two bodies will obey the following rules:\n\t     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n\t     *   they will always collide if the value is positive, and they will never collide\n\t     *   if the value is negative.\n\t     * - If the two bodies have different values of `collisionFilter.group` or if one\n\t     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n\t     *\n\t     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n\t     * value is used as a bit field and the category should have only one bit set, meaning that\n\t     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n\t     * different collision categories available.\n\t     *\n\t     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n\t     * the categories it collides with (the value is the bitwise AND value of all these categories).\n\t     *\n\t     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n\t     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n\t     * are both true.\n\t     *\n\t     * @property collisionFilter\n\t     * @type object\n\t     */\n\t\n\t    /**\n\t     * An Integer `Number`, that specifies the collision group this body belongs to.\n\t     * See `body.collisionFilter` for more information.\n\t     *\n\t     * @property collisionFilter.group\n\t     * @type object\n\t     * @default 0\n\t     */\n\t\n\t    /**\n\t     * A bit field that specifies the collision category this body belongs to.\n\t     * The category value should have only one bit set, for example `0x0001`.\n\t     * This means there are up to 32 unique collision categories available.\n\t     * See `body.collisionFilter` for more information.\n\t     *\n\t     * @property collisionFilter.category\n\t     * @type object\n\t     * @default 1\n\t     */\n\t\n\t    /**\n\t     * A bit mask that specifies the collision categories this body may collide with.\n\t     * See `body.collisionFilter` for more information.\n\t     *\n\t     * @property collisionFilter.mask\n\t     * @type object\n\t     * @default -1\n\t     */\n\t\n\t    /**\n\t     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n\t     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n\t     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n\t     *\n\t     * @property slop\n\t     * @type number\n\t     * @default 0.05\n\t     */\n\t\n\t    /**\n\t     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n\t     *\n\t     * @property timeScale\n\t     * @type number\n\t     * @default 1\n\t     */\n\t\n\t    /**\n\t     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n\t     *\n\t     * @property render\n\t     * @type object\n\t     */\n\t\n\t    /**\n\t     * A flag that indicates if the body should be rendered.\n\t     *\n\t     * @property render.visible\n\t     * @type boolean\n\t     * @default true\n\t     */\n\t\n\t    /**\n\t     * Sets the opacity to use when rendering.\n\t     *\n\t     * @property render.opacity\n\t     * @type number\n\t     * @default 1\n\t    */\n\t\n\t    /**\n\t     * An `Object` that defines the sprite properties to use when rendering, if any.\n\t     *\n\t     * @property render.sprite\n\t     * @type object\n\t     */\n\t\n\t    /**\n\t     * An `String` that defines the path to the image to use as the sprite texture, if any.\n\t     *\n\t     * @property render.sprite.texture\n\t     * @type string\n\t     */\n\t     \n\t    /**\n\t     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n\t     *\n\t     * @property render.sprite.xScale\n\t     * @type number\n\t     * @default 1\n\t     */\n\t\n\t    /**\n\t     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n\t     *\n\t     * @property render.sprite.yScale\n\t     * @type number\n\t     * @default 1\n\t     */\n\t\n\t     /**\n\t      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n\t      *\n\t      * @property render.sprite.xOffset\n\t      * @type number\n\t      * @default 0\n\t      */\n\t\n\t     /**\n\t      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n\t      *\n\t      * @property render.sprite.yOffset\n\t      * @type number\n\t      * @default 0\n\t      */\n\t\n\t    /**\n\t     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n\t     * A value of `0` means no outline will be rendered.\n\t     *\n\t     * @property render.lineWidth\n\t     * @type number\n\t     * @default 0\n\t     */\n\t\n\t    /**\n\t     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n\t     * It is the same as when using a canvas, so it accepts CSS style property values.\n\t     *\n\t     * @property render.fillStyle\n\t     * @type string\n\t     * @default a random colour\n\t     */\n\t\n\t    /**\n\t     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n\t     * It is the same as when using a canvas, so it accepts CSS style property values.\n\t     *\n\t     * @property render.strokeStyle\n\t     * @type string\n\t     * @default a random colour\n\t     */\n\t\n\t    /**\n\t     * An array of unique axis vectors (edge normals) used for collision detection.\n\t     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n\t     * They are constantly updated by `Body.update` during the simulation.\n\t     *\n\t     * @property axes\n\t     * @type vector[]\n\t     */\n\t     \n\t    /**\n\t     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n\t     *\n\t     * @property area\n\t     * @type string\n\t     * @default \n\t     */\n\t\n\t    /**\n\t     * A `Bounds` object that defines the AABB region for the body.\n\t     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n\t     *\n\t     * @property bounds\n\t     * @type bounds\n\t     */\n\t\n\t})();\n\t\n\t},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31}],2:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\n\t* A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\n\t* It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\n\t* Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\n\t*\n\t* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\t*\n\t* @class Composite\n\t*/\n\t\n\tvar Composite = {};\n\t\n\tmodule.exports = Composite;\n\t\n\tvar Events = _dereq_('../core/Events');\n\tvar Common = _dereq_('../core/Common');\n\tvar Bounds = _dereq_('../geometry/Bounds');\n\tvar Body = _dereq_('./Body');\n\t\n\t(function() {\n\t\n\t    /**\n\t     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n\t     * See the properites section below for detailed information on what you can pass via the `options` object.\n\t     * @method create\n\t     * @param {} [options]\n\t     * @return {composite} A new composite\n\t     */\n\t    Composite.create = function(options) {\n\t        return Common.extend({ \n\t            id: Common.nextId(),\n\t            type: 'composite',\n\t            parent: null,\n\t            isModified: false,\n\t            bodies: [], \n\t            constraints: [], \n\t            composites: [],\n\t            label: 'Composite',\n\t            plugin: {}\n\t        }, options);\n\t    };\n\t\n\t    /**\n\t     * Sets the composite's `isModified` flag. \n\t     * If `updateParents` is true, all parents will be set (default: false).\n\t     * If `updateChildren` is true, all children will be set (default: false).\n\t     * @method setModified\n\t     * @param {composite} composite\n\t     * @param {boolean} isModified\n\t     * @param {boolean} [updateParents=false]\n\t     * @param {boolean} [updateChildren=false]\n\t     */\n\t    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n\t        composite.isModified = isModified;\n\t\n\t        if (updateParents && composite.parent) {\n\t            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n\t        }\n\t\n\t        if (updateChildren) {\n\t            for(var i = 0; i < composite.composites.length; i++) {\n\t                var childComposite = composite.composites[i];\n\t                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n\t            }\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\n\t     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n\t     * @method add\n\t     * @param {composite} composite\n\t     * @param {} object\n\t     * @return {composite} The original composite with the objects added\n\t     */\n\t    Composite.add = function(composite, object) {\n\t        var objects = [].concat(object);\n\t\n\t        Events.trigger(composite, 'beforeAdd', { object: object });\n\t\n\t        for (var i = 0; i < objects.length; i++) {\n\t            var obj = objects[i];\n\t\n\t            switch (obj.type) {\n\t\n\t            case 'body':\n\t                // skip adding compound parts\n\t                if (obj.parent !== obj) {\n\t                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n\t                    break;\n\t                }\n\t\n\t                Composite.addBody(composite, obj);\n\t                break;\n\t            case 'constraint':\n\t                Composite.addConstraint(composite, obj);\n\t                break;\n\t            case 'composite':\n\t                Composite.addComposite(composite, obj);\n\t                break;\n\t            case 'mouseConstraint':\n\t                Composite.addConstraint(composite, obj.constraint);\n\t                break;\n\t\n\t            }\n\t        }\n\t\n\t        Events.trigger(composite, 'afterAdd', { object: object });\n\t\n\t        return composite;\n\t    };\n\t\n\t    /**\n\t     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n\t     * Optionally searching its children recursively.\n\t     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n\t     * @method remove\n\t     * @param {composite} composite\n\t     * @param {} object\n\t     * @param {boolean} [deep=false]\n\t     * @return {composite} The original composite with the objects removed\n\t     */\n\t    Composite.remove = function(composite, object, deep) {\n\t        var objects = [].concat(object);\n\t\n\t        Events.trigger(composite, 'beforeRemove', { object: object });\n\t\n\t        for (var i = 0; i < objects.length; i++) {\n\t            var obj = objects[i];\n\t\n\t            switch (obj.type) {\n\t\n\t            case 'body':\n\t                Composite.removeBody(composite, obj, deep);\n\t                break;\n\t            case 'constraint':\n\t                Composite.removeConstraint(composite, obj, deep);\n\t                break;\n\t            case 'composite':\n\t                Composite.removeComposite(composite, obj, deep);\n\t                break;\n\t            case 'mouseConstraint':\n\t                Composite.removeConstraint(composite, obj.constraint);\n\t                break;\n\t\n\t            }\n\t        }\n\t\n\t        Events.trigger(composite, 'afterRemove', { object: object });\n\t\n\t        return composite;\n\t    };\n\t\n\t    /**\n\t     * Adds a composite to the given composite.\n\t     * @private\n\t     * @method addComposite\n\t     * @param {composite} compositeA\n\t     * @param {composite} compositeB\n\t     * @return {composite} The original compositeA with the objects from compositeB added\n\t     */\n\t    Composite.addComposite = function(compositeA, compositeB) {\n\t        compositeA.composites.push(compositeB);\n\t        compositeB.parent = compositeA;\n\t        Composite.setModified(compositeA, true, true, false);\n\t        return compositeA;\n\t    };\n\t\n\t    /**\n\t     * Removes a composite from the given composite, and optionally searching its children recursively.\n\t     * @private\n\t     * @method removeComposite\n\t     * @param {composite} compositeA\n\t     * @param {composite} compositeB\n\t     * @param {boolean} [deep=false]\n\t     * @return {composite} The original compositeA with the composite removed\n\t     */\n\t    Composite.removeComposite = function(compositeA, compositeB, deep) {\n\t        var position = Common.indexOf(compositeA.composites, compositeB);\n\t        if (position !== -1) {\n\t            Composite.removeCompositeAt(compositeA, position);\n\t            Composite.setModified(compositeA, true, true, false);\n\t        }\n\t\n\t        if (deep) {\n\t            for (var i = 0; i < compositeA.composites.length; i++){\n\t                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n\t            }\n\t        }\n\t\n\t        return compositeA;\n\t    };\n\t\n\t    /**\n\t     * Removes a composite from the given composite.\n\t     * @private\n\t     * @method removeCompositeAt\n\t     * @param {composite} composite\n\t     * @param {number} position\n\t     * @return {composite} The original composite with the composite removed\n\t     */\n\t    Composite.removeCompositeAt = function(composite, position) {\n\t        composite.composites.splice(position, 1);\n\t        Composite.setModified(composite, true, true, false);\n\t        return composite;\n\t    };\n\t\n\t    /**\n\t     * Adds a body to the given composite.\n\t     * @private\n\t     * @method addBody\n\t     * @param {composite} composite\n\t     * @param {body} body\n\t     * @return {composite} The original composite with the body added\n\t     */\n\t    Composite.addBody = function(composite, body) {\n\t        composite.bodies.push(body);\n\t        Composite.setModified(composite, true, true, false);\n\t        return composite;\n\t    };\n\t\n\t    /**\n\t     * Removes a body from the given composite, and optionally searching its children recursively.\n\t     * @private\n\t     * @method removeBody\n\t     * @param {composite} composite\n\t     * @param {body} body\n\t     * @param {boolean} [deep=false]\n\t     * @return {composite} The original composite with the body removed\n\t     */\n\t    Composite.removeBody = function(composite, body, deep) {\n\t        var position = Common.indexOf(composite.bodies, body);\n\t        if (position !== -1) {\n\t            Composite.removeBodyAt(composite, position);\n\t            Composite.setModified(composite, true, true, false);\n\t        }\n\t\n\t        if (deep) {\n\t            for (var i = 0; i < composite.composites.length; i++){\n\t                Composite.removeBody(composite.composites[i], body, true);\n\t            }\n\t        }\n\t\n\t        return composite;\n\t    };\n\t\n\t    /**\n\t     * Removes a body from the given composite.\n\t     * @private\n\t     * @method removeBodyAt\n\t     * @param {composite} composite\n\t     * @param {number} position\n\t     * @return {composite} The original composite with the body removed\n\t     */\n\t    Composite.removeBodyAt = function(composite, position) {\n\t        composite.bodies.splice(position, 1);\n\t        Composite.setModified(composite, true, true, false);\n\t        return composite;\n\t    };\n\t\n\t    /**\n\t     * Adds a constraint to the given composite.\n\t     * @private\n\t     * @method addConstraint\n\t     * @param {composite} composite\n\t     * @param {constraint} constraint\n\t     * @return {composite} The original composite with the constraint added\n\t     */\n\t    Composite.addConstraint = function(composite, constraint) {\n\t        composite.constraints.push(constraint);\n\t        Composite.setModified(composite, true, true, false);\n\t        return composite;\n\t    };\n\t\n\t    /**\n\t     * Removes a constraint from the given composite, and optionally searching its children recursively.\n\t     * @private\n\t     * @method removeConstraint\n\t     * @param {composite} composite\n\t     * @param {constraint} constraint\n\t     * @param {boolean} [deep=false]\n\t     * @return {composite} The original composite with the constraint removed\n\t     */\n\t    Composite.removeConstraint = function(composite, constraint, deep) {\n\t        var position = Common.indexOf(composite.constraints, constraint);\n\t        if (position !== -1) {\n\t            Composite.removeConstraintAt(composite, position);\n\t        }\n\t\n\t        if (deep) {\n\t            for (var i = 0; i < composite.composites.length; i++){\n\t                Composite.removeConstraint(composite.composites[i], constraint, true);\n\t            }\n\t        }\n\t\n\t        return composite;\n\t    };\n\t\n\t    /**\n\t     * Removes a body from the given composite.\n\t     * @private\n\t     * @method removeConstraintAt\n\t     * @param {composite} composite\n\t     * @param {number} position\n\t     * @return {composite} The original composite with the constraint removed\n\t     */\n\t    Composite.removeConstraintAt = function(composite, position) {\n\t        composite.constraints.splice(position, 1);\n\t        Composite.setModified(composite, true, true, false);\n\t        return composite;\n\t    };\n\t\n\t    /**\n\t     * Removes all bodies, constraints and composites from the given composite.\n\t     * Optionally clearing its children recursively.\n\t     * @method clear\n\t     * @param {composite} composite\n\t     * @param {boolean} keepStatic\n\t     * @param {boolean} [deep=false]\n\t     */\n\t    Composite.clear = function(composite, keepStatic, deep) {\n\t        if (deep) {\n\t            for (var i = 0; i < composite.composites.length; i++){\n\t                Composite.clear(composite.composites[i], keepStatic, true);\n\t            }\n\t        }\n\t        \n\t        if (keepStatic) {\n\t            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n\t        } else {\n\t            composite.bodies.length = 0;\n\t        }\n\t\n\t        composite.constraints.length = 0;\n\t        composite.composites.length = 0;\n\t        Composite.setModified(composite, true, true, false);\n\t\n\t        return composite;\n\t    };\n\t\n\t    /**\n\t     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n\t     * @method allBodies\n\t     * @param {composite} composite\n\t     * @return {body[]} All the bodies\n\t     */\n\t    Composite.allBodies = function(composite) {\n\t        var bodies = [].concat(composite.bodies);\n\t\n\t        for (var i = 0; i < composite.composites.length; i++)\n\t            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\t\n\t        return bodies;\n\t    };\n\t\n\t    /**\n\t     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n\t     * @method allConstraints\n\t     * @param {composite} composite\n\t     * @return {constraint[]} All the constraints\n\t     */\n\t    Composite.allConstraints = function(composite) {\n\t        var constraints = [].concat(composite.constraints);\n\t\n\t        for (var i = 0; i < composite.composites.length; i++)\n\t            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\t\n\t        return constraints;\n\t    };\n\t\n\t    /**\n\t     * Returns all composites in the given composite, including all composites in its children, recursively.\n\t     * @method allComposites\n\t     * @param {composite} composite\n\t     * @return {composite[]} All the composites\n\t     */\n\t    Composite.allComposites = function(composite) {\n\t        var composites = [].concat(composite.composites);\n\t\n\t        for (var i = 0; i < composite.composites.length; i++)\n\t            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\t\n\t        return composites;\n\t    };\n\t\n\t    /**\n\t     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n\t     * @method get\n\t     * @param {composite} composite\n\t     * @param {number} id\n\t     * @param {string} type\n\t     * @return {object} The requested object, if found\n\t     */\n\t    Composite.get = function(composite, id, type) {\n\t        var objects,\n\t            object;\n\t\n\t        switch (type) {\n\t        case 'body':\n\t            objects = Composite.allBodies(composite);\n\t            break;\n\t        case 'constraint':\n\t            objects = Composite.allConstraints(composite);\n\t            break;\n\t        case 'composite':\n\t            objects = Composite.allComposites(composite).concat(composite);\n\t            break;\n\t        }\n\t\n\t        if (!objects)\n\t            return null;\n\t\n\t        object = objects.filter(function(object) { \n\t            return object.id.toString() === id.toString(); \n\t        });\n\t\n\t        return object.length === 0 ? null : object[0];\n\t    };\n\t\n\t    /**\n\t     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n\t     * @method move\n\t     * @param {compositeA} compositeA\n\t     * @param {object[]} objects\n\t     * @param {compositeB} compositeB\n\t     * @return {composite} Returns compositeA\n\t     */\n\t    Composite.move = function(compositeA, objects, compositeB) {\n\t        Composite.remove(compositeA, objects);\n\t        Composite.add(compositeB, objects);\n\t        return compositeA;\n\t    };\n\t\n\t    /**\n\t     * Assigns new ids for all objects in the composite, recursively.\n\t     * @method rebase\n\t     * @param {composite} composite\n\t     * @return {composite} Returns composite\n\t     */\n\t    Composite.rebase = function(composite) {\n\t        var objects = Composite.allBodies(composite)\n\t                        .concat(Composite.allConstraints(composite))\n\t                        .concat(Composite.allComposites(composite));\n\t\n\t        for (var i = 0; i < objects.length; i++) {\n\t            objects[i].id = Common.nextId();\n\t        }\n\t\n\t        Composite.setModified(composite, true, true, false);\n\t\n\t        return composite;\n\t    };\n\t\n\t    /**\n\t     * Translates all children in the composite by a given vector relative to their current positions, \n\t     * without imparting any velocity.\n\t     * @method translate\n\t     * @param {composite} composite\n\t     * @param {vector} translation\n\t     * @param {bool} [recursive=true]\n\t     */\n\t    Composite.translate = function(composite, translation, recursive) {\n\t        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\t\n\t        for (var i = 0; i < bodies.length; i++) {\n\t            Body.translate(bodies[i], translation);\n\t        }\n\t\n\t        Composite.setModified(composite, true, true, false);\n\t\n\t        return composite;\n\t    };\n\t\n\t    /**\n\t     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n\t     * @method rotate\n\t     * @param {composite} composite\n\t     * @param {number} rotation\n\t     * @param {vector} point\n\t     * @param {bool} [recursive=true]\n\t     */\n\t    Composite.rotate = function(composite, rotation, point, recursive) {\n\t        var cos = Math.cos(rotation),\n\t            sin = Math.sin(rotation),\n\t            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\t\n\t        for (var i = 0; i < bodies.length; i++) {\n\t            var body = bodies[i],\n\t                dx = body.position.x - point.x,\n\t                dy = body.position.y - point.y;\n\t                \n\t            Body.setPosition(body, {\n\t                x: point.x + (dx * cos - dy * sin),\n\t                y: point.y + (dx * sin + dy * cos)\n\t            });\n\t\n\t            Body.rotate(body, rotation);\n\t        }\n\t\n\t        Composite.setModified(composite, true, true, false);\n\t\n\t        return composite;\n\t    };\n\t\n\t    /**\n\t     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n\t     * @method scale\n\t     * @param {composite} composite\n\t     * @param {number} scaleX\n\t     * @param {number} scaleY\n\t     * @param {vector} point\n\t     * @param {bool} [recursive=true]\n\t     */\n\t    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n\t        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\t\n\t        for (var i = 0; i < bodies.length; i++) {\n\t            var body = bodies[i],\n\t                dx = body.position.x - point.x,\n\t                dy = body.position.y - point.y;\n\t                \n\t            Body.setPosition(body, {\n\t                x: point.x + dx * scaleX,\n\t                y: point.y + dy * scaleY\n\t            });\n\t\n\t            Body.scale(body, scaleX, scaleY);\n\t        }\n\t\n\t        Composite.setModified(composite, true, true, false);\n\t\n\t        return composite;\n\t    };\n\t\n\t    /**\n\t     * Returns the union of the bounds of all of the composite's bodies.\n\t     * @method bounds\n\t     * @param {composite} composite The composite.\n\t     * @returns {bounds} The composite bounds.\n\t     */\n\t    Composite.bounds = function(composite) {\n\t        var bodies = Composite.allBodies(composite),\n\t            vertices = [];\n\t\n\t        for (var i = 0; i < bodies.length; i += 1) {\n\t            var body = bodies[i];\n\t            vertices.push(body.bounds.min, body.bounds.max);\n\t        }\n\t\n\t        return Bounds.create(vertices);\n\t    };\n\t\n\t    /*\n\t    *\n\t    *  Events Documentation\n\t    *\n\t    */\n\t\n\t    /**\n\t    * Fired when a call to `Composite.add` is made, before objects have been added.\n\t    *\n\t    * @event beforeAdd\n\t    * @param {} event An event object\n\t    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n\t    * @param {} event.source The source object of the event\n\t    * @param {} event.name The name of the event\n\t    */\n\t\n\t    /**\n\t    * Fired when a call to `Composite.add` is made, after objects have been added.\n\t    *\n\t    * @event afterAdd\n\t    * @param {} event An event object\n\t    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n\t    * @param {} event.source The source object of the event\n\t    * @param {} event.name The name of the event\n\t    */\n\t\n\t    /**\n\t    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n\t    *\n\t    * @event beforeRemove\n\t    * @param {} event An event object\n\t    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n\t    * @param {} event.source The source object of the event\n\t    * @param {} event.name The name of the event\n\t    */\n\t\n\t    /**\n\t    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n\t    *\n\t    * @event afterRemove\n\t    * @param {} event An event object\n\t    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n\t    * @param {} event.source The source object of the event\n\t    * @param {} event.name The name of the event\n\t    */\n\t\n\t    /*\n\t    *\n\t    *  Properties Documentation\n\t    *\n\t    */\n\t\n\t    /**\n\t     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n\t     *\n\t     * @property id\n\t     * @type number\n\t     */\n\t\n\t    /**\n\t     * A `String` denoting the type of object.\n\t     *\n\t     * @property type\n\t     * @type string\n\t     * @default \"composite\"\n\t     * @readOnly\n\t     */\n\t\n\t    /**\n\t     * An arbitrary `String` name to help the user identify and manage composites.\n\t     *\n\t     * @property label\n\t     * @type string\n\t     * @default \"Composite\"\n\t     */\n\t\n\t    /**\n\t     * A flag that specifies whether the composite has been modified during the current step.\n\t     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n\t     * If you need to change it manually, you should use the `Composite.setModified` method.\n\t     *\n\t     * @property isModified\n\t     * @type boolean\n\t     * @default false\n\t     */\n\t\n\t    /**\n\t     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n\t     *\n\t     * @property parent\n\t     * @type composite\n\t     * @default null\n\t     */\n\t\n\t    /**\n\t     * An array of `Body` that are _direct_ children of this composite.\n\t     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n\t     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n\t     *\n\t     * @property bodies\n\t     * @type body[]\n\t     * @default []\n\t     */\n\t\n\t    /**\n\t     * An array of `Constraint` that are _direct_ children of this composite.\n\t     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n\t     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n\t     *\n\t     * @property constraints\n\t     * @type constraint[]\n\t     * @default []\n\t     */\n\t\n\t    /**\n\t     * An array of `Composite` that are _direct_ children of this composite.\n\t     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n\t     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n\t     *\n\t     * @property composites\n\t     * @type composite[]\n\t     * @default []\n\t     */\n\t\n\t    /**\n\t     * An object reserved for storing plugin-specific properties.\n\t     *\n\t     * @property plugin\n\t     * @type {}\n\t     */\n\t\n\t})();\n\t\n\t},{\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"./Body\":1}],3:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.World` module contains methods for creating and manipulating the world composite.\n\t* A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\n\t* A `Matter.World` has a few additional properties including `gravity` and `bounds`.\n\t* It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\n\t* There are also a few methods here that alias those in `Matter.Composite` for easier readability.\n\t*\n\t* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\t*\n\t* @class World\n\t* @extends Composite\n\t*/\n\t\n\tvar World = {};\n\t\n\tmodule.exports = World;\n\t\n\tvar Composite = _dereq_('./Composite');\n\tvar Constraint = _dereq_('../constraint/Constraint');\n\tvar Common = _dereq_('../core/Common');\n\t\n\t(function() {\n\t\n\t    /**\n\t     * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n\t     * See the properties section below for detailed information on what you can pass via the `options` object.\n\t     * @method create\n\t     * @constructor\n\t     * @param {} options\n\t     * @return {world} A new world\n\t     */\n\t    World.create = function(options) {\n\t        var composite = Composite.create();\n\t\n\t        var defaults = {\n\t            label: 'World',\n\t            gravity: {\n\t                x: 0,\n\t                y: 1,\n\t                scale: 0.001\n\t            },\n\t            bounds: { \n\t                min: { x: -Infinity, y: -Infinity }, \n\t                max: { x: Infinity, y: Infinity } \n\t            }\n\t        };\n\t        \n\t        return Common.extend(composite, defaults, options);\n\t    };\n\t\n\t    /*\n\t    *\n\t    *  Properties Documentation\n\t    *\n\t    */\n\t\n\t    /**\n\t     * The gravity to apply on the world.\n\t     *\n\t     * @property gravity\n\t     * @type object\n\t     */\n\t\n\t    /**\n\t     * The gravity x component.\n\t     *\n\t     * @property gravity.x\n\t     * @type object\n\t     * @default 0\n\t     */\n\t\n\t    /**\n\t     * The gravity y component.\n\t     *\n\t     * @property gravity.y\n\t     * @type object\n\t     * @default 1\n\t     */\n\t\n\t    /**\n\t     * The gravity scale factor.\n\t     *\n\t     * @property gravity.scale\n\t     * @type object\n\t     * @default 0.001\n\t     */\n\t\n\t    /**\n\t     * A `Bounds` object that defines the world bounds for collision detection.\n\t     *\n\t     * @property bounds\n\t     * @type bounds\n\t     * @default { min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }\n\t     */\n\t\n\t    // World is a Composite body\n\t    // see src/module/Outro.js for these aliases:\n\t    \n\t    /**\n\t     * An alias for Composite.add\n\t     * @method add\n\t     * @param {world} world\n\t     * @param {} object\n\t     * @return {composite} The original world with the objects added\n\t     */\n\t\n\t    /**\n\t     * An alias for Composite.remove\n\t     * @method remove\n\t     * @param {world} world\n\t     * @param {} object\n\t     * @param {boolean} [deep=false]\n\t     * @return {composite} The original world with the objects removed\n\t     */\n\t\n\t    /**\n\t     * An alias for Composite.clear\n\t     * @method clear\n\t     * @param {world} world\n\t     * @param {boolean} keepStatic\n\t     */\n\t\n\t    /**\n\t     * An alias for Composite.addComposite\n\t     * @method addComposite\n\t     * @param {world} world\n\t     * @param {composite} composite\n\t     * @return {world} The original world with the objects from composite added\n\t     */\n\t    \n\t     /**\n\t      * An alias for Composite.addBody\n\t      * @method addBody\n\t      * @param {world} world\n\t      * @param {body} body\n\t      * @return {world} The original world with the body added\n\t      */\n\t\n\t     /**\n\t      * An alias for Composite.addConstraint\n\t      * @method addConstraint\n\t      * @param {world} world\n\t      * @param {constraint} constraint\n\t      * @return {world} The original world with the constraint added\n\t      */\n\t\n\t})();\n\t\n\t},{\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Composite\":2}],4:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n\t*\n\t* @class Contact\n\t*/\n\t\n\tvar Contact = {};\n\t\n\tmodule.exports = Contact;\n\t\n\t(function() {\n\t\n\t    /**\n\t     * Creates a new contact.\n\t     * @method create\n\t     * @param {vertex} vertex\n\t     * @return {contact} A new contact\n\t     */\n\t    Contact.create = function(vertex) {\n\t        return {\n\t            id: Contact.id(vertex),\n\t            vertex: vertex,\n\t            normalImpulse: 0,\n\t            tangentImpulse: 0\n\t        };\n\t    };\n\t    \n\t    /**\n\t     * Generates a contact id.\n\t     * @method id\n\t     * @param {vertex} vertex\n\t     * @return {string} Unique contactID\n\t     */\n\t    Contact.id = function(vertex) {\n\t        return vertex.body.id + '_' + vertex.index;\n\t    };\n\t\n\t})();\n\t\n\t},{}],5:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n\t*\n\t* @class Detector\n\t*/\n\t\n\t// TODO: speculative contacts\n\t\n\tvar Detector = {};\n\t\n\tmodule.exports = Detector;\n\t\n\tvar SAT = _dereq_('./SAT');\n\tvar Pair = _dereq_('./Pair');\n\tvar Bounds = _dereq_('../geometry/Bounds');\n\t\n\t(function() {\n\t\n\t    /**\n\t     * Finds all collisions given a list of pairs.\n\t     * @method collisions\n\t     * @param {pair[]} broadphasePairs\n\t     * @param {engine} engine\n\t     * @return {array} collisions\n\t     */\n\t    Detector.collisions = function(broadphasePairs, engine) {\n\t        var collisions = [],\n\t            pairsTable = engine.pairs.table;\n\t\n\t        \n\t        for (var i = 0; i < broadphasePairs.length; i++) {\n\t            var bodyA = broadphasePairs[i][0], \n\t                bodyB = broadphasePairs[i][1];\n\t\n\t            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\n\t                continue;\n\t            \n\t            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\n\t                continue;\n\t\n\t\n\t            // mid phase\n\t            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n\t                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n\t                    var partA = bodyA.parts[j];\n\t\n\t                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n\t                        var partB = bodyB.parts[k];\n\t\n\t                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\n\t                            // find a previous collision we could reuse\n\t                            var pairId = Pair.id(partA, partB),\n\t                                pair = pairsTable[pairId],\n\t                                previousCollision;\n\t\n\t                            if (pair && pair.isActive) {\n\t                                previousCollision = pair.collision;\n\t                            } else {\n\t                                previousCollision = null;\n\t                            }\n\t\n\t                            // narrow phase\n\t                            var collision = SAT.collides(partA, partB, previousCollision);\n\t\n\t\n\t                            if (collision.collided) {\n\t                                collisions.push(collision);\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        return collisions;\n\t    };\n\t\n\t    /**\n\t     * Returns `true` if both supplied collision filters will allow a collision to occur.\n\t     * See `body.collisionFilter` for more information.\n\t     * @method canCollide\n\t     * @param {} filterA\n\t     * @param {} filterB\n\t     * @return {bool} `true` if collision can occur\n\t     */\n\t    Detector.canCollide = function(filterA, filterB) {\n\t        if (filterA.group === filterB.group && filterA.group !== 0)\n\t            return filterA.group > 0;\n\t\n\t        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n\t    };\n\t\n\t})();\n\t\n\t},{\"../geometry/Bounds\":26,\"./Pair\":7,\"./SAT\":11}],6:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n\t*\n\t* @class Grid\n\t*/\n\t\n\tvar Grid = {};\n\t\n\tmodule.exports = Grid;\n\t\n\tvar Pair = _dereq_('./Pair');\n\tvar Detector = _dereq_('./Detector');\n\tvar Common = _dereq_('../core/Common');\n\t\n\t(function() {\n\t\n\t    /**\n\t     * Creates a new grid.\n\t     * @method create\n\t     * @param {} options\n\t     * @return {grid} A new grid\n\t     */\n\t    Grid.create = function(options) {\n\t        var defaults = {\n\t            controller: Grid,\n\t            detector: Detector.collisions,\n\t            buckets: {},\n\t            pairs: {},\n\t            pairsList: [],\n\t            bucketWidth: 48,\n\t            bucketHeight: 48\n\t        };\n\t\n\t        return Common.extend(defaults, options);\n\t    };\n\t\n\t    /**\n\t     * The width of a single grid bucket.\n\t     *\n\t     * @property bucketWidth\n\t     * @type number\n\t     * @default 48\n\t     */\n\t\n\t    /**\n\t     * The height of a single grid bucket.\n\t     *\n\t     * @property bucketHeight\n\t     * @type number\n\t     * @default 48\n\t     */\n\t\n\t    /**\n\t     * Updates the grid.\n\t     * @method update\n\t     * @param {grid} grid\n\t     * @param {body[]} bodies\n\t     * @param {engine} engine\n\t     * @param {boolean} forceUpdate\n\t     */\n\t    Grid.update = function(grid, bodies, engine, forceUpdate) {\n\t        var i, col, row,\n\t            world = engine.world,\n\t            buckets = grid.buckets,\n\t            bucket,\n\t            bucketId,\n\t            gridChanged = false;\n\t\n\t\n\t        for (i = 0; i < bodies.length; i++) {\n\t            var body = bodies[i];\n\t\n\t            if (body.isSleeping && !forceUpdate)\n\t                continue;\n\t\n\t            // don't update out of world bodies\n\t            if (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n\t                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)\n\t                continue;\n\t\n\t            var newRegion = Grid._getRegion(grid, body);\n\t\n\t            // if the body has changed grid region\n\t            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\t\n\t\n\t                if (!body.region || forceUpdate)\n\t                    body.region = newRegion;\n\t\n\t                var union = Grid._regionUnion(newRegion, body.region);\n\t\n\t                // update grid buckets affected by region change\n\t                // iterate over the union of both regions\n\t                for (col = union.startCol; col <= union.endCol; col++) {\n\t                    for (row = union.startRow; row <= union.endRow; row++) {\n\t                        bucketId = Grid._getBucketId(col, row);\n\t                        bucket = buckets[bucketId];\n\t\n\t                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n\t                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\t\n\t                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n\t                                                && row >= body.region.startRow && row <= body.region.endRow);\n\t\n\t                        // remove from old region buckets\n\t                        if (!isInsideNewRegion && isInsideOldRegion) {\n\t                            if (isInsideOldRegion) {\n\t                                if (bucket)\n\t                                    Grid._bucketRemoveBody(grid, bucket, body);\n\t                            }\n\t                        }\n\t\n\t                        // add to new region buckets\n\t                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n\t                            if (!bucket)\n\t                                bucket = Grid._createBucket(buckets, bucketId);\n\t                            Grid._bucketAddBody(grid, bucket, body);\n\t                        }\n\t                    }\n\t                }\n\t\n\t                // set the new region\n\t                body.region = newRegion;\n\t\n\t                // flag changes so we can update pairs\n\t                gridChanged = true;\n\t            }\n\t        }\n\t\n\t        // update pairs list only if pairs changed (i.e. a body changed region)\n\t        if (gridChanged)\n\t            grid.pairsList = Grid._createActivePairsList(grid);\n\t    };\n\t\n\t    /**\n\t     * Clears the grid.\n\t     * @method clear\n\t     * @param {grid} grid\n\t     */\n\t    Grid.clear = function(grid) {\n\t        grid.buckets = {};\n\t        grid.pairs = {};\n\t        grid.pairsList = [];\n\t    };\n\t\n\t    /**\n\t     * Finds the union of two regions.\n\t     * @method _regionUnion\n\t     * @private\n\t     * @param {} regionA\n\t     * @param {} regionB\n\t     * @return {} region\n\t     */\n\t    Grid._regionUnion = function(regionA, regionB) {\n\t        var startCol = Math.min(regionA.startCol, regionB.startCol),\n\t            endCol = Math.max(regionA.endCol, regionB.endCol),\n\t            startRow = Math.min(regionA.startRow, regionB.startRow),\n\t            endRow = Math.max(regionA.endRow, regionB.endRow);\n\t\n\t        return Grid._createRegion(startCol, endCol, startRow, endRow);\n\t    };\n\t\n\t    /**\n\t     * Gets the region a given body falls in for a given grid.\n\t     * @method _getRegion\n\t     * @private\n\t     * @param {} grid\n\t     * @param {} body\n\t     * @return {} region\n\t     */\n\t    Grid._getRegion = function(grid, body) {\n\t        var bounds = body.bounds,\n\t            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n\t            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n\t            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n\t            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\t\n\t        return Grid._createRegion(startCol, endCol, startRow, endRow);\n\t    };\n\t\n\t    /**\n\t     * Creates a region.\n\t     * @method _createRegion\n\t     * @private\n\t     * @param {} startCol\n\t     * @param {} endCol\n\t     * @param {} startRow\n\t     * @param {} endRow\n\t     * @return {} region\n\t     */\n\t    Grid._createRegion = function(startCol, endCol, startRow, endRow) {\n\t        return { \n\t            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n\t            startCol: startCol, \n\t            endCol: endCol, \n\t            startRow: startRow, \n\t            endRow: endRow \n\t        };\n\t    };\n\t\n\t    /**\n\t     * Gets the bucket id at the given position.\n\t     * @method _getBucketId\n\t     * @private\n\t     * @param {} column\n\t     * @param {} row\n\t     * @return {string} bucket id\n\t     */\n\t    Grid._getBucketId = function(column, row) {\n\t        return 'C' + column + 'R' + row;\n\t    };\n\t\n\t    /**\n\t     * Creates a bucket.\n\t     * @method _createBucket\n\t     * @private\n\t     * @param {} buckets\n\t     * @param {} bucketId\n\t     * @return {} bucket\n\t     */\n\t    Grid._createBucket = function(buckets, bucketId) {\n\t        var bucket = buckets[bucketId] = [];\n\t        return bucket;\n\t    };\n\t\n\t    /**\n\t     * Adds a body to a bucket.\n\t     * @method _bucketAddBody\n\t     * @private\n\t     * @param {} grid\n\t     * @param {} bucket\n\t     * @param {} body\n\t     */\n\t    Grid._bucketAddBody = function(grid, bucket, body) {\n\t        // add new pairs\n\t        for (var i = 0; i < bucket.length; i++) {\n\t            var bodyB = bucket[i];\n\t\n\t            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n\t                continue;\n\t\n\t            // keep track of the number of buckets the pair exists in\n\t            // important for Grid.update to work\n\t            var pairId = Pair.id(body, bodyB),\n\t                pair = grid.pairs[pairId];\n\t\n\t            if (pair) {\n\t                pair[2] += 1;\n\t            } else {\n\t                grid.pairs[pairId] = [body, bodyB, 1];\n\t            }\n\t        }\n\t\n\t        // add to bodies (after pairs, otherwise pairs with self)\n\t        bucket.push(body);\n\t    };\n\t\n\t    /**\n\t     * Removes a body from a bucket.\n\t     * @method _bucketRemoveBody\n\t     * @private\n\t     * @param {} grid\n\t     * @param {} bucket\n\t     * @param {} body\n\t     */\n\t    Grid._bucketRemoveBody = function(grid, bucket, body) {\n\t        // remove from bucket\n\t        bucket.splice(Common.indexOf(bucket, body), 1);\n\t\n\t        // update pair counts\n\t        for (var i = 0; i < bucket.length; i++) {\n\t            // keep track of the number of buckets the pair exists in\n\t            // important for _createActivePairsList to work\n\t            var bodyB = bucket[i],\n\t                pairId = Pair.id(body, bodyB),\n\t                pair = grid.pairs[pairId];\n\t\n\t            if (pair)\n\t                pair[2] -= 1;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Generates a list of the active pairs in the grid.\n\t     * @method _createActivePairsList\n\t     * @private\n\t     * @param {} grid\n\t     * @return [] pairs\n\t     */\n\t    Grid._createActivePairsList = function(grid) {\n\t        var pairKeys,\n\t            pair,\n\t            pairs = [];\n\t\n\t        // grid.pairs is used as a hashmap\n\t        pairKeys = Common.keys(grid.pairs);\n\t\n\t        // iterate over grid.pairs\n\t        for (var k = 0; k < pairKeys.length; k++) {\n\t            pair = grid.pairs[pairKeys[k]];\n\t\n\t            // if pair exists in at least one bucket\n\t            // it is a pair that needs further collision testing so push it\n\t            if (pair[2] > 0) {\n\t                pairs.push(pair);\n\t            } else {\n\t                delete grid.pairs[pairKeys[k]];\n\t            }\n\t        }\n\t\n\t        return pairs;\n\t    };\n\t    \n\t})();\n\t\n\t},{\"../core/Common\":14,\"./Detector\":5,\"./Pair\":7}],7:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n\t*\n\t* @class Pair\n\t*/\n\t\n\tvar Pair = {};\n\t\n\tmodule.exports = Pair;\n\t\n\tvar Contact = _dereq_('./Contact');\n\t\n\t(function() {\n\t    \n\t    /**\n\t     * Creates a pair.\n\t     * @method create\n\t     * @param {collision} collision\n\t     * @param {number} timestamp\n\t     * @return {pair} A new pair\n\t     */\n\t    Pair.create = function(collision, timestamp) {\n\t        var bodyA = collision.bodyA,\n\t            bodyB = collision.bodyB,\n\t            parentA = collision.parentA,\n\t            parentB = collision.parentB;\n\t\n\t        var pair = {\n\t            id: Pair.id(bodyA, bodyB),\n\t            bodyA: bodyA,\n\t            bodyB: bodyB,\n\t            contacts: {},\n\t            activeContacts: [],\n\t            separation: 0,\n\t            isActive: true,\n\t            isSensor: bodyA.isSensor || bodyB.isSensor,\n\t            timeCreated: timestamp,\n\t            timeUpdated: timestamp,\n\t            inverseMass: parentA.inverseMass + parentB.inverseMass,\n\t            friction: Math.min(parentA.friction, parentB.friction),\n\t            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n\t            restitution: Math.max(parentA.restitution, parentB.restitution),\n\t            slop: Math.max(parentA.slop, parentB.slop)\n\t        };\n\t\n\t        Pair.update(pair, collision, timestamp);\n\t\n\t        return pair;\n\t    };\n\t\n\t    /**\n\t     * Updates a pair given a collision.\n\t     * @method update\n\t     * @param {pair} pair\n\t     * @param {collision} collision\n\t     * @param {number} timestamp\n\t     */\n\t    Pair.update = function(pair, collision, timestamp) {\n\t        var contacts = pair.contacts,\n\t            supports = collision.supports,\n\t            activeContacts = pair.activeContacts,\n\t            parentA = collision.parentA,\n\t            parentB = collision.parentB;\n\t        \n\t        pair.collision = collision;\n\t        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n\t        pair.friction = Math.min(parentA.friction, parentB.friction);\n\t        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n\t        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n\t        pair.slop = Math.max(parentA.slop, parentB.slop);\n\t        activeContacts.length = 0;\n\t        \n\t        if (collision.collided) {\n\t            for (var i = 0; i < supports.length; i++) {\n\t                var support = supports[i],\n\t                    contactId = Contact.id(support),\n\t                    contact = contacts[contactId];\n\t\n\t                if (contact) {\n\t                    activeContacts.push(contact);\n\t                } else {\n\t                    activeContacts.push(contacts[contactId] = Contact.create(support));\n\t                }\n\t            }\n\t\n\t            pair.separation = collision.depth;\n\t            Pair.setActive(pair, true, timestamp);\n\t        } else {\n\t            if (pair.isActive === true)\n\t                Pair.setActive(pair, false, timestamp);\n\t        }\n\t    };\n\t    \n\t    /**\n\t     * Set a pair as active or inactive.\n\t     * @method setActive\n\t     * @param {pair} pair\n\t     * @param {bool} isActive\n\t     * @param {number} timestamp\n\t     */\n\t    Pair.setActive = function(pair, isActive, timestamp) {\n\t        if (isActive) {\n\t            pair.isActive = true;\n\t            pair.timeUpdated = timestamp;\n\t        } else {\n\t            pair.isActive = false;\n\t            pair.activeContacts.length = 0;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Get the id for the given pair.\n\t     * @method id\n\t     * @param {body} bodyA\n\t     * @param {body} bodyB\n\t     * @return {string} Unique pairId\n\t     */\n\t    Pair.id = function(bodyA, bodyB) {\n\t        if (bodyA.id < bodyB.id) {\n\t            return 'A' + bodyA.id + 'B' + bodyB.id;\n\t        } else {\n\t            return 'A' + bodyB.id + 'B' + bodyA.id;\n\t        }\n\t    };\n\t\n\t})();\n\t\n\t},{\"./Contact\":4}],8:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n\t*\n\t* @class Pairs\n\t*/\n\t\n\tvar Pairs = {};\n\t\n\tmodule.exports = Pairs;\n\t\n\tvar Pair = _dereq_('./Pair');\n\tvar Common = _dereq_('../core/Common');\n\t\n\t(function() {\n\t    \n\t    Pairs._pairMaxIdleLife = 1000;\n\t\n\t    /**\n\t     * Creates a new pairs structure.\n\t     * @method create\n\t     * @param {object} options\n\t     * @return {pairs} A new pairs structure\n\t     */\n\t    Pairs.create = function(options) {\n\t        return Common.extend({ \n\t            table: {},\n\t            list: [],\n\t            collisionStart: [],\n\t            collisionActive: [],\n\t            collisionEnd: []\n\t        }, options);\n\t    };\n\t\n\t    /**\n\t     * Updates pairs given a list of collisions.\n\t     * @method update\n\t     * @param {object} pairs\n\t     * @param {collision[]} collisions\n\t     * @param {number} timestamp\n\t     */\n\t    Pairs.update = function(pairs, collisions, timestamp) {\n\t        var pairsList = pairs.list,\n\t            pairsTable = pairs.table,\n\t            collisionStart = pairs.collisionStart,\n\t            collisionEnd = pairs.collisionEnd,\n\t            collisionActive = pairs.collisionActive,\n\t            activePairIds = [],\n\t            collision,\n\t            pairId,\n\t            pair,\n\t            i;\n\t\n\t        // clear collision state arrays, but maintain old reference\n\t        collisionStart.length = 0;\n\t        collisionEnd.length = 0;\n\t        collisionActive.length = 0;\n\t\n\t        for (i = 0; i < collisions.length; i++) {\n\t            collision = collisions[i];\n\t\n\t            if (collision.collided) {\n\t                pairId = Pair.id(collision.bodyA, collision.bodyB);\n\t                activePairIds.push(pairId);\n\t\n\t                pair = pairsTable[pairId];\n\t                \n\t                if (pair) {\n\t                    // pair already exists (but may or may not be active)\n\t                    if (pair.isActive) {\n\t                        // pair exists and is active\n\t                        collisionActive.push(pair);\n\t                    } else {\n\t                        // pair exists but was inactive, so a collision has just started again\n\t                        collisionStart.push(pair);\n\t                    }\n\t\n\t                    // update the pair\n\t                    Pair.update(pair, collision, timestamp);\n\t                } else {\n\t                    // pair did not exist, create a new pair\n\t                    pair = Pair.create(collision, timestamp);\n\t                    pairsTable[pairId] = pair;\n\t\n\t                    // push the new pair\n\t                    collisionStart.push(pair);\n\t                    pairsList.push(pair);\n\t                }\n\t            }\n\t        }\n\t\n\t        // deactivate previously active pairs that are now inactive\n\t        for (i = 0; i < pairsList.length; i++) {\n\t            pair = pairsList[i];\n\t            if (pair.isActive && Common.indexOf(activePairIds, pair.id) === -1) {\n\t                Pair.setActive(pair, false, timestamp);\n\t                collisionEnd.push(pair);\n\t            }\n\t        }\n\t    };\n\t    \n\t    /**\n\t     * Finds and removes pairs that have been inactive for a set amount of time.\n\t     * @method removeOld\n\t     * @param {object} pairs\n\t     * @param {number} timestamp\n\t     */\n\t    Pairs.removeOld = function(pairs, timestamp) {\n\t        var pairsList = pairs.list,\n\t            pairsTable = pairs.table,\n\t            indexesToRemove = [],\n\t            pair,\n\t            collision,\n\t            pairIndex,\n\t            i;\n\t\n\t        for (i = 0; i < pairsList.length; i++) {\n\t            pair = pairsList[i];\n\t            collision = pair.collision;\n\t            \n\t            // never remove sleeping pairs\n\t            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n\t                pair.timeUpdated = timestamp;\n\t                continue;\n\t            }\n\t\n\t            // if pair is inactive for too long, mark it to be removed\n\t            if (timestamp - pair.timeUpdated > Pairs._pairMaxIdleLife) {\n\t                indexesToRemove.push(i);\n\t            }\n\t        }\n\t\n\t        // remove marked pairs\n\t        for (i = 0; i < indexesToRemove.length; i++) {\n\t            pairIndex = indexesToRemove[i] - i;\n\t            pair = pairsList[pairIndex];\n\t            delete pairsTable[pair.id];\n\t            pairsList.splice(pairIndex, 1);\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Clears the given pairs structure.\n\t     * @method clear\n\t     * @param {pairs} pairs\n\t     * @return {pairs} pairs\n\t     */\n\t    Pairs.clear = function(pairs) {\n\t        pairs.table = {};\n\t        pairs.list.length = 0;\n\t        pairs.collisionStart.length = 0;\n\t        pairs.collisionActive.length = 0;\n\t        pairs.collisionEnd.length = 0;\n\t        return pairs;\n\t    };\n\t\n\t})();\n\t\n\t},{\"../core/Common\":14,\"./Pair\":7}],9:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.Query` module contains methods for performing collision queries.\n\t*\n\t* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\t*\n\t* @class Query\n\t*/\n\t\n\tvar Query = {};\n\t\n\tmodule.exports = Query;\n\t\n\tvar Vector = _dereq_('../geometry/Vector');\n\tvar SAT = _dereq_('./SAT');\n\tvar Bounds = _dereq_('../geometry/Bounds');\n\tvar Bodies = _dereq_('../factory/Bodies');\n\tvar Vertices = _dereq_('../geometry/Vertices');\n\t\n\t(function() {\n\t\n\t    /**\n\t     * Returns a list of collisions between `body` and `bodies`.\n\t     * @method collides\n\t     * @param {body} body\n\t     * @param {body[]} bodies\n\t     * @return {object[]} Collisions\n\t     */\n\t    Query.collides = function(body, bodies) {\n\t        var collisions = [];\n\t\n\t        for (var i = 0; i < bodies.length; i++) {\n\t            var bodyA = bodies[i];\n\t            \n\t            if (Bounds.overlaps(bodyA.bounds, body.bounds)) {\n\t                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n\t                    var part = bodyA.parts[j];\n\t\n\t                    if (Bounds.overlaps(part.bounds, body.bounds)) {\n\t                        var collision = SAT.collides(part, body);\n\t\n\t                        if (collision.collided) {\n\t                            collisions.push(collision);\n\t                            break;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        return collisions;\n\t    };\n\t\n\t    /**\n\t     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n\t     * @method ray\n\t     * @param {body[]} bodies\n\t     * @param {vector} startPoint\n\t     * @param {vector} endPoint\n\t     * @param {number} [rayWidth]\n\t     * @return {object[]} Collisions\n\t     */\n\t    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n\t        rayWidth = rayWidth || 1e-100;\n\t\n\t        var rayAngle = Vector.angle(startPoint, endPoint),\n\t            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n\t            rayX = (endPoint.x + startPoint.x) * 0.5,\n\t            rayY = (endPoint.y + startPoint.y) * 0.5,\n\t            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n\t            collisions = Query.collides(ray, bodies);\n\t\n\t        for (var i = 0; i < collisions.length; i += 1) {\n\t            var collision = collisions[i];\n\t            collision.body = collision.bodyB = collision.bodyA;            \n\t        }\n\t\n\t        return collisions;\n\t    };\n\t\n\t    /**\n\t     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n\t     * @method region\n\t     * @param {body[]} bodies\n\t     * @param {bounds} bounds\n\t     * @param {bool} [outside=false]\n\t     * @return {body[]} The bodies matching the query\n\t     */\n\t    Query.region = function(bodies, bounds, outside) {\n\t        var result = [];\n\t\n\t        for (var i = 0; i < bodies.length; i++) {\n\t            var body = bodies[i],\n\t                overlaps = Bounds.overlaps(body.bounds, bounds);\n\t            if ((overlaps && !outside) || (!overlaps && outside))\n\t                result.push(body);\n\t        }\n\t\n\t        return result;\n\t    };\n\t\n\t    /**\n\t     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n\t     * @method point\n\t     * @param {body[]} bodies\n\t     * @param {vector} point\n\t     * @return {body[]} The bodies matching the query\n\t     */\n\t    Query.point = function(bodies, point) {\n\t        var result = [];\n\t\n\t        for (var i = 0; i < bodies.length; i++) {\n\t            var body = bodies[i];\n\t            \n\t            if (Bounds.contains(body.bounds, point)) {\n\t                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n\t                    var part = body.parts[j];\n\t\n\t                    if (Bounds.contains(part.bounds, point)\n\t                        && Vertices.contains(part.vertices, point)) {\n\t                        result.push(body);\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        return result;\n\t    };\n\t\n\t})();\n\t\n\t},{\"../factory/Bodies\":23,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"./SAT\":11}],10:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.Resolver` module contains methods for resolving collision pairs.\n\t*\n\t* @class Resolver\n\t*/\n\t\n\tvar Resolver = {};\n\t\n\tmodule.exports = Resolver;\n\t\n\tvar Vertices = _dereq_('../geometry/Vertices');\n\tvar Vector = _dereq_('../geometry/Vector');\n\tvar Common = _dereq_('../core/Common');\n\tvar Bounds = _dereq_('../geometry/Bounds');\n\t\n\t(function() {\n\t\n\t    Resolver._restingThresh = 4;\n\t    Resolver._restingThreshTangent = 6;\n\t    Resolver._positionDampen = 0.9;\n\t    Resolver._positionWarming = 0.8;\n\t    Resolver._frictionNormalMultiplier = 5;\n\t\n\t    /**\n\t     * Prepare pairs for position solving.\n\t     * @method preSolvePosition\n\t     * @param {pair[]} pairs\n\t     */\n\t    Resolver.preSolvePosition = function(pairs) {\n\t        var i,\n\t            pair,\n\t            activeCount;\n\t\n\t        // find total contacts on each body\n\t        for (i = 0; i < pairs.length; i++) {\n\t            pair = pairs[i];\n\t            \n\t            if (!pair.isActive)\n\t                continue;\n\t            \n\t            activeCount = pair.activeContacts.length;\n\t            pair.collision.parentA.totalContacts += activeCount;\n\t            pair.collision.parentB.totalContacts += activeCount;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Find a solution for pair positions.\n\t     * @method solvePosition\n\t     * @param {pair[]} pairs\n\t     * @param {number} timeScale\n\t     */\n\t    Resolver.solvePosition = function(pairs, timeScale) {\n\t        var i,\n\t            pair,\n\t            collision,\n\t            bodyA,\n\t            bodyB,\n\t            normal,\n\t            bodyBtoA,\n\t            contactShare,\n\t            positionImpulse,\n\t            contactCount = {},\n\t            tempA = Vector._temp[0],\n\t            tempB = Vector._temp[1],\n\t            tempC = Vector._temp[2],\n\t            tempD = Vector._temp[3];\n\t\n\t        // find impulses required to resolve penetration\n\t        for (i = 0; i < pairs.length; i++) {\n\t            pair = pairs[i];\n\t            \n\t            if (!pair.isActive || pair.isSensor)\n\t                continue;\n\t\n\t            collision = pair.collision;\n\t            bodyA = collision.parentA;\n\t            bodyB = collision.parentB;\n\t            normal = collision.normal;\n\t\n\t            // get current separation between body edges involved in collision\n\t            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA), \n\t                                    Vector.add(bodyA.positionImpulse, \n\t                                        Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n\t\n\t            pair.separation = Vector.dot(normal, bodyBtoA);\n\t        }\n\t        \n\t        for (i = 0; i < pairs.length; i++) {\n\t            pair = pairs[i];\n\t\n\t            if (!pair.isActive || pair.isSensor)\n\t                continue;\n\t            \n\t            collision = pair.collision;\n\t            bodyA = collision.parentA;\n\t            bodyB = collision.parentB;\n\t            normal = collision.normal;\n\t            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\t\n\t            if (bodyA.isStatic || bodyB.isStatic)\n\t                positionImpulse *= 2;\n\t            \n\t            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n\t                contactShare = Resolver._positionDampen / bodyA.totalContacts;\n\t                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n\t                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n\t            }\n\t\n\t            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n\t                contactShare = Resolver._positionDampen / bodyB.totalContacts;\n\t                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n\t                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n\t            }\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Apply position resolution.\n\t     * @method postSolvePosition\n\t     * @param {body[]} bodies\n\t     */\n\t    Resolver.postSolvePosition = function(bodies) {\n\t        for (var i = 0; i < bodies.length; i++) {\n\t            var body = bodies[i];\n\t\n\t            // reset contact count\n\t            body.totalContacts = 0;\n\t\n\t            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n\t                // update body geometry\n\t                for (var j = 0; j < body.parts.length; j++) {\n\t                    var part = body.parts[j];\n\t                    Vertices.translate(part.vertices, body.positionImpulse);\n\t                    Bounds.update(part.bounds, part.vertices, body.velocity);\n\t                    part.position.x += body.positionImpulse.x;\n\t                    part.position.y += body.positionImpulse.y;\n\t                }\n\t\n\t                // move the body without changing velocity\n\t                body.positionPrev.x += body.positionImpulse.x;\n\t                body.positionPrev.y += body.positionImpulse.y;\n\t\n\t                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n\t                    // reset cached impulse if the body has velocity along it\n\t                    body.positionImpulse.x = 0;\n\t                    body.positionImpulse.y = 0;\n\t                } else {\n\t                    // warm the next iteration\n\t                    body.positionImpulse.x *= Resolver._positionWarming;\n\t                    body.positionImpulse.y *= Resolver._positionWarming;\n\t                }\n\t            }\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Prepare pairs for velocity solving.\n\t     * @method preSolveVelocity\n\t     * @param {pair[]} pairs\n\t     */\n\t    Resolver.preSolveVelocity = function(pairs) {\n\t        var i,\n\t            j,\n\t            pair,\n\t            contacts,\n\t            collision,\n\t            bodyA,\n\t            bodyB,\n\t            normal,\n\t            tangent,\n\t            contact,\n\t            contactVertex,\n\t            normalImpulse,\n\t            tangentImpulse,\n\t            offset,\n\t            impulse = Vector._temp[0],\n\t            tempA = Vector._temp[1];\n\t        \n\t        for (i = 0; i < pairs.length; i++) {\n\t            pair = pairs[i];\n\t            \n\t            if (!pair.isActive || pair.isSensor)\n\t                continue;\n\t            \n\t            contacts = pair.activeContacts;\n\t            collision = pair.collision;\n\t            bodyA = collision.parentA;\n\t            bodyB = collision.parentB;\n\t            normal = collision.normal;\n\t            tangent = collision.tangent;\n\t\n\t            // resolve each contact\n\t            for (j = 0; j < contacts.length; j++) {\n\t                contact = contacts[j];\n\t                contactVertex = contact.vertex;\n\t                normalImpulse = contact.normalImpulse;\n\t                tangentImpulse = contact.tangentImpulse;\n\t\n\t                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n\t                    // total impulse from contact\n\t                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n\t                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n\t                    \n\t                    // apply impulse from contact\n\t                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n\t                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\n\t                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n\t                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n\t                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n\t                    }\n\t\n\t                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n\t                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\n\t                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n\t                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n\t                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Find a solution for pair velocities.\n\t     * @method solveVelocity\n\t     * @param {pair[]} pairs\n\t     * @param {number} timeScale\n\t     */\n\t    Resolver.solveVelocity = function(pairs, timeScale) {\n\t        var timeScaleSquared = timeScale * timeScale,\n\t            impulse = Vector._temp[0],\n\t            tempA = Vector._temp[1],\n\t            tempB = Vector._temp[2],\n\t            tempC = Vector._temp[3],\n\t            tempD = Vector._temp[4],\n\t            tempE = Vector._temp[5];\n\t        \n\t        for (var i = 0; i < pairs.length; i++) {\n\t            var pair = pairs[i];\n\t            \n\t            if (!pair.isActive || pair.isSensor)\n\t                continue;\n\t            \n\t            var collision = pair.collision,\n\t                bodyA = collision.parentA,\n\t                bodyB = collision.parentB,\n\t                normal = collision.normal,\n\t                tangent = collision.tangent,\n\t                contacts = pair.activeContacts,\n\t                contactShare = 1 / contacts.length;\n\t\n\t            // update body velocities\n\t            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n\t            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n\t            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n\t            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n\t            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n\t            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\t\n\t            // resolve each contact\n\t            for (var j = 0; j < contacts.length; j++) {\n\t                var contact = contacts[j],\n\t                    contactVertex = contact.vertex,\n\t                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n\t                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n\t                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n\t                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD), \n\t                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n\t                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\t\n\t                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n\t                    tangentSpeed = Math.abs(tangentVelocity),\n\t                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\t\n\t                // raw impulses\n\t                var normalImpulse = (1 + pair.restitution) * normalVelocity,\n\t                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\n\t\n\t                // coulomb friction\n\t                var tangentImpulse = tangentVelocity,\n\t                    maxFriction = Infinity;\n\t\n\t                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n\t                    maxFriction = tangentSpeed;\n\t                    tangentImpulse = Common.clamp(\n\t                        pair.friction * tangentVelocityDirection * timeScaleSquared,\n\t                        -maxFriction, maxFriction\n\t                    );\n\t                }\n\t\n\t                // modify impulses accounting for mass, inertia and offset\n\t                var oAcN = Vector.cross(offsetA, normal),\n\t                    oBcN = Vector.cross(offsetB, normal),\n\t                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\n\t\n\t                normalImpulse *= share;\n\t                tangentImpulse *= share;\n\t\n\t                // handle high velocity and resting collisions separately\n\t                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n\t                    // high normal velocity so clear cached contact normal impulse\n\t                    contact.normalImpulse = 0;\n\t                } else {\n\t                    // solve resting collision constraints using Erin Catto's method (GDC08)\n\t                    // impulse constraint tends to 0\n\t                    var contactNormalImpulse = contact.normalImpulse;\n\t                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n\t                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n\t                }\n\t\n\t                // handle high velocity and resting collisions separately\n\t                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n\t                    // high tangent velocity so clear cached contact tangent impulse\n\t                    contact.tangentImpulse = 0;\n\t                } else {\n\t                    // solve resting collision constraints using Erin Catto's method (GDC08)\n\t                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n\t                    var contactTangentImpulse = contact.tangentImpulse;\n\t                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n\t                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n\t                }\n\t\n\t                // total impulse from contact\n\t                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n\t                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n\t                \n\t                // apply impulse from contact\n\t                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n\t                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n\t                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n\t                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n\t                }\n\t\n\t                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n\t                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n\t                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n\t                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n\t                }\n\t            }\n\t        }\n\t    };\n\t\n\t})();\n\t\n\t},{\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],11:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n\t*\n\t* @class SAT\n\t*/\n\t\n\t// TODO: true circles and curves\n\t\n\tvar SAT = {};\n\t\n\tmodule.exports = SAT;\n\t\n\tvar Vertices = _dereq_('../geometry/Vertices');\n\tvar Vector = _dereq_('../geometry/Vector');\n\t\n\t(function() {\n\t\n\t    /**\n\t     * Detect collision between two bodies using the Separating Axis Theorem.\n\t     * @method collides\n\t     * @param {body} bodyA\n\t     * @param {body} bodyB\n\t     * @param {collision} previousCollision\n\t     * @return {collision} collision\n\t     */\n\t    SAT.collides = function(bodyA, bodyB, previousCollision) {\n\t        var overlapAB,\n\t            overlapBA, \n\t            minOverlap,\n\t            collision,\n\t            canReusePrevCol = false;\n\t\n\t        if (previousCollision) {\n\t            // estimate total motion\n\t            var parentA = bodyA.parent,\n\t                parentB = bodyB.parent,\n\t                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\n\t                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\n\t\n\t            // we may be able to (partially) reuse collision result \n\t            // but only safe if collision was resting\n\t            canReusePrevCol = previousCollision && previousCollision.collided && motion < 0.2;\n\t\n\t            // reuse collision object\n\t            collision = previousCollision;\n\t        } else {\n\t            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n\t        }\n\t\n\t        if (previousCollision && canReusePrevCol) {\n\t            // if we can reuse the collision result\n\t            // we only need to test the previously found axis\n\t            var axisBodyA = collision.axisBody,\n\t                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n\t                axes = [axisBodyA.axes[previousCollision.axisNumber]];\n\t\n\t            minOverlap = SAT._overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n\t            collision.reused = true;\n\t\n\t            if (minOverlap.overlap <= 0) {\n\t                collision.collided = false;\n\t                return collision;\n\t            }\n\t        } else {\n\t            // if we can't reuse a result, perform a full SAT test\n\t\n\t            overlapAB = SAT._overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\t\n\t            if (overlapAB.overlap <= 0) {\n\t                collision.collided = false;\n\t                return collision;\n\t            }\n\t\n\t            overlapBA = SAT._overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\t\n\t            if (overlapBA.overlap <= 0) {\n\t                collision.collided = false;\n\t                return collision;\n\t            }\n\t\n\t            if (overlapAB.overlap < overlapBA.overlap) {\n\t                minOverlap = overlapAB;\n\t                collision.axisBody = bodyA;\n\t            } else {\n\t                minOverlap = overlapBA;\n\t                collision.axisBody = bodyB;\n\t            }\n\t\n\t            // important for reuse later\n\t            collision.axisNumber = minOverlap.axisNumber;\n\t        }\n\t\n\t        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n\t        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n\t        collision.collided = true;\n\t        collision.depth = minOverlap.overlap;\n\t        collision.parentA = collision.bodyA.parent;\n\t        collision.parentB = collision.bodyB.parent;\n\t        \n\t        bodyA = collision.bodyA;\n\t        bodyB = collision.bodyB;\n\t\n\t        // ensure normal is facing away from bodyA\n\t        if (Vector.dot(minOverlap.axis, Vector.sub(bodyB.position, bodyA.position)) < 0) {\n\t            collision.normal = {\n\t                x: minOverlap.axis.x,\n\t                y: minOverlap.axis.y\n\t            };\n\t        } else {\n\t            collision.normal = {\n\t                x: -minOverlap.axis.x,\n\t                y: -minOverlap.axis.y\n\t            };\n\t        }\n\t\n\t        collision.tangent = Vector.perp(collision.normal);\n\t\n\t        collision.penetration = collision.penetration || {};\n\t        collision.penetration.x = collision.normal.x * collision.depth;\n\t        collision.penetration.y = collision.normal.y * collision.depth; \n\t\n\t        // find support points, there is always either exactly one or two\n\t        var verticesB = SAT._findSupports(bodyA, bodyB, collision.normal),\n\t            supports = [];\n\t\n\t        // find the supports from bodyB that are inside bodyA\n\t        if (Vertices.contains(bodyA.vertices, verticesB[0]))\n\t            supports.push(verticesB[0]);\n\t\n\t        if (Vertices.contains(bodyA.vertices, verticesB[1]))\n\t            supports.push(verticesB[1]);\n\t\n\t        // find the supports from bodyA that are inside bodyB\n\t        if (supports.length < 2) {\n\t            var verticesA = SAT._findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n\t                \n\t            if (Vertices.contains(bodyB.vertices, verticesA[0]))\n\t                supports.push(verticesA[0]);\n\t\n\t            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\n\t                supports.push(verticesA[1]);\n\t        }\n\t\n\t        // account for the edge case of overlapping but no vertex containment\n\t        if (supports.length < 1)\n\t            supports = [verticesB[0]];\n\t        \n\t        collision.supports = supports;\n\t\n\t        return collision;\n\t    };\n\t\n\t    /**\n\t     * Find the overlap between two sets of vertices.\n\t     * @method _overlapAxes\n\t     * @private\n\t     * @param {} verticesA\n\t     * @param {} verticesB\n\t     * @param {} axes\n\t     * @return result\n\t     */\n\t    SAT._overlapAxes = function(verticesA, verticesB, axes) {\n\t        var projectionA = Vector._temp[0], \n\t            projectionB = Vector._temp[1],\n\t            result = { overlap: Number.MAX_VALUE },\n\t            overlap,\n\t            axis;\n\t\n\t        for (var i = 0; i < axes.length; i++) {\n\t            axis = axes[i];\n\t\n\t            SAT._projectToAxis(projectionA, verticesA, axis);\n\t            SAT._projectToAxis(projectionB, verticesB, axis);\n\t\n\t            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\t\n\t            if (overlap <= 0) {\n\t                result.overlap = overlap;\n\t                return result;\n\t            }\n\t\n\t            if (overlap < result.overlap) {\n\t                result.overlap = overlap;\n\t                result.axis = axis;\n\t                result.axisNumber = i;\n\t            }\n\t        }\n\t\n\t        return result;\n\t    };\n\t\n\t    /**\n\t     * Projects vertices on an axis and returns an interval.\n\t     * @method _projectToAxis\n\t     * @private\n\t     * @param {} projection\n\t     * @param {} vertices\n\t     * @param {} axis\n\t     */\n\t    SAT._projectToAxis = function(projection, vertices, axis) {\n\t        var min = Vector.dot(vertices[0], axis),\n\t            max = min;\n\t\n\t        for (var i = 1; i < vertices.length; i += 1) {\n\t            var dot = Vector.dot(vertices[i], axis);\n\t\n\t            if (dot > max) { \n\t                max = dot; \n\t            } else if (dot < min) { \n\t                min = dot; \n\t            }\n\t        }\n\t\n\t        projection.min = min;\n\t        projection.max = max;\n\t    };\n\t    \n\t    /**\n\t     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n\t     * @method _findSupports\n\t     * @private\n\t     * @param {} bodyA\n\t     * @param {} bodyB\n\t     * @param {} normal\n\t     * @return [vector]\n\t     */\n\t    SAT._findSupports = function(bodyA, bodyB, normal) {\n\t        var nearestDistance = Number.MAX_VALUE,\n\t            vertexToBody = Vector._temp[0],\n\t            vertices = bodyB.vertices,\n\t            bodyAPosition = bodyA.position,\n\t            distance,\n\t            vertex,\n\t            vertexA,\n\t            vertexB;\n\t\n\t        // find closest vertex on bodyB\n\t        for (var i = 0; i < vertices.length; i++) {\n\t            vertex = vertices[i];\n\t            vertexToBody.x = vertex.x - bodyAPosition.x;\n\t            vertexToBody.y = vertex.y - bodyAPosition.y;\n\t            distance = -Vector.dot(normal, vertexToBody);\n\t\n\t            if (distance < nearestDistance) {\n\t                nearestDistance = distance;\n\t                vertexA = vertex;\n\t            }\n\t        }\n\t\n\t        // find next closest vertex using the two connected to it\n\t        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n\t        vertex = vertices[prevIndex];\n\t        vertexToBody.x = vertex.x - bodyAPosition.x;\n\t        vertexToBody.y = vertex.y - bodyAPosition.y;\n\t        nearestDistance = -Vector.dot(normal, vertexToBody);\n\t        vertexB = vertex;\n\t\n\t        var nextIndex = (vertexA.index + 1) % vertices.length;\n\t        vertex = vertices[nextIndex];\n\t        vertexToBody.x = vertex.x - bodyAPosition.x;\n\t        vertexToBody.y = vertex.y - bodyAPosition.y;\n\t        distance = -Vector.dot(normal, vertexToBody);\n\t        if (distance < nearestDistance) {\n\t            vertexB = vertex;\n\t        }\n\t\n\t        return [vertexA, vertexB];\n\t    };\n\t\n\t})();\n\t\n\t},{\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],12:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n\t* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n\t* The stiffness of constraints can be modified to create springs or elastic.\n\t*\n\t* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\t*\n\t* @class Constraint\n\t*/\n\t\n\tvar Constraint = {};\n\t\n\tmodule.exports = Constraint;\n\t\n\tvar Vertices = _dereq_('../geometry/Vertices');\n\tvar Vector = _dereq_('../geometry/Vector');\n\tvar Sleeping = _dereq_('../core/Sleeping');\n\tvar Bounds = _dereq_('../geometry/Bounds');\n\tvar Axes = _dereq_('../geometry/Axes');\n\tvar Common = _dereq_('../core/Common');\n\t\n\t(function() {\n\t\n\t    Constraint._warming = 0.4;\n\t    Constraint._torqueDampen = 1;\n\t    Constraint._minLength = 0.000001;\n\t\n\t    /**\n\t     * Creates a new constraint.\n\t     * All properties have default values, and many are pre-calculated automatically based on other properties.\n\t     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n\t     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n\t     * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n\t     * See the properties section below for detailed information on what you can pass via the `options` object.\n\t     * @method create\n\t     * @param {} options\n\t     * @return {constraint} constraint\n\t     */\n\t    Constraint.create = function(options) {\n\t        var constraint = options;\n\t\n\t        // if bodies defined but no points, use body centre\n\t        if (constraint.bodyA && !constraint.pointA)\n\t            constraint.pointA = { x: 0, y: 0 };\n\t        if (constraint.bodyB && !constraint.pointB)\n\t            constraint.pointB = { x: 0, y: 0 };\n\t\n\t        // calculate static length using initial world space points\n\t        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n\t            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n\t            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n\t    \n\t        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\n\t\n\t        // option defaults\n\t        constraint.id = constraint.id || Common.nextId();\n\t        constraint.label = constraint.label || 'Constraint';\n\t        constraint.type = 'constraint';\n\t        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n\t        constraint.damping = constraint.damping || 0;\n\t        constraint.angularStiffness = constraint.angularStiffness || 0;\n\t        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n\t        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n\t        constraint.plugin = {};\n\t\n\t        // render\n\t        var render = {\n\t            visible: true,\n\t            lineWidth: 2,\n\t            strokeStyle: '#ffffff',\n\t            type: 'line',\n\t            anchors: true\n\t        };\n\t\n\t        if (constraint.length === 0 && constraint.stiffness > 0.1) {\n\t            render.type = 'pin';\n\t            render.anchors = false;\n\t        } else if (constraint.stiffness < 0.9) {\n\t            render.type = 'spring';\n\t        }\n\t\n\t        constraint.render = Common.extend(render, constraint.render);\n\t\n\t        return constraint;\n\t    };\n\t\n\t    /**\n\t     * Prepares for solving by constraint warming.\n\t     * @private\n\t     * @method preSolveAll\n\t     * @param {body[]} bodies\n\t     */\n\t    Constraint.preSolveAll = function(bodies) {\n\t        for (var i = 0; i < bodies.length; i += 1) {\n\t            var body = bodies[i],\n\t                impulse = body.constraintImpulse;\n\t\n\t            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n\t                continue;\n\t            }\n\t\n\t            body.position.x += impulse.x;\n\t            body.position.y += impulse.y;\n\t            body.angle += impulse.angle;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Solves all constraints in a list of collisions.\n\t     * @private\n\t     * @method solveAll\n\t     * @param {constraint[]} constraints\n\t     * @param {number} timeScale\n\t     */\n\t    Constraint.solveAll = function(constraints, timeScale) {\n\t        // Solve fixed constraints first.\n\t        for (var i = 0; i < constraints.length; i += 1) {\n\t            var constraint = constraints[i],\n\t                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n\t                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\t\n\t            if (fixedA || fixedB) {\n\t                Constraint.solve(constraints[i], timeScale);\n\t            }\n\t        }\n\t\n\t        // Solve free constraints last.\n\t        for (i = 0; i < constraints.length; i += 1) {\n\t            constraint = constraints[i];\n\t            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\n\t            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\t\n\t            if (!fixedA && !fixedB) {\n\t                Constraint.solve(constraints[i], timeScale);\n\t            }\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Solves a distance constraint with Gauss-Siedel method.\n\t     * @private\n\t     * @method solve\n\t     * @param {constraint} constraint\n\t     * @param {number} timeScale\n\t     */\n\t    Constraint.solve = function(constraint, timeScale) {\n\t        var bodyA = constraint.bodyA,\n\t            bodyB = constraint.bodyB,\n\t            pointA = constraint.pointA,\n\t            pointB = constraint.pointB;\n\t\n\t        if (!bodyA && !bodyB)\n\t            return;\n\t\n\t        // update reference angle\n\t        if (bodyA && !bodyA.isStatic) {\n\t            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n\t            constraint.angleA = bodyA.angle;\n\t        }\n\t        \n\t        // update reference angle\n\t        if (bodyB && !bodyB.isStatic) {\n\t            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n\t            constraint.angleB = bodyB.angle;\n\t        }\n\t\n\t        var pointAWorld = pointA,\n\t            pointBWorld = pointB;\n\t\n\t        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n\t        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\t\n\t        if (!pointAWorld || !pointBWorld)\n\t            return;\n\t\n\t        var delta = Vector.sub(pointAWorld, pointBWorld),\n\t            currentLength = Vector.magnitude(delta);\n\t\n\t        // prevent singularity\n\t        if (currentLength < Constraint._minLength) {\n\t            currentLength = Constraint._minLength;\n\t        }\n\t\n\t        // solve distance constraint with Gauss-Siedel method\n\t        var difference = (currentLength - constraint.length) / currentLength,\n\t            stiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n\t            force = Vector.mult(delta, difference * stiffness),\n\t            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n\t            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n\t            resistanceTotal = massTotal + inertiaTotal,\n\t            torque,\n\t            share,\n\t            normal,\n\t            normalVelocity,\n\t            relativeVelocity;\n\t\n\t        if (constraint.damping) {\n\t            var zero = Vector.create();\n\t            normal = Vector.div(delta, currentLength);\n\t\n\t            relativeVelocity = Vector.sub(\n\t                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n\t                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n\t            );\n\t\n\t            normalVelocity = Vector.dot(normal, relativeVelocity);\n\t        }\n\t\n\t        if (bodyA && !bodyA.isStatic) {\n\t            share = bodyA.inverseMass / massTotal;\n\t\n\t            // keep track of applied impulses for post solving\n\t            bodyA.constraintImpulse.x -= force.x * share;\n\t            bodyA.constraintImpulse.y -= force.y * share;\n\t\n\t            // apply forces\n\t            bodyA.position.x -= force.x * share;\n\t            bodyA.position.y -= force.y * share;\n\t\n\t            // apply damping\n\t            if (constraint.damping) {\n\t                bodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share;\n\t                bodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share;\n\t            }\n\t\n\t            // apply torque\n\t            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n\t            bodyA.constraintImpulse.angle -= torque;\n\t            bodyA.angle -= torque;\n\t        }\n\t\n\t        if (bodyB && !bodyB.isStatic) {\n\t            share = bodyB.inverseMass / massTotal;\n\t\n\t            // keep track of applied impulses for post solving\n\t            bodyB.constraintImpulse.x += force.x * share;\n\t            bodyB.constraintImpulse.y += force.y * share;\n\t            \n\t            // apply forces\n\t            bodyB.position.x += force.x * share;\n\t            bodyB.position.y += force.y * share;\n\t\n\t            // apply damping\n\t            if (constraint.damping) {\n\t                bodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share;\n\t                bodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share;\n\t            }\n\t\n\t            // apply torque\n\t            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n\t            bodyB.constraintImpulse.angle += torque;\n\t            bodyB.angle += torque;\n\t        }\n\t\n\t    };\n\t\n\t    /**\n\t     * Performs body updates required after solving constraints.\n\t     * @private\n\t     * @method postSolveAll\n\t     * @param {body[]} bodies\n\t     */\n\t    Constraint.postSolveAll = function(bodies) {\n\t        for (var i = 0; i < bodies.length; i++) {\n\t            var body = bodies[i],\n\t                impulse = body.constraintImpulse;\n\t\n\t            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n\t                continue;\n\t            }\n\t\n\t            Sleeping.set(body, false);\n\t\n\t            // update geometry and reset\n\t            for (var j = 0; j < body.parts.length; j++) {\n\t                var part = body.parts[j];\n\t                \n\t                Vertices.translate(part.vertices, impulse);\n\t\n\t                if (j > 0) {\n\t                    part.position.x += impulse.x;\n\t                    part.position.y += impulse.y;\n\t                }\n\t\n\t                if (impulse.angle !== 0) {\n\t                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n\t                    Axes.rotate(part.axes, impulse.angle);\n\t                    if (j > 0) {\n\t                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n\t                    }\n\t                }\n\t\n\t                Bounds.update(part.bounds, part.vertices, body.velocity);\n\t            }\n\t\n\t            // dampen the cached impulse for warming next step\n\t            impulse.angle *= Constraint._warming;\n\t            impulse.x *= Constraint._warming;\n\t            impulse.y *= Constraint._warming;\n\t        }\n\t    };\n\t\n\t    /*\n\t    *\n\t    *  Properties Documentation\n\t    *\n\t    */\n\t\n\t    /**\n\t     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n\t     *\n\t     * @property id\n\t     * @type number\n\t     */\n\t\n\t    /**\n\t     * A `String` denoting the type of object.\n\t     *\n\t     * @property type\n\t     * @type string\n\t     * @default \"constraint\"\n\t     * @readOnly\n\t     */\n\t\n\t    /**\n\t     * An arbitrary `String` name to help the user identify and manage bodies.\n\t     *\n\t     * @property label\n\t     * @type string\n\t     * @default \"Constraint\"\n\t     */\n\t\n\t    /**\n\t     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n\t     *\n\t     * @property render\n\t     * @type object\n\t     */\n\t\n\t    /**\n\t     * A flag that indicates if the constraint should be rendered.\n\t     *\n\t     * @property render.visible\n\t     * @type boolean\n\t     * @default true\n\t     */\n\t\n\t    /**\n\t     * A `Number` that defines the line width to use when rendering the constraint outline.\n\t     * A value of `0` means no outline will be rendered.\n\t     *\n\t     * @property render.lineWidth\n\t     * @type number\n\t     * @default 2\n\t     */\n\t\n\t    /**\n\t     * A `String` that defines the stroke style to use when rendering the constraint outline.\n\t     * It is the same as when using a canvas, so it accepts CSS style property values.\n\t     *\n\t     * @property render.strokeStyle\n\t     * @type string\n\t     * @default a random colour\n\t     */\n\t\n\t    /**\n\t     * A `String` that defines the constraint rendering type. \n\t     * The possible values are 'line', 'pin', 'spring'.\n\t     * An appropriate render type will be automatically chosen unless one is given in options.\n\t     *\n\t     * @property render.type\n\t     * @type string\n\t     * @default 'line'\n\t     */\n\t\n\t    /**\n\t     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n\t     *\n\t     * @property render.anchors\n\t     * @type boolean\n\t     * @default true\n\t     */\n\t\n\t    /**\n\t     * The first possible `Body` that this constraint is attached to.\n\t     *\n\t     * @property bodyA\n\t     * @type body\n\t     * @default null\n\t     */\n\t\n\t    /**\n\t     * The second possible `Body` that this constraint is attached to.\n\t     *\n\t     * @property bodyB\n\t     * @type body\n\t     * @default null\n\t     */\n\t\n\t    /**\n\t     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n\t     *\n\t     * @property pointA\n\t     * @type vector\n\t     * @default { x: 0, y: 0 }\n\t     */\n\t\n\t    /**\n\t     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n\t     *\n\t     * @property pointB\n\t     * @type vector\n\t     * @default { x: 0, y: 0 }\n\t     */\n\t\n\t    /**\n\t     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n\t     * A value of `1` means the constraint should be very stiff.\n\t     * A value of `0.2` means the constraint acts like a soft spring.\n\t     *\n\t     * @property stiffness\n\t     * @type number\n\t     * @default 1\n\t     */\n\t\n\t    /**\n\t     * A `Number` that specifies the damping of the constraint, \n\t     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n\t     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n\t     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n\t     * A value of `0` means the constraint will apply no damping.\n\t     *\n\t     * @property damping\n\t     * @type number\n\t     * @default 0\n\t     */\n\t\n\t    /**\n\t     * A `Number` that specifies the target resting length of the constraint. \n\t     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n\t     *\n\t     * @property length\n\t     * @type number\n\t     */\n\t\n\t    /**\n\t     * An object reserved for storing plugin-specific properties.\n\t     *\n\t     * @property plugin\n\t     * @type {}\n\t     */\n\t\n\t})();\n\t\n\t},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],13:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n\t* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n\t*\n\t* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\t*\n\t* @class MouseConstraint\n\t*/\n\t\n\tvar MouseConstraint = {};\n\t\n\tmodule.exports = MouseConstraint;\n\t\n\tvar Vertices = _dereq_('../geometry/Vertices');\n\tvar Sleeping = _dereq_('../core/Sleeping');\n\tvar Mouse = _dereq_('../core/Mouse');\n\tvar Events = _dereq_('../core/Events');\n\tvar Detector = _dereq_('../collision/Detector');\n\tvar Constraint = _dereq_('./Constraint');\n\tvar Composite = _dereq_('../body/Composite');\n\tvar Common = _dereq_('../core/Common');\n\tvar Bounds = _dereq_('../geometry/Bounds');\n\t\n\t(function() {\n\t\n\t    /**\n\t     * Creates a new mouse constraint.\n\t     * All properties have default values, and many are pre-calculated automatically based on other properties.\n\t     * See the properties section below for detailed information on what you can pass via the `options` object.\n\t     * @method create\n\t     * @param {engine} engine\n\t     * @param {} options\n\t     * @return {MouseConstraint} A new MouseConstraint\n\t     */\n\t    MouseConstraint.create = function(engine, options) {\n\t        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\t\n\t        if (!mouse) {\n\t            if (engine && engine.render && engine.render.canvas) {\n\t                mouse = Mouse.create(engine.render.canvas);\n\t            } else if (options && options.element) {\n\t                mouse = Mouse.create(options.element);\n\t            } else {\n\t                mouse = Mouse.create();\n\t                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n\t            }\n\t        }\n\t\n\t        var constraint = Constraint.create({ \n\t            label: 'Mouse Constraint',\n\t            pointA: mouse.position,\n\t            pointB: { x: 0, y: 0 },\n\t            length: 0.01, \n\t            stiffness: 0.1,\n\t            angularStiffness: 1,\n\t            render: {\n\t                strokeStyle: '#90EE90',\n\t                lineWidth: 3\n\t            }\n\t        });\n\t\n\t        var defaults = {\n\t            type: 'mouseConstraint',\n\t            mouse: mouse,\n\t            element: null,\n\t            body: null,\n\t            constraint: constraint,\n\t            collisionFilter: {\n\t                category: 0x0001,\n\t                mask: 0xFFFFFFFF,\n\t                group: 0\n\t            }\n\t        };\n\t\n\t        var mouseConstraint = Common.extend(defaults, options);\n\t\n\t        Events.on(engine, 'beforeUpdate', function() {\n\t            var allBodies = Composite.allBodies(engine.world);\n\t            MouseConstraint.update(mouseConstraint, allBodies);\n\t            MouseConstraint._triggerEvents(mouseConstraint);\n\t        });\n\t\n\t        return mouseConstraint;\n\t    };\n\t\n\t    /**\n\t     * Updates the given mouse constraint.\n\t     * @private\n\t     * @method update\n\t     * @param {MouseConstraint} mouseConstraint\n\t     * @param {body[]} bodies\n\t     */\n\t    MouseConstraint.update = function(mouseConstraint, bodies) {\n\t        var mouse = mouseConstraint.mouse,\n\t            constraint = mouseConstraint.constraint,\n\t            body = mouseConstraint.body;\n\t\n\t        if (mouse.button === 0) {\n\t            if (!constraint.bodyB) {\n\t                for (var i = 0; i < bodies.length; i++) {\n\t                    body = bodies[i];\n\t                    if (Bounds.contains(body.bounds, mouse.position) \n\t                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n\t                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n\t                            var part = body.parts[j];\n\t                            if (Vertices.contains(part.vertices, mouse.position)) {\n\t                                constraint.pointA = mouse.position;\n\t                                constraint.bodyB = mouseConstraint.body = body;\n\t                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n\t                                constraint.angleB = body.angle;\n\t\n\t                                Sleeping.set(body, false);\n\t                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\t\n\t                                break;\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t            } else {\n\t                Sleeping.set(constraint.bodyB, false);\n\t                constraint.pointA = mouse.position;\n\t            }\n\t        } else {\n\t            constraint.bodyB = mouseConstraint.body = null;\n\t            constraint.pointB = null;\n\t\n\t            if (body)\n\t                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Triggers mouse constraint events.\n\t     * @method _triggerEvents\n\t     * @private\n\t     * @param {mouse} mouseConstraint\n\t     */\n\t    MouseConstraint._triggerEvents = function(mouseConstraint) {\n\t        var mouse = mouseConstraint.mouse,\n\t            mouseEvents = mouse.sourceEvents;\n\t\n\t        if (mouseEvents.mousemove)\n\t            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\t\n\t        if (mouseEvents.mousedown)\n\t            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\t\n\t        if (mouseEvents.mouseup)\n\t            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\t\n\t        // reset the mouse state ready for the next step\n\t        Mouse.clearSourceEvents(mouse);\n\t    };\n\t\n\t    /*\n\t    *\n\t    *  Events Documentation\n\t    *\n\t    */\n\t\n\t    /**\n\t    * Fired when the mouse has moved (or a touch moves) during the last step\n\t    *\n\t    * @event mousemove\n\t    * @param {} event An event object\n\t    * @param {mouse} event.mouse The engine's mouse instance\n\t    * @param {} event.source The source object of the event\n\t    * @param {} event.name The name of the event\n\t    */\n\t\n\t    /**\n\t    * Fired when the mouse is down (or a touch has started) during the last step\n\t    *\n\t    * @event mousedown\n\t    * @param {} event An event object\n\t    * @param {mouse} event.mouse The engine's mouse instance\n\t    * @param {} event.source The source object of the event\n\t    * @param {} event.name The name of the event\n\t    */\n\t\n\t    /**\n\t    * Fired when the mouse is up (or a touch has ended) during the last step\n\t    *\n\t    * @event mouseup\n\t    * @param {} event An event object\n\t    * @param {mouse} event.mouse The engine's mouse instance\n\t    * @param {} event.source The source object of the event\n\t    * @param {} event.name The name of the event\n\t    */\n\t\n\t    /**\n\t    * Fired when the user starts dragging a body\n\t    *\n\t    * @event startdrag\n\t    * @param {} event An event object\n\t    * @param {mouse} event.mouse The engine's mouse instance\n\t    * @param {body} event.body The body being dragged\n\t    * @param {} event.source The source object of the event\n\t    * @param {} event.name The name of the event\n\t    */\n\t\n\t    /**\n\t    * Fired when the user ends dragging a body\n\t    *\n\t    * @event enddrag\n\t    * @param {} event An event object\n\t    * @param {mouse} event.mouse The engine's mouse instance\n\t    * @param {body} event.body The body that has stopped being dragged\n\t    * @param {} event.source The source object of the event\n\t    * @param {} event.name The name of the event\n\t    */\n\t\n\t    /*\n\t    *\n\t    *  Properties Documentation\n\t    *\n\t    */\n\t\n\t    /**\n\t     * A `String` denoting the type of object.\n\t     *\n\t     * @property type\n\t     * @type string\n\t     * @default \"constraint\"\n\t     * @readOnly\n\t     */\n\t\n\t    /**\n\t     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n\t     *\n\t     * @property mouse\n\t     * @type mouse\n\t     * @default mouse\n\t     */\n\t\n\t    /**\n\t     * The `Body` that is currently being moved by the user, or `null` if no body.\n\t     *\n\t     * @property body\n\t     * @type body\n\t     * @default null\n\t     */\n\t\n\t    /**\n\t     * The `Constraint` object that is used to move the body during interaction.\n\t     *\n\t     * @property constraint\n\t     * @type constraint\n\t     */\n\t\n\t    /**\n\t     * An `Object` that specifies the collision filter properties.\n\t     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n\t     * See `body.collisionFilter` for more information.\n\t     *\n\t     * @property collisionFilter\n\t     * @type object\n\t     */\n\t\n\t})();\n\t\n\t},{\"../body/Composite\":2,\"../collision/Detector\":5,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../core/Sleeping\":22,\"../geometry/Bounds\":26,\"../geometry/Vertices\":29,\"./Constraint\":12}],14:[function(_dereq_,module,exports){\n\t(function (global){\n\t/**\n\t* The `Matter.Common` module contains utility functions that are common to all modules.\n\t*\n\t* @class Common\n\t*/\n\t\n\tvar Common = {};\n\t\n\tmodule.exports = Common;\n\t\n\t(function() {\n\t\n\t    Common._nextId = 0;\n\t    Common._seed = 0;\n\t    Common._nowStartTime = +(new Date());\n\t\n\t    /**\n\t     * Extends the object in the first argument using the object in the second argument.\n\t     * @method extend\n\t     * @param {} obj\n\t     * @param {boolean} deep\n\t     * @return {} obj extended\n\t     */\n\t    Common.extend = function(obj, deep) {\n\t        var argsStart,\n\t            args,\n\t            deepClone;\n\t\n\t        if (typeof deep === 'boolean') {\n\t            argsStart = 2;\n\t            deepClone = deep;\n\t        } else {\n\t            argsStart = 1;\n\t            deepClone = true;\n\t        }\n\t\n\t        for (var i = argsStart; i < arguments.length; i++) {\n\t            var source = arguments[i];\n\t\n\t            if (source) {\n\t                for (var prop in source) {\n\t                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n\t                        if (!obj[prop] || obj[prop].constructor === Object) {\n\t                            obj[prop] = obj[prop] || {};\n\t                            Common.extend(obj[prop], deepClone, source[prop]);\n\t                        } else {\n\t                            obj[prop] = source[prop];\n\t                        }\n\t                    } else {\n\t                        obj[prop] = source[prop];\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        \n\t        return obj;\n\t    };\n\t\n\t    /**\n\t     * Creates a new clone of the object, if deep is true references will also be cloned.\n\t     * @method clone\n\t     * @param {} obj\n\t     * @param {bool} deep\n\t     * @return {} obj cloned\n\t     */\n\t    Common.clone = function(obj, deep) {\n\t        return Common.extend({}, deep, obj);\n\t    };\n\t\n\t    /**\n\t     * Returns the list of keys for the given object.\n\t     * @method keys\n\t     * @param {} obj\n\t     * @return {string[]} keys\n\t     */\n\t    Common.keys = function(obj) {\n\t        if (Object.keys)\n\t            return Object.keys(obj);\n\t\n\t        // avoid hasOwnProperty for performance\n\t        var keys = [];\n\t        for (var key in obj)\n\t            keys.push(key);\n\t        return keys;\n\t    };\n\t\n\t    /**\n\t     * Returns the list of values for the given object.\n\t     * @method values\n\t     * @param {} obj\n\t     * @return {array} Array of the objects property values\n\t     */\n\t    Common.values = function(obj) {\n\t        var values = [];\n\t        \n\t        if (Object.keys) {\n\t            var keys = Object.keys(obj);\n\t            for (var i = 0; i < keys.length; i++) {\n\t                values.push(obj[keys[i]]);\n\t            }\n\t            return values;\n\t        }\n\t        \n\t        // avoid hasOwnProperty for performance\n\t        for (var key in obj)\n\t            values.push(obj[key]);\n\t        return values;\n\t    };\n\t\n\t    /**\n\t     * Gets a value from `base` relative to the `path` string.\n\t     * @method get\n\t     * @param {} obj The base object\n\t     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n\t     * @param {number} [begin] Path slice begin\n\t     * @param {number} [end] Path slice end\n\t     * @return {} The object at the given path\n\t     */\n\t    Common.get = function(obj, path, begin, end) {\n\t        path = path.split('.').slice(begin, end);\n\t\n\t        for (var i = 0; i < path.length; i += 1) {\n\t            obj = obj[path[i]];\n\t        }\n\t\n\t        return obj;\n\t    };\n\t\n\t    /**\n\t     * Sets a value on `base` relative to the given `path` string.\n\t     * @method set\n\t     * @param {} obj The base object\n\t     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n\t     * @param {} val The value to set\n\t     * @param {number} [begin] Path slice begin\n\t     * @param {number} [end] Path slice end\n\t     * @return {} Pass through `val` for chaining\n\t     */\n\t    Common.set = function(obj, path, val, begin, end) {\n\t        var parts = path.split('.').slice(begin, end);\n\t        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n\t        return val;\n\t    };\n\t\n\t    /**\n\t     * Shuffles the given array in-place.\n\t     * The function uses a seeded random generator.\n\t     * @method shuffle\n\t     * @param {array} array\n\t     * @return {array} array shuffled randomly\n\t     */\n\t    Common.shuffle = function(array) {\n\t        for (var i = array.length - 1; i > 0; i--) {\n\t            var j = Math.floor(Common.random() * (i + 1));\n\t            var temp = array[i];\n\t            array[i] = array[j];\n\t            array[j] = temp;\n\t        }\n\t        return array;\n\t    };\n\t\n\t    /**\n\t     * Randomly chooses a value from a list with equal probability.\n\t     * The function uses a seeded random generator.\n\t     * @method choose\n\t     * @param {array} choices\n\t     * @return {object} A random choice object from the array\n\t     */\n\t    Common.choose = function(choices) {\n\t        return choices[Math.floor(Common.random() * choices.length)];\n\t    };\n\t\n\t    /**\n\t     * Returns true if the object is a HTMLElement, otherwise false.\n\t     * @method isElement\n\t     * @param {object} obj\n\t     * @return {boolean} True if the object is a HTMLElement, otherwise false\n\t     */\n\t    Common.isElement = function(obj) {\n\t        if (typeof HTMLElement !== 'undefined') {\n\t            return obj instanceof HTMLElement;\n\t        }\n\t\n\t        return !!(obj && obj.nodeType && obj.nodeName);\n\t    };\n\t\n\t    /**\n\t     * Returns true if the object is an array.\n\t     * @method isArray\n\t     * @param {object} obj\n\t     * @return {boolean} True if the object is an array, otherwise false\n\t     */\n\t    Common.isArray = function(obj) {\n\t        return Object.prototype.toString.call(obj) === '[object Array]';\n\t    };\n\t\n\t    /**\n\t     * Returns true if the object is a function.\n\t     * @method isFunction\n\t     * @param {object} obj\n\t     * @return {boolean} True if the object is a function, otherwise false\n\t     */\n\t    Common.isFunction = function(obj) {\n\t        return typeof obj === \"function\";\n\t    };\n\t\n\t    /**\n\t     * Returns true if the object is a plain object.\n\t     * @method isPlainObject\n\t     * @param {object} obj\n\t     * @return {boolean} True if the object is a plain object, otherwise false\n\t     */\n\t    Common.isPlainObject = function(obj) {\n\t        return typeof obj === 'object' && obj.constructor === Object;\n\t    };\n\t\n\t    /**\n\t     * Returns true if the object is a string.\n\t     * @method isString\n\t     * @param {object} obj\n\t     * @return {boolean} True if the object is a string, otherwise false\n\t     */\n\t    Common.isString = function(obj) {\n\t        return toString.call(obj) === '[object String]';\n\t    };\n\t    \n\t    /**\n\t     * Returns the given value clamped between a minimum and maximum value.\n\t     * @method clamp\n\t     * @param {number} value\n\t     * @param {number} min\n\t     * @param {number} max\n\t     * @return {number} The value clamped between min and max inclusive\n\t     */\n\t    Common.clamp = function(value, min, max) {\n\t        if (value < min)\n\t            return min;\n\t        if (value > max)\n\t            return max;\n\t        return value;\n\t    };\n\t    \n\t    /**\n\t     * Returns the sign of the given value.\n\t     * @method sign\n\t     * @param {number} value\n\t     * @return {number} -1 if negative, +1 if 0 or positive\n\t     */\n\t    Common.sign = function(value) {\n\t        return value < 0 ? -1 : 1;\n\t    };\n\t    \n\t    /**\n\t     * Returns the current timestamp since the time origin (e.g. from page load).\n\t     * The result will be high-resolution including decimal places if available.\n\t     * @method now\n\t     * @return {number} the current timestamp\n\t     */\n\t    Common.now = function() {\n\t        if (window.performance) {\n\t            if (window.performance.now) {\n\t                return window.performance.now();\n\t            } else if (window.performance.webkitNow) {\n\t                return window.performance.webkitNow();\n\t            }\n\t        }\n\t\n\t        return (new Date()) - Common._nowStartTime;\n\t    };\n\t    \n\t    /**\n\t     * Returns a random value between a minimum and a maximum value inclusive.\n\t     * The function uses a seeded random generator.\n\t     * @method random\n\t     * @param {number} min\n\t     * @param {number} max\n\t     * @return {number} A random number between min and max inclusive\n\t     */\n\t    Common.random = function(min, max) {\n\t        min = (typeof min !== \"undefined\") ? min : 0;\n\t        max = (typeof max !== \"undefined\") ? max : 1;\n\t        return min + _seededRandom() * (max - min);\n\t    };\n\t\n\t    var _seededRandom = function() {\n\t        // https://en.wikipedia.org/wiki/Linear_congruential_generator\n\t        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n\t        return Common._seed / 233280;\n\t    };\n\t\n\t    /**\n\t     * Converts a CSS hex colour string into an integer.\n\t     * @method colorToNumber\n\t     * @param {string} colorString\n\t     * @return {number} An integer representing the CSS hex string\n\t     */\n\t    Common.colorToNumber = function(colorString) {\n\t        colorString = colorString.replace('#','');\n\t\n\t        if (colorString.length == 3) {\n\t            colorString = colorString.charAt(0) + colorString.charAt(0)\n\t                        + colorString.charAt(1) + colorString.charAt(1)\n\t                        + colorString.charAt(2) + colorString.charAt(2);\n\t        }\n\t\n\t        return parseInt(colorString, 16);\n\t    };\n\t\n\t    /**\n\t     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n\t     * The default level is 'debug' which shows all console messages.  \n\t     *\n\t     * Possible level values are:\n\t     * - 0 = None\n\t     * - 1 = Debug\n\t     * - 2 = Info\n\t     * - 3 = Warn\n\t     * - 4 = Error\n\t     * @property Common.logLevel\n\t     * @type {Number}\n\t     * @default 1\n\t     */\n\t    Common.logLevel = 1;\n\t\n\t    /**\n\t     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n\t     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n\t     * @method log\n\t     * @param ...objs {} The objects to log.\n\t     */\n\t    Common.log = function() {\n\t        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n\t            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n\t     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n\t     * @method info\n\t     * @param ...objs {} The objects to log.\n\t     */\n\t    Common.info = function() {\n\t        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n\t            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n\t     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n\t     * @method warn\n\t     * @param ...objs {} The objects to log.\n\t     */\n\t    Common.warn = function() {\n\t        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n\t            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Returns the next unique sequential ID.\n\t     * @method nextId\n\t     * @return {Number} Unique sequential ID\n\t     */\n\t    Common.nextId = function() {\n\t        return Common._nextId++;\n\t    };\n\t\n\t    /**\n\t     * A cross browser compatible indexOf implementation.\n\t     * @method indexOf\n\t     * @param {array} haystack\n\t     * @param {object} needle\n\t     * @return {number} The position of needle in haystack, otherwise -1.\n\t     */\n\t    Common.indexOf = function(haystack, needle) {\n\t        if (haystack.indexOf)\n\t            return haystack.indexOf(needle);\n\t\n\t        for (var i = 0; i < haystack.length; i++) {\n\t            if (haystack[i] === needle)\n\t                return i;\n\t        }\n\t\n\t        return -1;\n\t    };\n\t\n\t    /**\n\t     * A cross browser compatible array map implementation.\n\t     * @method map\n\t     * @param {array} list\n\t     * @param {function} func\n\t     * @return {array} Values from list transformed by func.\n\t     */\n\t    Common.map = function(list, func) {\n\t        if (list.map) {\n\t            return list.map(func);\n\t        }\n\t\n\t        var mapped = [];\n\t\n\t        for (var i = 0; i < list.length; i += 1) {\n\t            mapped.push(func(list[i]));\n\t        }\n\t\n\t        return mapped;\n\t    };\n\t\n\t    /**\n\t     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n\t     * Circular dependencies are allowed.\n\t     * @method topologicalSort\n\t     * @param {object} graph\n\t     * @return {array} Partially ordered set of vertices in topological order.\n\t     */\n\t    Common.topologicalSort = function(graph) {\n\t        // https://github.com/mgechev/javascript-algorithms\n\t        // Copyright (c) Minko Gechev (MIT license)\n\t        // Modifications: tidy formatting and naming\n\t        var result = [],\n\t            visited = [],\n\t            temp = [];\n\t\n\t        for (var node in graph) {\n\t            if (!visited[node] && !temp[node]) {\n\t                Common._topologicalSort(node, visited, temp, graph, result);\n\t            }\n\t        }\n\t\n\t        return result;\n\t    };\n\t\n\t    Common._topologicalSort = function(node, visited, temp, graph, result) {\n\t        var neighbors = graph[node] || [];\n\t        temp[node] = true;\n\t\n\t        for (var i = 0; i < neighbors.length; i += 1) {\n\t            var neighbor = neighbors[i];\n\t\n\t            if (temp[neighbor]) {\n\t                // skip circular dependencies\n\t                continue;\n\t            }\n\t\n\t            if (!visited[neighbor]) {\n\t                Common._topologicalSort(neighbor, visited, temp, graph, result);\n\t            }\n\t        }\n\t\n\t        temp[node] = false;\n\t        visited[node] = true;\n\t\n\t        result.push(node);\n\t    };\n\t\n\t    /**\n\t     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n\t     * The arguments applied when calling the new function will also be applied to every function passed.\n\t     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n\t     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n\t     * After all passed functions have been called the new function returns the last returned value (if any).\n\t     * If any of the passed functions are a chain, then the chain will be flattened.\n\t     * @method chain\n\t     * @param ...funcs {function} The functions to chain.\n\t     * @return {function} A new function that calls the passed functions in order.\n\t     */\n\t    Common.chain = function() {\n\t        var funcs = [];\n\t\n\t        for (var i = 0; i < arguments.length; i += 1) {\n\t            var func = arguments[i];\n\t\n\t            if (func._chained) {\n\t                // flatten already chained functions\n\t                funcs.push.apply(funcs, func._chained);\n\t            } else {\n\t                funcs.push(func);\n\t            }\n\t        }\n\t\n\t        var chain = function() {\n\t            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n\t            var lastResult,\n\t                args = new Array(arguments.length);\n\t\n\t            for (var i = 0, l = arguments.length; i < l; i++) {\n\t                args[i] = arguments[i];\n\t            }\n\t\n\t            for (i = 0; i < funcs.length; i += 1) {\n\t                var result = funcs[i].apply(lastResult, args);\n\t\n\t                if (typeof result !== 'undefined') {\n\t                    lastResult = result;\n\t                }\n\t            }\n\t\n\t            return lastResult;\n\t        };\n\t\n\t        chain._chained = funcs;\n\t\n\t        return chain;\n\t    };\n\t\n\t    /**\n\t     * Chains a function to excute before the original function on the given `path` relative to `base`.\n\t     * See also docs for `Common.chain`.\n\t     * @method chainPathBefore\n\t     * @param {} base The base object\n\t     * @param {string} path The path relative to `base`\n\t     * @param {function} func The function to chain before the original\n\t     * @return {function} The chained function that replaced the original\n\t     */\n\t    Common.chainPathBefore = function(base, path, func) {\n\t        return Common.set(base, path, Common.chain(\n\t            func,\n\t            Common.get(base, path)\n\t        ));\n\t    };\n\t\n\t    /**\n\t     * Chains a function to excute after the original function on the given `path` relative to `base`.\n\t     * See also docs for `Common.chain`.\n\t     * @method chainPathAfter\n\t     * @param {} base The base object\n\t     * @param {string} path The path relative to `base`\n\t     * @param {function} func The function to chain after the original\n\t     * @return {function} The chained function that replaced the original\n\t     */\n\t    Common.chainPathAfter = function(base, path, func) {\n\t        return Common.set(base, path, Common.chain(\n\t            Common.get(base, path),\n\t            func\n\t        ));\n\t    };\n\t\n\t    /**\n\t     * Used to require external libraries outside of the bundle.\n\t     * It first looks for the `globalName` on the environment's global namespace.\n\t     * If the global is not found, it will fall back to using the standard `require` using the `moduleName`.\n\t     * @private\n\t     * @method _requireGlobal\n\t     * @param {string} globalName The global module name\n\t     * @param {string} moduleName The fallback CommonJS module name\n\t     * @return {} The loaded module\n\t     */\n\t    Common._requireGlobal = function(globalName, moduleName) {\n\t        var obj = (typeof window !== 'undefined' ? window[globalName] : typeof global !== 'undefined' ? global[globalName] : null);\n\t        return obj || _dereq_(moduleName);\n\t    };\n\t})();\n\t\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{}],15:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.Engine` module contains methods for creating and manipulating engines.\n\t* An engine is a controller that manages updating the simulation of the world.\n\t* See `Matter.Runner` for an optional game loop utility.\n\t*\n\t* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\t*\n\t* @class Engine\n\t*/\n\t\n\tvar Engine = {};\n\t\n\tmodule.exports = Engine;\n\t\n\tvar World = _dereq_('../body/World');\n\tvar Sleeping = _dereq_('./Sleeping');\n\tvar Resolver = _dereq_('../collision/Resolver');\n\tvar Render = _dereq_('../render/Render');\n\tvar Pairs = _dereq_('../collision/Pairs');\n\tvar Metrics = _dereq_('./Metrics');\n\tvar Grid = _dereq_('../collision/Grid');\n\tvar Events = _dereq_('./Events');\n\tvar Composite = _dereq_('../body/Composite');\n\tvar Constraint = _dereq_('../constraint/Constraint');\n\tvar Common = _dereq_('./Common');\n\tvar Body = _dereq_('../body/Body');\n\t\n\t(function() {\n\t\n\t    /**\n\t     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n\t     * All properties have default values, and many are pre-calculated automatically based on other properties.\n\t     * See the properties section below for detailed information on what you can pass via the `options` object.\n\t     * @method create\n\t     * @param {object} [options]\n\t     * @return {engine} engine\n\t     */\n\t    Engine.create = function(element, options) {\n\t        // options may be passed as the first (and only) argument\n\t        options = Common.isElement(element) ? options : element;\n\t        element = Common.isElement(element) ? element : null;\n\t        options = options || {};\n\t\n\t        if (element || options.render) {\n\t            Common.warn('Engine.create: engine.render is deprecated (see docs)');\n\t        }\n\t\n\t        var defaults = {\n\t            positionIterations: 6,\n\t            velocityIterations: 4,\n\t            constraintIterations: 2,\n\t            enableSleeping: false,\n\t            events: [],\n\t            plugin: {},\n\t            timing: {\n\t                timestamp: 0,\n\t                timeScale: 1\n\t            },\n\t            broadphase: {\n\t                controller: Grid\n\t            }\n\t        };\n\t\n\t        var engine = Common.extend(defaults, options);\n\t\n\t        // @deprecated\n\t        if (element || engine.render) {\n\t            var renderDefaults = {\n\t                element: element,\n\t                controller: Render\n\t            };\n\t            \n\t            engine.render = Common.extend(renderDefaults, engine.render);\n\t        }\n\t\n\t        // @deprecated\n\t        if (engine.render && engine.render.controller) {\n\t            engine.render = engine.render.controller.create(engine.render);\n\t        }\n\t\n\t        // @deprecated\n\t        if (engine.render) {\n\t            engine.render.engine = engine;\n\t        }\n\t\n\t        engine.world = options.world || World.create(engine.world);\n\t        engine.pairs = Pairs.create();\n\t        engine.broadphase = engine.broadphase.controller.create(engine.broadphase);\n\t        engine.metrics = engine.metrics || { extended: false };\n\t\n\t\n\t        return engine;\n\t    };\n\t\n\t    /**\n\t     * Moves the simulation forward in time by `delta` ms.\n\t     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n\t     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n\t     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n\t     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n\t     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n\t     *\n\t     * Triggers `beforeUpdate` and `afterUpdate` events.\n\t     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n\t     * @method update\n\t     * @param {engine} engine\n\t     * @param {number} [delta=16.666]\n\t     * @param {number} [correction=1]\n\t     */\n\t    Engine.update = function(engine, delta, correction) {\n\t        delta = delta || 1000 / 60;\n\t        correction = correction || 1;\n\t\n\t        var world = engine.world,\n\t            timing = engine.timing,\n\t            broadphase = engine.broadphase,\n\t            broadphasePairs = [],\n\t            i;\n\t\n\t        // increment timestamp\n\t        timing.timestamp += delta * timing.timeScale;\n\t\n\t        // create an event object\n\t        var event = {\n\t            timestamp: timing.timestamp\n\t        };\n\t\n\t        Events.trigger(engine, 'beforeUpdate', event);\n\t\n\t        // get lists of all bodies and constraints, no matter what composites they are in\n\t        var allBodies = Composite.allBodies(world),\n\t            allConstraints = Composite.allConstraints(world);\n\t\n\t\n\t        // if sleeping enabled, call the sleeping controller\n\t        if (engine.enableSleeping)\n\t            Sleeping.update(allBodies, timing.timeScale);\n\t\n\t        // applies gravity to all bodies\n\t        Engine._bodiesApplyGravity(allBodies, world.gravity);\n\t\n\t        // update all body position and rotation by integration\n\t        Engine._bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\t\n\t        // update all constraints (first pass)\n\t        Constraint.preSolveAll(allBodies);\n\t        for (i = 0; i < engine.constraintIterations; i++) {\n\t            Constraint.solveAll(allConstraints, timing.timeScale);\n\t        }\n\t        Constraint.postSolveAll(allBodies);\n\t\n\t        // broadphase pass: find potential collision pairs\n\t        if (broadphase.controller) {\n\t            // if world is dirty, we must flush the whole grid\n\t            if (world.isModified)\n\t                broadphase.controller.clear(broadphase);\n\t\n\t            // update the grid buckets based on current bodies\n\t            broadphase.controller.update(broadphase, allBodies, engine, world.isModified);\n\t            broadphasePairs = broadphase.pairsList;\n\t        } else {\n\t            // if no broadphase set, we just pass all bodies\n\t            broadphasePairs = allBodies;\n\t        }\n\t\n\t        // clear all composite modified flags\n\t        if (world.isModified) {\n\t            Composite.setModified(world, false, false, true);\n\t        }\n\t\n\t        // narrowphase pass: find actual collisions, then create or update collision pairs\n\t        var collisions = broadphase.detector(broadphasePairs, engine);\n\t\n\t        // update collision pairs\n\t        var pairs = engine.pairs,\n\t            timestamp = timing.timestamp;\n\t        Pairs.update(pairs, collisions, timestamp);\n\t        Pairs.removeOld(pairs, timestamp);\n\t\n\t        // wake up bodies involved in collisions\n\t        if (engine.enableSleeping)\n\t            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\t\n\t        // trigger collision events\n\t        if (pairs.collisionStart.length > 0)\n\t            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\t\n\t        // iteratively resolve position between collisions\n\t        Resolver.preSolvePosition(pairs.list);\n\t        for (i = 0; i < engine.positionIterations; i++) {\n\t            Resolver.solvePosition(pairs.list, timing.timeScale);\n\t        }\n\t        Resolver.postSolvePosition(allBodies);\n\t\n\t        // update all constraints (second pass)\n\t        Constraint.preSolveAll(allBodies);\n\t        for (i = 0; i < engine.constraintIterations; i++) {\n\t            Constraint.solveAll(allConstraints, timing.timeScale);\n\t        }\n\t        Constraint.postSolveAll(allBodies);\n\t\n\t        // iteratively resolve velocity between collisions\n\t        Resolver.preSolveVelocity(pairs.list);\n\t        for (i = 0; i < engine.velocityIterations; i++) {\n\t            Resolver.solveVelocity(pairs.list, timing.timeScale);\n\t        }\n\t\n\t        // trigger collision events\n\t        if (pairs.collisionActive.length > 0)\n\t            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\t\n\t        if (pairs.collisionEnd.length > 0)\n\t            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\t\n\t\n\t        // clear force buffers\n\t        Engine._bodiesClearForces(allBodies);\n\t\n\t        Events.trigger(engine, 'afterUpdate', event);\n\t\n\t        return engine;\n\t    };\n\t    \n\t    /**\n\t     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n\t     * @method merge\n\t     * @param {engine} engineA\n\t     * @param {engine} engineB\n\t     */\n\t    Engine.merge = function(engineA, engineB) {\n\t        Common.extend(engineA, engineB);\n\t        \n\t        if (engineB.world) {\n\t            engineA.world = engineB.world;\n\t\n\t            Engine.clear(engineA);\n\t\n\t            var bodies = Composite.allBodies(engineA.world);\n\t\n\t            for (var i = 0; i < bodies.length; i++) {\n\t                var body = bodies[i];\n\t                Sleeping.set(body, false);\n\t                body.id = Common.nextId();\n\t            }\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Clears the engine including the world, pairs and broadphase.\n\t     * @method clear\n\t     * @param {engine} engine\n\t     */\n\t    Engine.clear = function(engine) {\n\t        var world = engine.world;\n\t        \n\t        Pairs.clear(engine.pairs);\n\t\n\t        var broadphase = engine.broadphase;\n\t        if (broadphase.controller) {\n\t            var bodies = Composite.allBodies(world);\n\t            broadphase.controller.clear(broadphase);\n\t            broadphase.controller.update(broadphase, bodies, engine, true);\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Zeroes the `body.force` and `body.torque` force buffers.\n\t     * @method _bodiesClearForces\n\t     * @private\n\t     * @param {body[]} bodies\n\t     */\n\t    Engine._bodiesClearForces = function(bodies) {\n\t        for (var i = 0; i < bodies.length; i++) {\n\t            var body = bodies[i];\n\t\n\t            // reset force buffers\n\t            body.force.x = 0;\n\t            body.force.y = 0;\n\t            body.torque = 0;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Applys a mass dependant force to all given bodies.\n\t     * @method _bodiesApplyGravity\n\t     * @private\n\t     * @param {body[]} bodies\n\t     * @param {vector} gravity\n\t     */\n\t    Engine._bodiesApplyGravity = function(bodies, gravity) {\n\t        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\t\n\t        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n\t            return;\n\t        }\n\t        \n\t        for (var i = 0; i < bodies.length; i++) {\n\t            var body = bodies[i];\n\t\n\t            if (body.isStatic || body.isSleeping)\n\t                continue;\n\t\n\t            // apply gravity\n\t            body.force.y += body.mass * gravity.y * gravityScale;\n\t            body.force.x += body.mass * gravity.x * gravityScale;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Applys `Body.update` to all given `bodies`.\n\t     * @method _bodiesUpdate\n\t     * @private\n\t     * @param {body[]} bodies\n\t     * @param {number} deltaTime \n\t     * The amount of time elapsed between updates\n\t     * @param {number} timeScale\n\t     * @param {number} correction \n\t     * The Verlet correction factor (deltaTime / lastDeltaTime)\n\t     * @param {bounds} worldBounds\n\t     */\n\t    Engine._bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n\t        for (var i = 0; i < bodies.length; i++) {\n\t            var body = bodies[i];\n\t\n\t            if (body.isStatic || body.isSleeping)\n\t                continue;\n\t\n\t            Body.update(body, deltaTime, timeScale, correction);\n\t        }\n\t    };\n\t\n\t    /**\n\t     * An alias for `Runner.run`, see `Matter.Runner` for more information.\n\t     * @method run\n\t     * @param {engine} engine\n\t     */\n\t\n\t    /**\n\t    * Fired just before an update\n\t    *\n\t    * @event beforeUpdate\n\t    * @param {} event An event object\n\t    * @param {number} event.timestamp The engine.timing.timestamp of the event\n\t    * @param {} event.source The source object of the event\n\t    * @param {} event.name The name of the event\n\t    */\n\t\n\t    /**\n\t    * Fired after engine update and all collision events\n\t    *\n\t    * @event afterUpdate\n\t    * @param {} event An event object\n\t    * @param {number} event.timestamp The engine.timing.timestamp of the event\n\t    * @param {} event.source The source object of the event\n\t    * @param {} event.name The name of the event\n\t    */\n\t\n\t    /**\n\t    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n\t    *\n\t    * @event collisionStart\n\t    * @param {} event An event object\n\t    * @param {} event.pairs List of affected pairs\n\t    * @param {number} event.timestamp The engine.timing.timestamp of the event\n\t    * @param {} event.source The source object of the event\n\t    * @param {} event.name The name of the event\n\t    */\n\t\n\t    /**\n\t    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n\t    *\n\t    * @event collisionActive\n\t    * @param {} event An event object\n\t    * @param {} event.pairs List of affected pairs\n\t    * @param {number} event.timestamp The engine.timing.timestamp of the event\n\t    * @param {} event.source The source object of the event\n\t    * @param {} event.name The name of the event\n\t    */\n\t\n\t    /**\n\t    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n\t    *\n\t    * @event collisionEnd\n\t    * @param {} event An event object\n\t    * @param {} event.pairs List of affected pairs\n\t    * @param {number} event.timestamp The engine.timing.timestamp of the event\n\t    * @param {} event.source The source object of the event\n\t    * @param {} event.name The name of the event\n\t    */\n\t\n\t    /*\n\t    *\n\t    *  Properties Documentation\n\t    *\n\t    */\n\t\n\t    /**\n\t     * An integer `Number` that specifies the number of position iterations to perform each update.\n\t     * The higher the value, the higher quality the simulation will be at the expense of performance.\n\t     *\n\t     * @property positionIterations\n\t     * @type number\n\t     * @default 6\n\t     */\n\t\n\t    /**\n\t     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n\t     * The higher the value, the higher quality the simulation will be at the expense of performance.\n\t     *\n\t     * @property velocityIterations\n\t     * @type number\n\t     * @default 4\n\t     */\n\t\n\t    /**\n\t     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n\t     * The higher the value, the higher quality the simulation will be at the expense of performance.\n\t     * The default value of `2` is usually very adequate.\n\t     *\n\t     * @property constraintIterations\n\t     * @type number\n\t     * @default 2\n\t     */\n\t\n\t    /**\n\t     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n\t     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n\t     *\n\t     * @property enableSleeping\n\t     * @type boolean\n\t     * @default false\n\t     */\n\t\n\t    /**\n\t     * An `Object` containing properties regarding the timing systems of the engine. \n\t     *\n\t     * @property timing\n\t     * @type object\n\t     */\n\t\n\t    /**\n\t     * A `Number` that specifies the global scaling factor of time for all bodies.\n\t     * A value of `0` freezes the simulation.\n\t     * A value of `0.1` gives a slow-motion effect.\n\t     * A value of `1.2` gives a speed-up effect.\n\t     *\n\t     * @property timing.timeScale\n\t     * @type number\n\t     * @default 1\n\t     */\n\t\n\t    /**\n\t     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \n\t     * It is incremented on every `Engine.update` by the given `delta` argument. \n\t     *\n\t     * @property timing.timestamp\n\t     * @type number\n\t     * @default 0\n\t     */\n\t\n\t    /**\n\t     * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\n\t     * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\n\t     *\n\t     * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\n\t     * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\n\t     *\n\t     * @property render\n\t     * @type render\n\t     * @deprecated see Demo.js for an example of creating a renderer\n\t     * @default a Matter.Render instance\n\t     */\n\t\n\t    /**\n\t     * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\n\t     *\n\t     * @property broadphase\n\t     * @type grid\n\t     * @default a Matter.Grid instance\n\t     */\n\t\n\t    /**\n\t     * A `World` composite object that will contain all simulated bodies and constraints.\n\t     *\n\t     * @property world\n\t     * @type world\n\t     * @default a Matter.World instance\n\t     */\n\t\n\t    /**\n\t     * An object reserved for storing plugin-specific properties.\n\t     *\n\t     * @property plugin\n\t     * @type {}\n\t     */\n\t\n\t})();\n\t\n\t},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Grid\":6,\"../collision/Pairs\":8,\"../collision/Resolver\":10,\"../constraint/Constraint\":12,\"../render/Render\":31,\"./Common\":14,\"./Events\":16,\"./Metrics\":18,\"./Sleeping\":22}],16:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n\t*\n\t* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\t*\n\t* @class Events\n\t*/\n\t\n\tvar Events = {};\n\t\n\tmodule.exports = Events;\n\t\n\tvar Common = _dereq_('./Common');\n\t\n\t(function() {\n\t\n\t    /**\n\t     * Subscribes a callback function to the given object's `eventName`.\n\t     * @method on\n\t     * @param {} object\n\t     * @param {string} eventNames\n\t     * @param {function} callback\n\t     */\n\t    Events.on = function(object, eventNames, callback) {\n\t        var names = eventNames.split(' '),\n\t            name;\n\t\n\t        for (var i = 0; i < names.length; i++) {\n\t            name = names[i];\n\t            object.events = object.events || {};\n\t            object.events[name] = object.events[name] || [];\n\t            object.events[name].push(callback);\n\t        }\n\t\n\t        return callback;\n\t    };\n\t\n\t    /**\n\t     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n\t     * @method off\n\t     * @param {} object\n\t     * @param {string} eventNames\n\t     * @param {function} callback\n\t     */\n\t    Events.off = function(object, eventNames, callback) {\n\t        if (!eventNames) {\n\t            object.events = {};\n\t            return;\n\t        }\n\t\n\t        // handle Events.off(object, callback)\n\t        if (typeof eventNames === 'function') {\n\t            callback = eventNames;\n\t            eventNames = Common.keys(object.events).join(' ');\n\t        }\n\t\n\t        var names = eventNames.split(' ');\n\t\n\t        for (var i = 0; i < names.length; i++) {\n\t            var callbacks = object.events[names[i]],\n\t                newCallbacks = [];\n\t\n\t            if (callback && callbacks) {\n\t                for (var j = 0; j < callbacks.length; j++) {\n\t                    if (callbacks[j] !== callback)\n\t                        newCallbacks.push(callbacks[j]);\n\t                }\n\t            }\n\t\n\t            object.events[names[i]] = newCallbacks;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n\t     * @method trigger\n\t     * @param {} object\n\t     * @param {string} eventNames\n\t     * @param {} event\n\t     */\n\t    Events.trigger = function(object, eventNames, event) {\n\t        var names,\n\t            name,\n\t            callbacks,\n\t            eventClone;\n\t\n\t        if (object.events) {\n\t            if (!event)\n\t                event = {};\n\t\n\t            names = eventNames.split(' ');\n\t\n\t            for (var i = 0; i < names.length; i++) {\n\t                name = names[i];\n\t                callbacks = object.events[name];\n\t\n\t                if (callbacks) {\n\t                    eventClone = Common.clone(event, false);\n\t                    eventClone.name = name;\n\t                    eventClone.source = object;\n\t\n\t                    for (var j = 0; j < callbacks.length; j++) {\n\t                        callbacks[j].apply(object, [eventClone]);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    };\n\t\n\t})();\n\t\n\t},{\"./Common\":14}],17:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\n\t*\n\t* @class Matter\n\t*/\n\t\n\tvar Matter = {};\n\t\n\tmodule.exports = Matter;\n\t\n\tvar Plugin = _dereq_('./Plugin');\n\tvar Common = _dereq_('./Common');\n\t\n\t(function() {\n\t\n\t    /**\n\t     * The library name.\n\t     * @property name\n\t     * @readOnly\n\t     * @type {String}\n\t     */\n\t    Matter.name = 'matter-js';\n\t\n\t    /**\n\t     * The library version.\n\t     * @property version\n\t     * @readOnly\n\t     * @type {String}\n\t     */\n\t    Matter.version = '0.14.2';\n\t\n\t    /**\n\t     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\n\t     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\n\t     * @property uses\n\t     * @type {Array}\n\t     */\n\t    Matter.uses = [];\n\t\n\t    /**\n\t     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\n\t     * @property used\n\t     * @readOnly\n\t     * @type {Array}\n\t     */\n\t    Matter.used = [];\n\t\n\t    /**\n\t     * Installs the given plugins on the `Matter` namespace.\n\t     * This is a short-hand for `Plugin.use`, see it for more information.\n\t     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\n\t     * Avoid calling this function multiple times unless you intend to manually control installation order.\n\t     * @method use\n\t     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\n\t     */\n\t    Matter.use = function() {\n\t        Plugin.use(Matter, Array.prototype.slice.call(arguments));\n\t    };\n\t\n\t    /**\n\t     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\n\t     * See also docs for `Common.chain`.\n\t     * @method before\n\t     * @param {string} path The path relative to `Matter`\n\t     * @param {function} func The function to chain before the original\n\t     * @return {function} The chained function that replaced the original\n\t     */\n\t    Matter.before = function(path, func) {\n\t        path = path.replace(/^Matter./, '');\n\t        return Common.chainPathBefore(Matter, path, func);\n\t    };\n\t\n\t    /**\n\t     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\n\t     * See also docs for `Common.chain`.\n\t     * @method after\n\t     * @param {string} path The path relative to `Matter`\n\t     * @param {function} func The function to chain after the original\n\t     * @return {function} The chained function that replaced the original\n\t     */\n\t    Matter.after = function(path, func) {\n\t        path = path.replace(/^Matter./, '');\n\t        return Common.chainPathAfter(Matter, path, func);\n\t    };\n\t\n\t})();\n\t\n\t},{\"./Common\":14,\"./Plugin\":20}],18:[function(_dereq_,module,exports){\n\t\n\t},{\"../body/Composite\":2,\"./Common\":14}],19:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n\t*\n\t* @class Mouse\n\t*/\n\t\n\tvar Mouse = {};\n\t\n\tmodule.exports = Mouse;\n\t\n\tvar Common = _dereq_('../core/Common');\n\t\n\t(function() {\n\t\n\t    /**\n\t     * Creates a mouse input.\n\t     * @method create\n\t     * @param {HTMLElement} element\n\t     * @return {mouse} A new mouse\n\t     */\n\t    Mouse.create = function(element) {\n\t        var mouse = {};\n\t\n\t        if (!element) {\n\t            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n\t        }\n\t        \n\t        mouse.element = element || document.body;\n\t        mouse.absolute = { x: 0, y: 0 };\n\t        mouse.position = { x: 0, y: 0 };\n\t        mouse.mousedownPosition = { x: 0, y: 0 };\n\t        mouse.mouseupPosition = { x: 0, y: 0 };\n\t        mouse.offset = { x: 0, y: 0 };\n\t        mouse.scale = { x: 1, y: 1 };\n\t        mouse.wheelDelta = 0;\n\t        mouse.button = -1;\n\t        mouse.pixelRatio = mouse.element.getAttribute('data-pixel-ratio') || 1;\n\t\n\t        mouse.sourceEvents = {\n\t            mousemove: null,\n\t            mousedown: null,\n\t            mouseup: null,\n\t            mousewheel: null\n\t        };\n\t        \n\t        mouse.mousemove = function(event) { \n\t            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n\t                touches = event.changedTouches;\n\t\n\t            if (touches) {\n\t                mouse.button = 0;\n\t                event.preventDefault();\n\t            }\n\t\n\t            mouse.absolute.x = position.x;\n\t            mouse.absolute.y = position.y;\n\t            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n\t            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n\t            mouse.sourceEvents.mousemove = event;\n\t        };\n\t        \n\t        mouse.mousedown = function(event) {\n\t            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n\t                touches = event.changedTouches;\n\t\n\t            if (touches) {\n\t                mouse.button = 0;\n\t                event.preventDefault();\n\t            } else {\n\t                mouse.button = event.button;\n\t            }\n\t\n\t            mouse.absolute.x = position.x;\n\t            mouse.absolute.y = position.y;\n\t            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n\t            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n\t            mouse.mousedownPosition.x = mouse.position.x;\n\t            mouse.mousedownPosition.y = mouse.position.y;\n\t            mouse.sourceEvents.mousedown = event;\n\t        };\n\t        \n\t        mouse.mouseup = function(event) {\n\t            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n\t                touches = event.changedTouches;\n\t\n\t            if (touches) {\n\t                event.preventDefault();\n\t            }\n\t            \n\t            mouse.button = -1;\n\t            mouse.absolute.x = position.x;\n\t            mouse.absolute.y = position.y;\n\t            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n\t            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n\t            mouse.mouseupPosition.x = mouse.position.x;\n\t            mouse.mouseupPosition.y = mouse.position.y;\n\t            mouse.sourceEvents.mouseup = event;\n\t        };\n\t\n\t        mouse.mousewheel = function(event) {\n\t            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n\t            event.preventDefault();\n\t        };\n\t\n\t        Mouse.setElement(mouse, mouse.element);\n\t\n\t        return mouse;\n\t    };\n\t\n\t    /**\n\t     * Sets the element the mouse is bound to (and relative to).\n\t     * @method setElement\n\t     * @param {mouse} mouse\n\t     * @param {HTMLElement} element\n\t     */\n\t    Mouse.setElement = function(mouse, element) {\n\t        mouse.element = element;\n\t\n\t        element.addEventListener('mousemove', mouse.mousemove);\n\t        element.addEventListener('mousedown', mouse.mousedown);\n\t        element.addEventListener('mouseup', mouse.mouseup);\n\t        \n\t        element.addEventListener('mousewheel', mouse.mousewheel);\n\t        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\t\n\t        element.addEventListener('touchmove', mouse.mousemove);\n\t        element.addEventListener('touchstart', mouse.mousedown);\n\t        element.addEventListener('touchend', mouse.mouseup);\n\t    };\n\t\n\t    /**\n\t     * Clears all captured source events.\n\t     * @method clearSourceEvents\n\t     * @param {mouse} mouse\n\t     */\n\t    Mouse.clearSourceEvents = function(mouse) {\n\t        mouse.sourceEvents.mousemove = null;\n\t        mouse.sourceEvents.mousedown = null;\n\t        mouse.sourceEvents.mouseup = null;\n\t        mouse.sourceEvents.mousewheel = null;\n\t        mouse.wheelDelta = 0;\n\t    };\n\t\n\t    /**\n\t     * Sets the mouse position offset.\n\t     * @method setOffset\n\t     * @param {mouse} mouse\n\t     * @param {vector} offset\n\t     */\n\t    Mouse.setOffset = function(mouse, offset) {\n\t        mouse.offset.x = offset.x;\n\t        mouse.offset.y = offset.y;\n\t        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n\t        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n\t    };\n\t\n\t    /**\n\t     * Sets the mouse position scale.\n\t     * @method setScale\n\t     * @param {mouse} mouse\n\t     * @param {vector} scale\n\t     */\n\t    Mouse.setScale = function(mouse, scale) {\n\t        mouse.scale.x = scale.x;\n\t        mouse.scale.y = scale.y;\n\t        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n\t        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n\t    };\n\t    \n\t    /**\n\t     * Gets the mouse position relative to an element given a screen pixel ratio.\n\t     * @method _getRelativeMousePosition\n\t     * @private\n\t     * @param {} event\n\t     * @param {} element\n\t     * @param {number} pixelRatio\n\t     * @return {}\n\t     */\n\t    Mouse._getRelativeMousePosition = function(event, element, pixelRatio) {\n\t        var elementBounds = element.getBoundingClientRect(),\n\t            rootNode = (document.documentElement || document.body.parentNode || document.body),\n\t            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n\t            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n\t            touches = event.changedTouches,\n\t            x, y;\n\t        \n\t        if (touches) {\n\t            x = touches[0].pageX - elementBounds.left - scrollX;\n\t            y = touches[0].pageY - elementBounds.top - scrollY;\n\t        } else {\n\t            x = event.pageX - elementBounds.left - scrollX;\n\t            y = event.pageY - elementBounds.top - scrollY;\n\t        }\n\t\n\t        return { \n\t            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n\t            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n\t        };\n\t    };\n\t\n\t})();\n\t\n\t},{\"../core/Common\":14}],20:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n\t*\n\t* @class Plugin\n\t*/\n\t\n\tvar Plugin = {};\n\t\n\tmodule.exports = Plugin;\n\t\n\tvar Common = _dereq_('./Common');\n\t\n\t(function() {\n\t\n\t    Plugin._registry = {};\n\t\n\t    /**\n\t     * Registers a plugin object so it can be resolved later by name.\n\t     * @method register\n\t     * @param plugin {} The plugin to register.\n\t     * @return {object} The plugin.\n\t     */\n\t    Plugin.register = function(plugin) {\n\t        if (!Plugin.isPlugin(plugin)) {\n\t            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n\t        }\n\t\n\t        if (plugin.name in Plugin._registry) {\n\t            var registered = Plugin._registry[plugin.name],\n\t                pluginVersion = Plugin.versionParse(plugin.version).number,\n\t                registeredVersion = Plugin.versionParse(registered.version).number;\n\t\n\t            if (pluginVersion > registeredVersion) {\n\t                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n\t                Plugin._registry[plugin.name] = plugin;\n\t            } else if (pluginVersion < registeredVersion) {\n\t                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n\t            } else if (plugin !== registered) {\n\t                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n\t            }\n\t        } else {\n\t            Plugin._registry[plugin.name] = plugin;\n\t        }\n\t\n\t        return plugin;\n\t    };\n\t\n\t    /**\n\t     * Resolves a dependency to a plugin object from the registry if it exists. \n\t     * The `dependency` may contain a version, but only the name matters when resolving.\n\t     * @method resolve\n\t     * @param dependency {string} The dependency.\n\t     * @return {object} The plugin if resolved, otherwise `undefined`.\n\t     */\n\t    Plugin.resolve = function(dependency) {\n\t        return Plugin._registry[Plugin.dependencyParse(dependency).name];\n\t    };\n\t\n\t    /**\n\t     * Returns a pretty printed plugin name and version.\n\t     * @method toString\n\t     * @param plugin {} The plugin.\n\t     * @return {string} Pretty printed plugin name and version.\n\t     */\n\t    Plugin.toString = function(plugin) {\n\t        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n\t    };\n\t\n\t    /**\n\t     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n\t     * This means it must define the following properties:\n\t     * - `name`\n\t     * - `version`\n\t     * - `install`\n\t     * @method isPlugin\n\t     * @param obj {} The obj to test.\n\t     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n\t     */\n\t    Plugin.isPlugin = function(obj) {\n\t        return obj && obj.name && obj.version && obj.install;\n\t    };\n\t\n\t    /**\n\t     * Returns `true` if a plugin with the given `name` been installed on `module`.\n\t     * @method isUsed\n\t     * @param module {} The module.\n\t     * @param name {string} The plugin name.\n\t     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n\t     */\n\t    Plugin.isUsed = function(module, name) {\n\t        return module.used.indexOf(name) > -1;\n\t    };\n\t\n\t    /**\n\t     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n\t     * If `plugin.for` is not specified then it is assumed to be applicable.\n\t     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n\t     * @method isFor\n\t     * @param plugin {} The plugin.\n\t     * @param module {} The module.\n\t     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n\t     */\n\t    Plugin.isFor = function(plugin, module) {\n\t        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n\t        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\n\t    };\n\t\n\t    /**\n\t     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n\t     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n\t     * Plugins may be specified either by their name or a reference to the plugin object.\n\t     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n\t     * Order is important, a topological sort is performed to find the best resulting order of installation.\n\t     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n\t     * This function logs the resulting status of each dependency in the console, along with any warnings.\n\t     * - A green tick ✅ indicates a dependency was resolved and installed.\n\t     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n\t     * - A red cross ❌ indicates a dependency could not be resolved.\n\t     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n\t     * @method use\n\t     * @param module {} The module install plugins on.\n\t     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n\t     */\n\t    Plugin.use = function(module, plugins) {\n\t        module.uses = (module.uses || []).concat(plugins || []);\n\t\n\t        if (module.uses.length === 0) {\n\t            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n\t            return;\n\t        }\n\t\n\t        var dependencies = Plugin.dependencies(module),\n\t            sortedDependencies = Common.topologicalSort(dependencies),\n\t            status = [];\n\t\n\t        for (var i = 0; i < sortedDependencies.length; i += 1) {\n\t            if (sortedDependencies[i] === module.name) {\n\t                continue;\n\t            }\n\t\n\t            var plugin = Plugin.resolve(sortedDependencies[i]);\n\t\n\t            if (!plugin) {\n\t                status.push('❌ ' + sortedDependencies[i]);\n\t                continue;\n\t            }\n\t\n\t            if (Plugin.isUsed(module, plugin.name)) {\n\t                continue;\n\t            }\n\t\n\t            if (!Plugin.isFor(plugin, module)) {\n\t                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\n\t                plugin._warned = true;\n\t            }\n\t\n\t            if (plugin.install) {\n\t                plugin.install(module);\n\t            } else {\n\t                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n\t                plugin._warned = true;\n\t            }\n\t\n\t            if (plugin._warned) {\n\t                status.push('🔶 ' + Plugin.toString(plugin));\n\t                delete plugin._warned;\n\t            } else {\n\t                status.push('✅ ' + Plugin.toString(plugin));\n\t            }\n\t\n\t            module.used.push(plugin.name);\n\t        }\n\t\n\t        if (status.length > 0) {\n\t            Common.info(status.join('  '));\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n\t     * @method dependencies\n\t     * @param module {} The module.\n\t     * @return {object} A dependency graph.\n\t     */\n\t    Plugin.dependencies = function(module, tracked) {\n\t        var parsedBase = Plugin.dependencyParse(module),\n\t            name = parsedBase.name;\n\t\n\t        tracked = tracked || {};\n\t\n\t        if (name in tracked) {\n\t            return;\n\t        }\n\t\n\t        module = Plugin.resolve(module) || module;\n\t\n\t        tracked[name] = Common.map(module.uses || [], function(dependency) {\n\t            if (Plugin.isPlugin(dependency)) {\n\t                Plugin.register(dependency);\n\t            }\n\t\n\t            var parsed = Plugin.dependencyParse(dependency),\n\t                resolved = Plugin.resolve(dependency);\n\t\n\t            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n\t                Common.warn(\n\t                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\n\t                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\n\t                );\n\t\n\t                resolved._warned = true;\n\t                module._warned = true;\n\t            } else if (!resolved) {\n\t                Common.warn(\n\t                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\n\t                    Plugin.toString(parsedBase), 'could not be resolved.'\n\t                );\n\t\n\t                module._warned = true;\n\t            }\n\t\n\t            return parsed.name;\n\t        });\n\t\n\t        for (var i = 0; i < tracked[name].length; i += 1) {\n\t            Plugin.dependencies(tracked[name][i], tracked);\n\t        }\n\t\n\t        return tracked;\n\t    };\n\t\n\t    /**\n\t     * Parses a dependency string into its components.\n\t     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n\t     * See documentation for `Plugin.versionParse` for a description of the format.\n\t     * This function can also handle dependencies that are already resolved (e.g. a module object).\n\t     * @method dependencyParse\n\t     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n\t     * @return {object} The dependency parsed into its components.\n\t     */\n\t    Plugin.dependencyParse = function(dependency) {\n\t        if (Common.isString(dependency)) {\n\t            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\n\t\n\t            if (!pattern.test(dependency)) {\n\t                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n\t            }\n\t\n\t            return {\n\t                name: dependency.split('@')[0],\n\t                range: dependency.split('@')[1] || '*'\n\t            };\n\t        }\n\t\n\t        return {\n\t            name: dependency.name,\n\t            range: dependency.range || dependency.version\n\t        };\n\t    };\n\t\n\t    /**\n\t     * Parses a version string into its components.  \n\t     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n\t     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n\t     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n\t     * Only the following range types are supported:\n\t     * - Tilde ranges e.g. `~1.2.3`\n\t     * - Caret ranges e.g. `^1.2.3`\n\t     * - Exact version e.g. `1.2.3`\n\t     * - Any version `*`\n\t     * @method versionParse\n\t     * @param range {string} The version string.\n\t     * @return {object} The version range parsed into its components.\n\t     */\n\t    Plugin.versionParse = function(range) {\n\t        var pattern = /^\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?$/;\n\t\n\t        if (!pattern.test(range)) {\n\t            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n\t        }\n\t\n\t        var identifiers = range.split('-');\n\t        range = identifiers[0];\n\t\n\t        var isRange = isNaN(Number(range[0])),\n\t            version = isRange ? range.substr(1) : range,\n\t            parts = Common.map(version.split('.'), function(part) {\n\t                return Number(part);\n\t            });\n\t\n\t        return {\n\t            isRange: isRange,\n\t            version: version,\n\t            range: range,\n\t            operator: isRange ? range[0] : '',\n\t            parts: parts,\n\t            prerelease: identifiers[1],\n\t            number: parts[0] * 1e8 + parts[1] * 1e4 + parts[2]\n\t        };\n\t    };\n\t\n\t    /**\n\t     * Returns `true` if `version` satisfies the given `range`.\n\t     * See documentation for `Plugin.versionParse` for a description of the format.\n\t     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n\t     * @method versionSatisfies\n\t     * @param version {string} The version string.\n\t     * @param range {string} The range string.\n\t     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n\t     */\n\t    Plugin.versionSatisfies = function(version, range) {\n\t        range = range || '*';\n\t\n\t        var rangeParsed = Plugin.versionParse(range),\n\t            rangeParts = rangeParsed.parts,\n\t            versionParsed = Plugin.versionParse(version),\n\t            versionParts = versionParsed.parts;\n\t\n\t        if (rangeParsed.isRange) {\n\t            if (rangeParsed.operator === '*' || version === '*') {\n\t                return true;\n\t            }\n\t\n\t            if (rangeParsed.operator === '~') {\n\t                return versionParts[0] === rangeParts[0] && versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n\t            }\n\t\n\t            if (rangeParsed.operator === '^') {\n\t                if (rangeParts[0] > 0) {\n\t                    return versionParts[0] === rangeParts[0] && versionParsed.number >= rangeParsed.number;\n\t                }\n\t\n\t                if (rangeParts[1] > 0) {\n\t                    return versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n\t                }\n\t\n\t                return versionParts[2] === rangeParts[2];\n\t            }\n\t        }\n\t\n\t        return version === range || version === '*';\n\t    };\n\t\n\t})();\n\t\n\t},{\"./Common\":14}],21:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.Runner` module is an optional utility which provides a game loop, \n\t* that handles continuously updating a `Matter.Engine` for you within a browser.\n\t* It is intended for development and debugging purposes, but may also be suitable for simple games.\n\t* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n\t* Instead just call `Engine.update(engine, delta)` in your own loop.\n\t*\n\t* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\t*\n\t* @class Runner\n\t*/\n\t\n\tvar Runner = {};\n\t\n\tmodule.exports = Runner;\n\t\n\tvar Events = _dereq_('./Events');\n\tvar Engine = _dereq_('./Engine');\n\tvar Common = _dereq_('./Common');\n\t\n\t(function() {\n\t\n\t    var _requestAnimationFrame,\n\t        _cancelAnimationFrame;\n\t\n\t    if (typeof window !== 'undefined') {\n\t        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n\t                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n\t   \n\t        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n\t                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n\t    }\n\t\n\t    if (!_requestAnimationFrame) {\n\t        var _frameTimeout;\n\t\n\t        _requestAnimationFrame = function(callback){ \n\t            _frameTimeout = setTimeout(function() { \n\t                callback(Common.now()); \n\t            }, 1000 / 60);\n\t        };\n\t\n\t        _cancelAnimationFrame = function() {\n\t            clearTimeout(_frameTimeout);\n\t        };\n\t    }\n\t\n\t    /**\n\t     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n\t     * @method create\n\t     * @param {} options\n\t     */\n\t    Runner.create = function(options) {\n\t        var defaults = {\n\t            fps: 60,\n\t            correction: 1,\n\t            deltaSampleSize: 60,\n\t            counterTimestamp: 0,\n\t            frameCounter: 0,\n\t            deltaHistory: [],\n\t            timePrev: null,\n\t            timeScalePrev: 1,\n\t            frameRequestId: null,\n\t            isFixed: false,\n\t            enabled: true\n\t        };\n\t\n\t        var runner = Common.extend(defaults, options);\n\t\n\t        runner.delta = runner.delta || 1000 / runner.fps;\n\t        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n\t        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n\t        runner.fps = 1000 / runner.delta;\n\t\n\t        return runner;\n\t    };\n\t\n\t    /**\n\t     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n\t     * @method run\n\t     * @param {engine} engine\n\t     */\n\t    Runner.run = function(runner, engine) {\n\t        // create runner if engine is first argument\n\t        if (typeof runner.positionIterations !== 'undefined') {\n\t            engine = runner;\n\t            runner = Runner.create();\n\t        }\n\t\n\t        (function render(time){\n\t            runner.frameRequestId = _requestAnimationFrame(render);\n\t\n\t            if (time && runner.enabled) {\n\t                Runner.tick(runner, engine, time);\n\t            }\n\t        })();\n\t\n\t        return runner;\n\t    };\n\t\n\t    /**\n\t     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n\t     * Features delta smoothing, time correction and fixed or dynamic timing.\n\t     * Triggers `beforeTick`, `tick` and `afterTick` events on the engine.\n\t     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n\t     * @method tick\n\t     * @param {runner} runner\n\t     * @param {engine} engine\n\t     * @param {number} time\n\t     */\n\t    Runner.tick = function(runner, engine, time) {\n\t        var timing = engine.timing,\n\t            correction = 1,\n\t            delta;\n\t\n\t        // create an event object\n\t        var event = {\n\t            timestamp: timing.timestamp\n\t        };\n\t\n\t        Events.trigger(runner, 'beforeTick', event);\n\t        Events.trigger(engine, 'beforeTick', event); // @deprecated\n\t\n\t        if (runner.isFixed) {\n\t            // fixed timestep\n\t            delta = runner.delta;\n\t        } else {\n\t            // dynamic timestep based on wall clock between calls\n\t            delta = (time - runner.timePrev) || runner.delta;\n\t            runner.timePrev = time;\n\t\n\t            // optimistically filter delta over a few frames, to improve stability\n\t            runner.deltaHistory.push(delta);\n\t            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n\t            delta = Math.min.apply(null, runner.deltaHistory);\n\t            \n\t            // limit delta\n\t            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n\t            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\t\n\t            // correction for delta\n\t            correction = delta / runner.delta;\n\t\n\t            // update engine timing object\n\t            runner.delta = delta;\n\t        }\n\t\n\t        // time correction for time scaling\n\t        if (runner.timeScalePrev !== 0)\n\t            correction *= timing.timeScale / runner.timeScalePrev;\n\t\n\t        if (timing.timeScale === 0)\n\t            correction = 0;\n\t\n\t        runner.timeScalePrev = timing.timeScale;\n\t        runner.correction = correction;\n\t\n\t        // fps counter\n\t        runner.frameCounter += 1;\n\t        if (time - runner.counterTimestamp >= 1000) {\n\t            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n\t            runner.counterTimestamp = time;\n\t            runner.frameCounter = 0;\n\t        }\n\t\n\t        Events.trigger(runner, 'tick', event);\n\t        Events.trigger(engine, 'tick', event); // @deprecated\n\t\n\t        // if world has been modified, clear the render scene graph\n\t        if (engine.world.isModified \n\t            && engine.render\n\t            && engine.render.controller\n\t            && engine.render.controller.clear) {\n\t            engine.render.controller.clear(engine.render); // @deprecated\n\t        }\n\t\n\t        // update\n\t        Events.trigger(runner, 'beforeUpdate', event);\n\t        Engine.update(engine, delta, correction);\n\t        Events.trigger(runner, 'afterUpdate', event);\n\t\n\t        // render\n\t        // @deprecated\n\t        if (engine.render && engine.render.controller) {\n\t            Events.trigger(runner, 'beforeRender', event);\n\t            Events.trigger(engine, 'beforeRender', event); // @deprecated\n\t\n\t            engine.render.controller.world(engine.render);\n\t\n\t            Events.trigger(runner, 'afterRender', event);\n\t            Events.trigger(engine, 'afterRender', event); // @deprecated\n\t        }\n\t\n\t        Events.trigger(runner, 'afterTick', event);\n\t        Events.trigger(engine, 'afterTick', event); // @deprecated\n\t    };\n\t\n\t    /**\n\t     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n\t     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n\t     * @method stop\n\t     * @param {runner} runner\n\t     */\n\t    Runner.stop = function(runner) {\n\t        _cancelAnimationFrame(runner.frameRequestId);\n\t    };\n\t\n\t    /**\n\t     * Alias for `Runner.run`.\n\t     * @method start\n\t     * @param {runner} runner\n\t     * @param {engine} engine\n\t     */\n\t    Runner.start = function(runner, engine) {\n\t        Runner.run(runner, engine);\n\t    };\n\t\n\t    /*\n\t    *\n\t    *  Events Documentation\n\t    *\n\t    */\n\t\n\t    /**\n\t    * Fired at the start of a tick, before any updates to the engine or timing\n\t    *\n\t    * @event beforeTick\n\t    * @param {} event An event object\n\t    * @param {number} event.timestamp The engine.timing.timestamp of the event\n\t    * @param {} event.source The source object of the event\n\t    * @param {} event.name The name of the event\n\t    */\n\t\n\t    /**\n\t    * Fired after engine timing updated, but just before update\n\t    *\n\t    * @event tick\n\t    * @param {} event An event object\n\t    * @param {number} event.timestamp The engine.timing.timestamp of the event\n\t    * @param {} event.source The source object of the event\n\t    * @param {} event.name The name of the event\n\t    */\n\t\n\t    /**\n\t    * Fired at the end of a tick, after engine update and after rendering\n\t    *\n\t    * @event afterTick\n\t    * @param {} event An event object\n\t    * @param {number} event.timestamp The engine.timing.timestamp of the event\n\t    * @param {} event.source The source object of the event\n\t    * @param {} event.name The name of the event\n\t    */\n\t\n\t    /**\n\t    * Fired before update\n\t    *\n\t    * @event beforeUpdate\n\t    * @param {} event An event object\n\t    * @param {number} event.timestamp The engine.timing.timestamp of the event\n\t    * @param {} event.source The source object of the event\n\t    * @param {} event.name The name of the event\n\t    */\n\t\n\t    /**\n\t    * Fired after update\n\t    *\n\t    * @event afterUpdate\n\t    * @param {} event An event object\n\t    * @param {number} event.timestamp The engine.timing.timestamp of the event\n\t    * @param {} event.source The source object of the event\n\t    * @param {} event.name The name of the event\n\t    */\n\t\n\t    /**\n\t    * Fired before rendering\n\t    *\n\t    * @event beforeRender\n\t    * @param {} event An event object\n\t    * @param {number} event.timestamp The engine.timing.timestamp of the event\n\t    * @param {} event.source The source object of the event\n\t    * @param {} event.name The name of the event\n\t    * @deprecated\n\t    */\n\t\n\t    /**\n\t    * Fired after rendering\n\t    *\n\t    * @event afterRender\n\t    * @param {} event An event object\n\t    * @param {number} event.timestamp The engine.timing.timestamp of the event\n\t    * @param {} event.source The source object of the event\n\t    * @param {} event.name The name of the event\n\t    * @deprecated\n\t    */\n\t\n\t    /*\n\t    *\n\t    *  Properties Documentation\n\t    *\n\t    */\n\t\n\t    /**\n\t     * A flag that specifies whether the runner is running or not.\n\t     *\n\t     * @property enabled\n\t     * @type boolean\n\t     * @default true\n\t     */\n\t\n\t    /**\n\t     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n\t     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n\t     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n\t     *\n\t     * @property isFixed\n\t     * @type boolean\n\t     * @default false\n\t     */\n\t\n\t    /**\n\t     * A `Number` that specifies the time step between updates in milliseconds.\n\t     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n\t     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n\t     *\n\t     * @property delta\n\t     * @type number\n\t     * @default 1000 / 60\n\t     */\n\t\n\t})();\n\t\n\t},{\"./Common\":14,\"./Engine\":15,\"./Events\":16}],22:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n\t*\n\t* @class Sleeping\n\t*/\n\t\n\tvar Sleeping = {};\n\t\n\tmodule.exports = Sleeping;\n\t\n\tvar Events = _dereq_('./Events');\n\t\n\t(function() {\n\t\n\t    Sleeping._motionWakeThreshold = 0.18;\n\t    Sleeping._motionSleepThreshold = 0.08;\n\t    Sleeping._minBias = 0.9;\n\t\n\t    /**\n\t     * Puts bodies to sleep or wakes them up depending on their motion.\n\t     * @method update\n\t     * @param {body[]} bodies\n\t     * @param {number} timeScale\n\t     */\n\t    Sleeping.update = function(bodies, timeScale) {\n\t        var timeFactor = timeScale * timeScale * timeScale;\n\t\n\t        // update bodies sleeping status\n\t        for (var i = 0; i < bodies.length; i++) {\n\t            var body = bodies[i],\n\t                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\t\n\t            // wake up bodies if they have a force applied\n\t            if (body.force.x !== 0 || body.force.y !== 0) {\n\t                Sleeping.set(body, false);\n\t                continue;\n\t            }\n\t\n\t            var minMotion = Math.min(body.motion, motion),\n\t                maxMotion = Math.max(body.motion, motion);\n\t        \n\t            // biased average motion estimation between frames\n\t            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n\t            \n\t            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n\t                body.sleepCounter += 1;\n\t                \n\t                if (body.sleepCounter >= body.sleepThreshold)\n\t                    Sleeping.set(body, true);\n\t            } else if (body.sleepCounter > 0) {\n\t                body.sleepCounter -= 1;\n\t            }\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n\t     * @method afterCollisions\n\t     * @param {pair[]} pairs\n\t     * @param {number} timeScale\n\t     */\n\t    Sleeping.afterCollisions = function(pairs, timeScale) {\n\t        var timeFactor = timeScale * timeScale * timeScale;\n\t\n\t        // wake up bodies involved in collisions\n\t        for (var i = 0; i < pairs.length; i++) {\n\t            var pair = pairs[i];\n\t            \n\t            // don't wake inactive pairs\n\t            if (!pair.isActive)\n\t                continue;\n\t\n\t            var collision = pair.collision,\n\t                bodyA = collision.bodyA.parent, \n\t                bodyB = collision.bodyB.parent;\n\t        \n\t            // don't wake if at least one body is static\n\t            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n\t                continue;\n\t        \n\t            if (bodyA.isSleeping || bodyB.isSleeping) {\n\t                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n\t                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\t\n\t                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n\t                    Sleeping.set(sleepingBody, false);\n\t                }\n\t            }\n\t        }\n\t    };\n\t  \n\t    /**\n\t     * Set a body as sleeping or awake.\n\t     * @method set\n\t     * @param {body} body\n\t     * @param {boolean} isSleeping\n\t     */\n\t    Sleeping.set = function(body, isSleeping) {\n\t        var wasSleeping = body.isSleeping;\n\t\n\t        if (isSleeping) {\n\t            body.isSleeping = true;\n\t            body.sleepCounter = body.sleepThreshold;\n\t\n\t            body.positionImpulse.x = 0;\n\t            body.positionImpulse.y = 0;\n\t\n\t            body.positionPrev.x = body.position.x;\n\t            body.positionPrev.y = body.position.y;\n\t\n\t            body.anglePrev = body.angle;\n\t            body.speed = 0;\n\t            body.angularSpeed = 0;\n\t            body.motion = 0;\n\t\n\t            if (!wasSleeping) {\n\t                Events.trigger(body, 'sleepStart');\n\t            }\n\t        } else {\n\t            body.isSleeping = false;\n\t            body.sleepCounter = 0;\n\t\n\t            if (wasSleeping) {\n\t                Events.trigger(body, 'sleepEnd');\n\t            }\n\t        }\n\t    };\n\t\n\t})();\n\t\n\t},{\"./Events\":16}],23:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.Bodies` module contains factory methods for creating rigid body models \n\t* with commonly used body configurations (such as rectangles, circles and other polygons).\n\t*\n\t* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\t*\n\t* @class Bodies\n\t*/\n\t\n\t// TODO: true circle bodies\n\t\n\tvar Bodies = {};\n\t\n\tmodule.exports = Bodies;\n\t\n\tvar Vertices = _dereq_('../geometry/Vertices');\n\tvar Common = _dereq_('../core/Common');\n\tvar Body = _dereq_('../body/Body');\n\tvar Bounds = _dereq_('../geometry/Bounds');\n\tvar Vector = _dereq_('../geometry/Vector');\n\tvar decomp;\n\t\n\t(function() {\n\t\n\t    /**\n\t     * Creates a new rigid body model with a rectangle hull. \n\t     * The options parameter is an object that specifies any properties you wish to override the defaults.\n\t     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n\t     * @method rectangle\n\t     * @param {number} x\n\t     * @param {number} y\n\t     * @param {number} width\n\t     * @param {number} height\n\t     * @param {object} [options]\n\t     * @return {body} A new rectangle body\n\t     */\n\t    Bodies.rectangle = function(x, y, width, height, options) {\n\t        options = options || {};\n\t\n\t        var rectangle = { \n\t            label: 'Rectangle Body',\n\t            position: { x: x, y: y },\n\t            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n\t        };\n\t\n\t        if (options.chamfer) {\n\t            var chamfer = options.chamfer;\n\t            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \n\t                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n\t            delete options.chamfer;\n\t        }\n\t\n\t        return Body.create(Common.extend({}, rectangle, options));\n\t    };\n\t    \n\t    /**\n\t     * Creates a new rigid body model with a trapezoid hull. \n\t     * The options parameter is an object that specifies any properties you wish to override the defaults.\n\t     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n\t     * @method trapezoid\n\t     * @param {number} x\n\t     * @param {number} y\n\t     * @param {number} width\n\t     * @param {number} height\n\t     * @param {number} slope\n\t     * @param {object} [options]\n\t     * @return {body} A new trapezoid body\n\t     */\n\t    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n\t        options = options || {};\n\t\n\t        slope *= 0.5;\n\t        var roof = (1 - (slope * 2)) * width;\n\t        \n\t        var x1 = width * slope,\n\t            x2 = x1 + roof,\n\t            x3 = x2 + x1,\n\t            verticesPath;\n\t\n\t        if (slope < 0.5) {\n\t            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n\t        } else {\n\t            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n\t        }\n\t\n\t        var trapezoid = { \n\t            label: 'Trapezoid Body',\n\t            position: { x: x, y: y },\n\t            vertices: Vertices.fromPath(verticesPath)\n\t        };\n\t\n\t        if (options.chamfer) {\n\t            var chamfer = options.chamfer;\n\t            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \n\t                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n\t            delete options.chamfer;\n\t        }\n\t\n\t        return Body.create(Common.extend({}, trapezoid, options));\n\t    };\n\t\n\t    /**\n\t     * Creates a new rigid body model with a circle hull. \n\t     * The options parameter is an object that specifies any properties you wish to override the defaults.\n\t     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n\t     * @method circle\n\t     * @param {number} x\n\t     * @param {number} y\n\t     * @param {number} radius\n\t     * @param {object} [options]\n\t     * @param {number} [maxSides]\n\t     * @return {body} A new circle body\n\t     */\n\t    Bodies.circle = function(x, y, radius, options, maxSides) {\n\t        options = options || {};\n\t\n\t        var circle = {\n\t            label: 'Circle Body',\n\t            circleRadius: radius\n\t        };\n\t        \n\t        // approximate circles with polygons until true circles implemented in SAT\n\t        maxSides = maxSides || 25;\n\t        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\t\n\t        // optimisation: always use even number of sides (half the number of unique axes)\n\t        if (sides % 2 === 1)\n\t            sides += 1;\n\t\n\t        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n\t    };\n\t\n\t    /**\n\t     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \n\t     * The options parameter is an object that specifies any properties you wish to override the defaults.\n\t     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n\t     * @method polygon\n\t     * @param {number} x\n\t     * @param {number} y\n\t     * @param {number} sides\n\t     * @param {number} radius\n\t     * @param {object} [options]\n\t     * @return {body} A new regular polygon body\n\t     */\n\t    Bodies.polygon = function(x, y, sides, radius, options) {\n\t        options = options || {};\n\t\n\t        if (sides < 3)\n\t            return Bodies.circle(x, y, radius, options);\n\t\n\t        var theta = 2 * Math.PI / sides,\n\t            path = '',\n\t            offset = theta * 0.5;\n\t\n\t        for (var i = 0; i < sides; i += 1) {\n\t            var angle = offset + (i * theta),\n\t                xx = Math.cos(angle) * radius,\n\t                yy = Math.sin(angle) * radius;\n\t\n\t            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n\t        }\n\t\n\t        var polygon = { \n\t            label: 'Polygon Body',\n\t            position: { x: x, y: y },\n\t            vertices: Vertices.fromPath(path)\n\t        };\n\t\n\t        if (options.chamfer) {\n\t            var chamfer = options.chamfer;\n\t            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \n\t                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n\t            delete options.chamfer;\n\t        }\n\t\n\t        return Body.create(Common.extend({}, polygon, options));\n\t    };\n\t\n\t    /**\n\t     * Creates a body using the supplied vertices (or an array containing multiple sets of vertices).\n\t     * If the vertices are convex, they will pass through as supplied.\n\t     * Otherwise if the vertices are concave, they will be decomposed if [poly-decomp.js](https://github.com/schteppe/poly-decomp.js) is available.\n\t     * Note that this process is not guaranteed to support complex sets of vertices (e.g. those with holes may fail).\n\t     * By default the decomposition will discard collinear edges (to improve performance).\n\t     * It can also optionally discard any parts that have an area less than `minimumArea`.\n\t     * If the vertices can not be decomposed, the result will fall back to using the convex hull.\n\t     * The options parameter is an object that specifies any `Matter.Body` properties you wish to override the defaults.\n\t     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n\t     * @method fromVertices\n\t     * @param {number} x\n\t     * @param {number} y\n\t     * @param [[vector]] vertexSets\n\t     * @param {object} [options]\n\t     * @param {bool} [flagInternal=false]\n\t     * @param {number} [removeCollinear=0.01]\n\t     * @param {number} [minimumArea=10]\n\t     * @return {body}\n\t     */\n\t    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea) {\n\t        if (!decomp) {\n\t            decomp = Common._requireGlobal('decomp', 'poly-decomp');\n\t        }\n\t\n\t        var body,\n\t            parts,\n\t            isConvex,\n\t            vertices,\n\t            i,\n\t            j,\n\t            k,\n\t            v,\n\t            z;\n\t\n\t        options = options || {};\n\t        parts = [];\n\t\n\t        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n\t        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n\t        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n\t\n\t        if (!decomp) {\n\t            Common.warn('Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull.');\n\t        }\n\t\n\t        // ensure vertexSets is an array of arrays\n\t        if (!Common.isArray(vertexSets[0])) {\n\t            vertexSets = [vertexSets];\n\t        }\n\t\n\t        for (v = 0; v < vertexSets.length; v += 1) {\n\t            vertices = vertexSets[v];\n\t            isConvex = Vertices.isConvex(vertices);\n\t\n\t            if (isConvex || !decomp) {\n\t                if (isConvex) {\n\t                    vertices = Vertices.clockwiseSort(vertices);\n\t                } else {\n\t                    // fallback to convex hull when decomposition is not possible\n\t                    vertices = Vertices.hull(vertices);\n\t                }\n\t\n\t                parts.push({\n\t                    position: { x: x, y: y },\n\t                    vertices: vertices\n\t                });\n\t            } else {\n\t                // initialise a decomposition\n\t                var concave = vertices.map(function(vertex) {\n\t                    return [vertex.x, vertex.y];\n\t                });\n\t\n\t                // vertices are concave and simple, we can decompose into parts\n\t                decomp.makeCCW(concave);\n\t                if (removeCollinear !== false)\n\t                    decomp.removeCollinearPoints(concave, removeCollinear);\n\t\n\t                // use the quick decomposition algorithm (Bayazit)\n\t                var decomposed = decomp.quickDecomp(concave);\n\t\n\t                // for each decomposed chunk\n\t                for (i = 0; i < decomposed.length; i++) {\n\t                    var chunk = decomposed[i];\n\t\n\t                    // convert vertices into the correct structure\n\t                    var chunkVertices = chunk.map(function(vertices) {\n\t                        return {\n\t                            x: vertices[0],\n\t                            y: vertices[1]\n\t                        };\n\t                    });\n\t\n\t                    // skip small chunks\n\t                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n\t                        continue;\n\t\n\t                    // create a compound part\n\t                    parts.push({\n\t                        position: Vertices.centre(chunkVertices),\n\t                        vertices: chunkVertices\n\t                    });\n\t                }\n\t            }\n\t        }\n\t\n\t        // create body parts\n\t        for (i = 0; i < parts.length; i++) {\n\t            parts[i] = Body.create(Common.extend(parts[i], options));\n\t        }\n\t\n\t        // flag internal edges (coincident part edges)\n\t        if (flagInternal) {\n\t            var coincident_max_dist = 5;\n\t\n\t            for (i = 0; i < parts.length; i++) {\n\t                var partA = parts[i];\n\t\n\t                for (j = i + 1; j < parts.length; j++) {\n\t                    var partB = parts[j];\n\t\n\t                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n\t                        var pav = partA.vertices,\n\t                            pbv = partB.vertices;\n\t\n\t                        // iterate vertices of both parts\n\t                        for (k = 0; k < partA.vertices.length; k++) {\n\t                            for (z = 0; z < partB.vertices.length; z++) {\n\t                                // find distances between the vertices\n\t                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n\t                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\t\n\t                                // if both vertices are very close, consider the edge concident (internal)\n\t                                if (da < coincident_max_dist && db < coincident_max_dist) {\n\t                                    pav[k].isInternal = true;\n\t                                    pbv[z].isInternal = true;\n\t                                }\n\t                            }\n\t                        }\n\t\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        if (parts.length > 1) {\n\t            // create the parent body to be returned, that contains generated compound parts\n\t            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n\t            Body.setPosition(body, { x: x, y: y });\n\t\n\t            return body;\n\t        } else {\n\t            return parts[0];\n\t        }\n\t    };\n\t\n\t})();\n\t\n\t},{\"../body/Body\":1,\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],24:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.Composites` module contains factory methods for creating composite bodies\n\t* with commonly used configurations (such as stacks and chains).\n\t*\n\t* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\t*\n\t* @class Composites\n\t*/\n\t\n\tvar Composites = {};\n\t\n\tmodule.exports = Composites;\n\t\n\tvar Composite = _dereq_('../body/Composite');\n\tvar Constraint = _dereq_('../constraint/Constraint');\n\tvar Common = _dereq_('../core/Common');\n\tvar Body = _dereq_('../body/Body');\n\tvar Bodies = _dereq_('./Bodies');\n\t\n\t(function() {\n\t\n\t    /**\n\t     * Create a new composite containing bodies created in the callback in a grid arrangement.\n\t     * This function uses the body's bounds to prevent overlaps.\n\t     * @method stack\n\t     * @param {number} xx\n\t     * @param {number} yy\n\t     * @param {number} columns\n\t     * @param {number} rows\n\t     * @param {number} columnGap\n\t     * @param {number} rowGap\n\t     * @param {function} callback\n\t     * @return {composite} A new composite containing objects created in the callback\n\t     */\n\t    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n\t        var stack = Composite.create({ label: 'Stack' }),\n\t            x = xx,\n\t            y = yy,\n\t            lastBody,\n\t            i = 0;\n\t\n\t        for (var row = 0; row < rows; row++) {\n\t            var maxHeight = 0;\n\t            \n\t            for (var column = 0; column < columns; column++) {\n\t                var body = callback(x, y, column, row, lastBody, i);\n\t                    \n\t                if (body) {\n\t                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n\t                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \n\t\n\t                    if (bodyHeight > maxHeight)\n\t                        maxHeight = bodyHeight;\n\t                    \n\t                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\t\n\t                    x = body.bounds.max.x + columnGap;\n\t\n\t                    Composite.addBody(stack, body);\n\t                    \n\t                    lastBody = body;\n\t                    i += 1;\n\t                } else {\n\t                    x += columnGap;\n\t                }\n\t            }\n\t            \n\t            y += maxHeight + rowGap;\n\t            x = xx;\n\t        }\n\t\n\t        return stack;\n\t    };\n\t    \n\t    /**\n\t     * Chains all bodies in the given composite together using constraints.\n\t     * @method chain\n\t     * @param {composite} composite\n\t     * @param {number} xOffsetA\n\t     * @param {number} yOffsetA\n\t     * @param {number} xOffsetB\n\t     * @param {number} yOffsetB\n\t     * @param {object} options\n\t     * @return {composite} A new composite containing objects chained together with constraints\n\t     */\n\t    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n\t        var bodies = composite.bodies;\n\t        \n\t        for (var i = 1; i < bodies.length; i++) {\n\t            var bodyA = bodies[i - 1],\n\t                bodyB = bodies[i],\n\t                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n\t                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \n\t                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n\t                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n\t        \n\t            var defaults = {\n\t                bodyA: bodyA,\n\t                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n\t                bodyB: bodyB,\n\t                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n\t            };\n\t            \n\t            var constraint = Common.extend(defaults, options);\n\t        \n\t            Composite.addConstraint(composite, Constraint.create(constraint));\n\t        }\n\t\n\t        composite.label += ' Chain';\n\t        \n\t        return composite;\n\t    };\n\t\n\t    /**\n\t     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n\t     * @method mesh\n\t     * @param {composite} composite\n\t     * @param {number} columns\n\t     * @param {number} rows\n\t     * @param {boolean} crossBrace\n\t     * @param {object} options\n\t     * @return {composite} The composite containing objects meshed together with constraints\n\t     */\n\t    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n\t        var bodies = composite.bodies,\n\t            row,\n\t            col,\n\t            bodyA,\n\t            bodyB,\n\t            bodyC;\n\t        \n\t        for (row = 0; row < rows; row++) {\n\t            for (col = 1; col < columns; col++) {\n\t                bodyA = bodies[(col - 1) + (row * columns)];\n\t                bodyB = bodies[col + (row * columns)];\n\t                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\t            }\n\t\n\t            if (row > 0) {\n\t                for (col = 0; col < columns; col++) {\n\t                    bodyA = bodies[col + ((row - 1) * columns)];\n\t                    bodyB = bodies[col + (row * columns)];\n\t                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\t\n\t                    if (crossBrace && col > 0) {\n\t                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n\t                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n\t                    }\n\t\n\t                    if (crossBrace && col < columns - 1) {\n\t                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n\t                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        composite.label += ' Mesh';\n\t        \n\t        return composite;\n\t    };\n\t    \n\t    /**\n\t     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n\t     * This function uses the body's bounds to prevent overlaps.\n\t     * @method pyramid\n\t     * @param {number} xx\n\t     * @param {number} yy\n\t     * @param {number} columns\n\t     * @param {number} rows\n\t     * @param {number} columnGap\n\t     * @param {number} rowGap\n\t     * @param {function} callback\n\t     * @return {composite} A new composite containing objects created in the callback\n\t     */\n\t    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n\t        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n\t            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n\t                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n\t            \n\t            if (row > actualRows)\n\t                return;\n\t            \n\t            // reverse row order\n\t            row = actualRows - row;\n\t            \n\t            var start = row,\n\t                end = columns - 1 - row;\n\t\n\t            if (column < start || column > end)\n\t                return;\n\t            \n\t            // retroactively fix the first body's position, since width was unknown\n\t            if (i === 1) {\n\t                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n\t            }\n\t\n\t            var xOffset = lastBody ? column * lastBodyWidth : 0;\n\t            \n\t            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n\t        });\n\t    };\n\t\n\t    /**\n\t     * Creates a composite with a Newton's Cradle setup of bodies and constraints.\n\t     * @method newtonsCradle\n\t     * @param {number} xx\n\t     * @param {number} yy\n\t     * @param {number} number\n\t     * @param {number} size\n\t     * @param {number} length\n\t     * @return {composite} A new composite newtonsCradle body\n\t     */\n\t    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n\t        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\t\n\t        for (var i = 0; i < number; i++) {\n\t            var separation = 1.9,\n\t                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, \n\t                            { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n\t                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\t\n\t            Composite.addBody(newtonsCradle, circle);\n\t            Composite.addConstraint(newtonsCradle, constraint);\n\t        }\n\t\n\t        return newtonsCradle;\n\t    };\n\t    \n\t    /**\n\t     * Creates a composite with simple car setup of bodies and constraints.\n\t     * @method car\n\t     * @param {number} xx\n\t     * @param {number} yy\n\t     * @param {number} width\n\t     * @param {number} height\n\t     * @param {number} wheelSize\n\t     * @return {composite} A new composite car body\n\t     */\n\t    Composites.car = function(xx, yy, width, height, wheelSize) {\n\t        var group = Body.nextGroup(true),\n\t            wheelBase = 20,\n\t            wheelAOffset = -width * 0.5 + wheelBase,\n\t            wheelBOffset = width * 0.5 - wheelBase,\n\t            wheelYOffset = 0;\n\t    \n\t        var car = Composite.create({ label: 'Car' }),\n\t            body = Bodies.rectangle(xx, yy, width, height, { \n\t                collisionFilter: {\n\t                    group: group\n\t                },\n\t                chamfer: {\n\t                    radius: height * 0.5\n\t                },\n\t                density: 0.0002\n\t            });\n\t    \n\t        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, { \n\t            collisionFilter: {\n\t                group: group\n\t            },\n\t            friction: 0.8\n\t        });\n\t                    \n\t        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, { \n\t            collisionFilter: {\n\t                group: group\n\t            },\n\t            friction: 0.8\n\t        });\n\t                    \n\t        var axelA = Constraint.create({\n\t            bodyB: body,\n\t            pointB: { x: wheelAOffset, y: wheelYOffset },\n\t            bodyA: wheelA,\n\t            stiffness: 1,\n\t            length: 0\n\t        });\n\t                        \n\t        var axelB = Constraint.create({\n\t            bodyB: body,\n\t            pointB: { x: wheelBOffset, y: wheelYOffset },\n\t            bodyA: wheelB,\n\t            stiffness: 1,\n\t            length: 0\n\t        });\n\t        \n\t        Composite.addBody(car, body);\n\t        Composite.addBody(car, wheelA);\n\t        Composite.addBody(car, wheelB);\n\t        Composite.addConstraint(car, axelA);\n\t        Composite.addConstraint(car, axelB);\n\t\n\t        return car;\n\t    };\n\t\n\t    /**\n\t     * Creates a simple soft body like object.\n\t     * @method softBody\n\t     * @param {number} xx\n\t     * @param {number} yy\n\t     * @param {number} columns\n\t     * @param {number} rows\n\t     * @param {number} columnGap\n\t     * @param {number} rowGap\n\t     * @param {boolean} crossBrace\n\t     * @param {number} particleRadius\n\t     * @param {} particleOptions\n\t     * @param {} constraintOptions\n\t     * @return {composite} A new composite softBody\n\t     */\n\t    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n\t        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n\t        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\n\t\n\t        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n\t            return Bodies.circle(x, y, particleRadius, particleOptions);\n\t        });\n\t\n\t        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\t\n\t        softBody.label = 'Soft Body';\n\t\n\t        return softBody;\n\t    };\n\t\n\t})();\n\t\n\t},{\"../body/Body\":1,\"../body/Composite\":2,\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Bodies\":23}],25:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n\t*\n\t* @class Axes\n\t*/\n\t\n\tvar Axes = {};\n\t\n\tmodule.exports = Axes;\n\t\n\tvar Vector = _dereq_('../geometry/Vector');\n\tvar Common = _dereq_('../core/Common');\n\t\n\t(function() {\n\t\n\t    /**\n\t     * Creates a new set of axes from the given vertices.\n\t     * @method fromVertices\n\t     * @param {vertices} vertices\n\t     * @return {axes} A new axes from the given vertices\n\t     */\n\t    Axes.fromVertices = function(vertices) {\n\t        var axes = {};\n\t\n\t        // find the unique axes, using edge normal gradients\n\t        for (var i = 0; i < vertices.length; i++) {\n\t            var j = (i + 1) % vertices.length, \n\t                normal = Vector.normalise({ \n\t                    x: vertices[j].y - vertices[i].y, \n\t                    y: vertices[i].x - vertices[j].x\n\t                }),\n\t                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n\t            \n\t            // limit precision\n\t            gradient = gradient.toFixed(3).toString();\n\t            axes[gradient] = normal;\n\t        }\n\t\n\t        return Common.values(axes);\n\t    };\n\t\n\t    /**\n\t     * Rotates a set of axes by the given angle.\n\t     * @method rotate\n\t     * @param {axes} axes\n\t     * @param {number} angle\n\t     */\n\t    Axes.rotate = function(axes, angle) {\n\t        if (angle === 0)\n\t            return;\n\t        \n\t        var cos = Math.cos(angle),\n\t            sin = Math.sin(angle);\n\t\n\t        for (var i = 0; i < axes.length; i++) {\n\t            var axis = axes[i],\n\t                xx;\n\t            xx = axis.x * cos - axis.y * sin;\n\t            axis.y = axis.x * sin + axis.y * cos;\n\t            axis.x = xx;\n\t        }\n\t    };\n\t\n\t})();\n\t\n\t},{\"../core/Common\":14,\"../geometry/Vector\":28}],26:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n\t*\n\t* @class Bounds\n\t*/\n\t\n\tvar Bounds = {};\n\t\n\tmodule.exports = Bounds;\n\t\n\t(function() {\n\t\n\t    /**\n\t     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n\t     * @method create\n\t     * @param {vertices} vertices\n\t     * @return {bounds} A new bounds object\n\t     */\n\t    Bounds.create = function(vertices) {\n\t        var bounds = { \n\t            min: { x: 0, y: 0 }, \n\t            max: { x: 0, y: 0 }\n\t        };\n\t\n\t        if (vertices)\n\t            Bounds.update(bounds, vertices);\n\t        \n\t        return bounds;\n\t    };\n\t\n\t    /**\n\t     * Updates bounds using the given vertices and extends the bounds given a velocity.\n\t     * @method update\n\t     * @param {bounds} bounds\n\t     * @param {vertices} vertices\n\t     * @param {vector} velocity\n\t     */\n\t    Bounds.update = function(bounds, vertices, velocity) {\n\t        bounds.min.x = Infinity;\n\t        bounds.max.x = -Infinity;\n\t        bounds.min.y = Infinity;\n\t        bounds.max.y = -Infinity;\n\t\n\t        for (var i = 0; i < vertices.length; i++) {\n\t            var vertex = vertices[i];\n\t            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n\t            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n\t            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n\t            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n\t        }\n\t        \n\t        if (velocity) {\n\t            if (velocity.x > 0) {\n\t                bounds.max.x += velocity.x;\n\t            } else {\n\t                bounds.min.x += velocity.x;\n\t            }\n\t            \n\t            if (velocity.y > 0) {\n\t                bounds.max.y += velocity.y;\n\t            } else {\n\t                bounds.min.y += velocity.y;\n\t            }\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Returns true if the bounds contains the given point.\n\t     * @method contains\n\t     * @param {bounds} bounds\n\t     * @param {vector} point\n\t     * @return {boolean} True if the bounds contain the point, otherwise false\n\t     */\n\t    Bounds.contains = function(bounds, point) {\n\t        return point.x >= bounds.min.x && point.x <= bounds.max.x \n\t               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n\t    };\n\t\n\t    /**\n\t     * Returns true if the two bounds intersect.\n\t     * @method overlaps\n\t     * @param {bounds} boundsA\n\t     * @param {bounds} boundsB\n\t     * @return {boolean} True if the bounds overlap, otherwise false\n\t     */\n\t    Bounds.overlaps = function(boundsA, boundsB) {\n\t        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n\t                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n\t    };\n\t\n\t    /**\n\t     * Translates the bounds by the given vector.\n\t     * @method translate\n\t     * @param {bounds} bounds\n\t     * @param {vector} vector\n\t     */\n\t    Bounds.translate = function(bounds, vector) {\n\t        bounds.min.x += vector.x;\n\t        bounds.max.x += vector.x;\n\t        bounds.min.y += vector.y;\n\t        bounds.max.y += vector.y;\n\t    };\n\t\n\t    /**\n\t     * Shifts the bounds to the given position.\n\t     * @method shift\n\t     * @param {bounds} bounds\n\t     * @param {vector} position\n\t     */\n\t    Bounds.shift = function(bounds, position) {\n\t        var deltaX = bounds.max.x - bounds.min.x,\n\t            deltaY = bounds.max.y - bounds.min.y;\n\t            \n\t        bounds.min.x = position.x;\n\t        bounds.max.x = position.x + deltaX;\n\t        bounds.min.y = position.y;\n\t        bounds.max.y = position.y + deltaY;\n\t    };\n\t    \n\t})();\n\t\n\t},{}],27:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n\t*\n\t* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n\t*\n\t* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\t*\n\t* @class Svg\n\t*/\n\t\n\tvar Svg = {};\n\t\n\tmodule.exports = Svg;\n\t\n\tvar Bounds = _dereq_('../geometry/Bounds');\n\tvar Common = _dereq_('../core/Common');\n\t\n\t(function() {\n\t\n\t    /**\n\t     * Converts an SVG path into an array of vector points.\n\t     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n\t     * See `Bodies.fromVertices` which provides support for this.\n\t     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n\t     * You must load the `pathseg.js` polyfill on newer browsers.\n\t     * @method pathToVertices\n\t     * @param {SVGPathElement} path\n\t     * @param {Number} [sampleLength=15]\n\t     * @return {Vector[]} points\n\t     */\n\t    Svg.pathToVertices = function(path, sampleLength) {\n\t        if (typeof window !== 'undefined' && !('SVGPathSeg' in window)) {\n\t            Common.warn('Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.');\n\t        }\n\t\n\t        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n\t        var i, il, total, point, segment, segments, \n\t            segmentsQueue, lastSegment, \n\t            lastPoint, segmentIndex, points = [],\n\t            lx, ly, length = 0, x = 0, y = 0;\n\t\n\t        sampleLength = sampleLength || 15;\n\t\n\t        var addPoint = function(px, py, pathSegType) {\n\t            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n\t            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\t\n\t            // when the last point doesn't equal the current point add the current point\n\t            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n\t                if (lastPoint && isRelative) {\n\t                    lx = lastPoint.x;\n\t                    ly = lastPoint.y;\n\t                } else {\n\t                    lx = 0;\n\t                    ly = 0;\n\t                }\n\t\n\t                var point = {\n\t                    x: lx + px,\n\t                    y: ly + py\n\t                };\n\t\n\t                // set last point\n\t                if (isRelative || !lastPoint) {\n\t                    lastPoint = point;\n\t                }\n\t\n\t                points.push(point);\n\t\n\t                x = lx + px;\n\t                y = ly + py;\n\t            }\n\t        };\n\t\n\t        var addSegmentPoint = function(segment) {\n\t            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\t\n\t            // skip path ends\n\t            if (segType === 'Z') \n\t                return;\n\t\n\t            // map segment to x and y\n\t            switch (segType) {\n\t\n\t            case 'M':\n\t            case 'L':\n\t            case 'T':\n\t            case 'C':\n\t            case 'S':\n\t            case 'Q':\n\t                x = segment.x;\n\t                y = segment.y;\n\t                break;\n\t            case 'H':\n\t                x = segment.x;\n\t                break;\n\t            case 'V':\n\t                y = segment.y;\n\t                break;\n\t            }\n\t\n\t            addPoint(x, y, segment.pathSegType);\n\t        };\n\t\n\t        // ensure path is absolute\n\t        Svg._svgPathToAbsolute(path);\n\t\n\t        // get total length\n\t        total = path.getTotalLength();\n\t\n\t        // queue segments\n\t        segments = [];\n\t        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n\t            segments.push(path.pathSegList.getItem(i));\n\t\n\t        segmentsQueue = segments.concat();\n\t\n\t        // sample through path\n\t        while (length < total) {\n\t            // get segment at position\n\t            segmentIndex = path.getPathSegAtLength(length);\n\t            segment = segments[segmentIndex];\n\t\n\t            // new segment\n\t            if (segment != lastSegment) {\n\t                while (segmentsQueue.length && segmentsQueue[0] != segment)\n\t                    addSegmentPoint(segmentsQueue.shift());\n\t\n\t                lastSegment = segment;\n\t            }\n\t\n\t            // add points in between when curving\n\t            // TODO: adaptive sampling\n\t            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\t\n\t            case 'C':\n\t            case 'T':\n\t            case 'S':\n\t            case 'Q':\n\t            case 'A':\n\t                point = path.getPointAtLength(length);\n\t                addPoint(point.x, point.y, 0);\n\t                break;\n\t\n\t            }\n\t\n\t            // increment by sample value\n\t            length += sampleLength;\n\t        }\n\t\n\t        // add remaining segments not passed by sampling\n\t        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n\t            addSegmentPoint(segmentsQueue[i]);\n\t\n\t        return points;\n\t    };\n\t\n\t    Svg._svgPathToAbsolute = function(path) {\n\t        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n\t        // Copyright (c) Gavin Kistner\n\t        // http://phrogz.net/js/_ReuseLicense.txt\n\t        // Modifications: tidy formatting and naming\n\t        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n\t            x = 0, y = 0, len = segs.numberOfItems;\n\t\n\t        for (var i = 0; i < len; ++i) {\n\t            var seg = segs.getItem(i),\n\t                segType = seg.pathSegTypeAsLetter;\n\t\n\t            if (/[MLHVCSQTA]/.test(segType)) {\n\t                if ('x' in seg) x = seg.x;\n\t                if ('y' in seg) y = seg.y;\n\t            } else {\n\t                if ('x1' in seg) x1 = x + seg.x1;\n\t                if ('x2' in seg) x2 = x + seg.x2;\n\t                if ('y1' in seg) y1 = y + seg.y1;\n\t                if ('y2' in seg) y2 = y + seg.y2;\n\t                if ('x' in seg) x += seg.x;\n\t                if ('y' in seg) y += seg.y;\n\t\n\t                switch (segType) {\n\t\n\t                case 'm':\n\t                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n\t                    break;\n\t                case 'l':\n\t                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n\t                    break;\n\t                case 'h':\n\t                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n\t                    break;\n\t                case 'v':\n\t                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n\t                    break;\n\t                case 'c':\n\t                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n\t                    break;\n\t                case 's':\n\t                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n\t                    break;\n\t                case 'q':\n\t                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n\t                    break;\n\t                case 't':\n\t                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n\t                    break;\n\t                case 'a':\n\t                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n\t                    break;\n\t                case 'z':\n\t                case 'Z':\n\t                    x = x0;\n\t                    y = y0;\n\t                    break;\n\t\n\t                }\n\t            }\n\t\n\t            if (segType == 'M' || segType == 'm') {\n\t                x0 = x;\n\t                y0 = y;\n\t            }\n\t        }\n\t    };\n\t\n\t})();\n\t},{\"../core/Common\":14,\"../geometry/Bounds\":26}],28:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n\t* Vectors are the basis of all the geometry related operations in the engine.\n\t* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n\t*\n\t* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\t*\n\t* @class Vector\n\t*/\n\t\n\t// TODO: consider params for reusing vector objects\n\t\n\tvar Vector = {};\n\t\n\tmodule.exports = Vector;\n\t\n\t(function() {\n\t\n\t    /**\n\t     * Creates a new vector.\n\t     * @method create\n\t     * @param {number} x\n\t     * @param {number} y\n\t     * @return {vector} A new vector\n\t     */\n\t    Vector.create = function(x, y) {\n\t        return { x: x || 0, y: y || 0 };\n\t    };\n\t\n\t    /**\n\t     * Returns a new vector with `x` and `y` copied from the given `vector`.\n\t     * @method clone\n\t     * @param {vector} vector\n\t     * @return {vector} A new cloned vector\n\t     */\n\t    Vector.clone = function(vector) {\n\t        return { x: vector.x, y: vector.y };\n\t    };\n\t\n\t    /**\n\t     * Returns the magnitude (length) of a vector.\n\t     * @method magnitude\n\t     * @param {vector} vector\n\t     * @return {number} The magnitude of the vector\n\t     */\n\t    Vector.magnitude = function(vector) {\n\t        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n\t    };\n\t\n\t    /**\n\t     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n\t     * @method magnitudeSquared\n\t     * @param {vector} vector\n\t     * @return {number} The squared magnitude of the vector\n\t     */\n\t    Vector.magnitudeSquared = function(vector) {\n\t        return (vector.x * vector.x) + (vector.y * vector.y);\n\t    };\n\t\n\t    /**\n\t     * Rotates the vector about (0, 0) by specified angle.\n\t     * @method rotate\n\t     * @param {vector} vector\n\t     * @param {number} angle\n\t     * @param {vector} [output]\n\t     * @return {vector} The vector rotated about (0, 0)\n\t     */\n\t    Vector.rotate = function(vector, angle, output) {\n\t        var cos = Math.cos(angle), sin = Math.sin(angle);\n\t        if (!output) output = {};\n\t        var x = vector.x * cos - vector.y * sin;\n\t        output.y = vector.x * sin + vector.y * cos;\n\t        output.x = x;\n\t        return output;\n\t    };\n\t\n\t    /**\n\t     * Rotates the vector about a specified point by specified angle.\n\t     * @method rotateAbout\n\t     * @param {vector} vector\n\t     * @param {number} angle\n\t     * @param {vector} point\n\t     * @param {vector} [output]\n\t     * @return {vector} A new vector rotated about the point\n\t     */\n\t    Vector.rotateAbout = function(vector, angle, point, output) {\n\t        var cos = Math.cos(angle), sin = Math.sin(angle);\n\t        if (!output) output = {};\n\t        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n\t        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n\t        output.x = x;\n\t        return output;\n\t    };\n\t\n\t    /**\n\t     * Normalises a vector (such that its magnitude is `1`).\n\t     * @method normalise\n\t     * @param {vector} vector\n\t     * @return {vector} A new vector normalised\n\t     */\n\t    Vector.normalise = function(vector) {\n\t        var magnitude = Vector.magnitude(vector);\n\t        if (magnitude === 0)\n\t            return { x: 0, y: 0 };\n\t        return { x: vector.x / magnitude, y: vector.y / magnitude };\n\t    };\n\t\n\t    /**\n\t     * Returns the dot-product of two vectors.\n\t     * @method dot\n\t     * @param {vector} vectorA\n\t     * @param {vector} vectorB\n\t     * @return {number} The dot product of the two vectors\n\t     */\n\t    Vector.dot = function(vectorA, vectorB) {\n\t        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n\t    };\n\t\n\t    /**\n\t     * Returns the cross-product of two vectors.\n\t     * @method cross\n\t     * @param {vector} vectorA\n\t     * @param {vector} vectorB\n\t     * @return {number} The cross product of the two vectors\n\t     */\n\t    Vector.cross = function(vectorA, vectorB) {\n\t        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n\t    };\n\t\n\t    /**\n\t     * Returns the cross-product of three vectors.\n\t     * @method cross3\n\t     * @param {vector} vectorA\n\t     * @param {vector} vectorB\n\t     * @param {vector} vectorC\n\t     * @return {number} The cross product of the three vectors\n\t     */\n\t    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n\t        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n\t    };\n\t\n\t    /**\n\t     * Adds the two vectors.\n\t     * @method add\n\t     * @param {vector} vectorA\n\t     * @param {vector} vectorB\n\t     * @param {vector} [output]\n\t     * @return {vector} A new vector of vectorA and vectorB added\n\t     */\n\t    Vector.add = function(vectorA, vectorB, output) {\n\t        if (!output) output = {};\n\t        output.x = vectorA.x + vectorB.x;\n\t        output.y = vectorA.y + vectorB.y;\n\t        return output;\n\t    };\n\t\n\t    /**\n\t     * Subtracts the two vectors.\n\t     * @method sub\n\t     * @param {vector} vectorA\n\t     * @param {vector} vectorB\n\t     * @param {vector} [output]\n\t     * @return {vector} A new vector of vectorA and vectorB subtracted\n\t     */\n\t    Vector.sub = function(vectorA, vectorB, output) {\n\t        if (!output) output = {};\n\t        output.x = vectorA.x - vectorB.x;\n\t        output.y = vectorA.y - vectorB.y;\n\t        return output;\n\t    };\n\t\n\t    /**\n\t     * Multiplies a vector and a scalar.\n\t     * @method mult\n\t     * @param {vector} vector\n\t     * @param {number} scalar\n\t     * @return {vector} A new vector multiplied by scalar\n\t     */\n\t    Vector.mult = function(vector, scalar) {\n\t        return { x: vector.x * scalar, y: vector.y * scalar };\n\t    };\n\t\n\t    /**\n\t     * Divides a vector and a scalar.\n\t     * @method div\n\t     * @param {vector} vector\n\t     * @param {number} scalar\n\t     * @return {vector} A new vector divided by scalar\n\t     */\n\t    Vector.div = function(vector, scalar) {\n\t        return { x: vector.x / scalar, y: vector.y / scalar };\n\t    };\n\t\n\t    /**\n\t     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n\t     * @method perp\n\t     * @param {vector} vector\n\t     * @param {bool} [negate=false]\n\t     * @return {vector} The perpendicular vector\n\t     */\n\t    Vector.perp = function(vector, negate) {\n\t        negate = negate === true ? -1 : 1;\n\t        return { x: negate * -vector.y, y: negate * vector.x };\n\t    };\n\t\n\t    /**\n\t     * Negates both components of a vector such that it points in the opposite direction.\n\t     * @method neg\n\t     * @param {vector} vector\n\t     * @return {vector} The negated vector\n\t     */\n\t    Vector.neg = function(vector) {\n\t        return { x: -vector.x, y: -vector.y };\n\t    };\n\t\n\t    /**\n\t     * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n\t     * @method angle\n\t     * @param {vector} vectorA\n\t     * @param {vector} vectorB\n\t     * @return {number} The angle in radians\n\t     */\n\t    Vector.angle = function(vectorA, vectorB) {\n\t        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n\t    };\n\t\n\t    /**\n\t     * Temporary vector pool (not thread-safe).\n\t     * @property _temp\n\t     * @type {vector[]}\n\t     * @private\n\t     */\n\t    Vector._temp = [\n\t        Vector.create(), Vector.create(), \n\t        Vector.create(), Vector.create(), \n\t        Vector.create(), Vector.create()\n\t    ];\n\t\n\t})();\n\t},{}],29:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n\t* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n\t* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n\t*\n\t* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\t*\n\t* @class Vertices\n\t*/\n\t\n\tvar Vertices = {};\n\t\n\tmodule.exports = Vertices;\n\t\n\tvar Vector = _dereq_('../geometry/Vector');\n\tvar Common = _dereq_('../core/Common');\n\t\n\t(function() {\n\t\n\t    /**\n\t     * Creates a new set of `Matter.Body` compatible vertices.\n\t     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n\t     *\n\t     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n\t     *\n\t     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n\t     * but with some additional references required for efficient collision detection routines.\n\t     *\n\t     * Vertices must be specified in clockwise order.\n\t     *\n\t     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n\t     *\n\t     * @method create\n\t     * @param {vector[]} points\n\t     * @param {body} body\n\t     */\n\t    Vertices.create = function(points, body) {\n\t        var vertices = [];\n\t\n\t        for (var i = 0; i < points.length; i++) {\n\t            var point = points[i],\n\t                vertex = {\n\t                    x: point.x,\n\t                    y: point.y,\n\t                    index: i,\n\t                    body: body,\n\t                    isInternal: false\n\t                };\n\t\n\t            vertices.push(vertex);\n\t        }\n\t\n\t        return vertices;\n\t    };\n\t\n\t    /**\n\t     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \n\t     * into a `Matter.Vertices` object for the given `Matter.Body`.\n\t     * For parsing SVG paths, see `Svg.pathToVertices`.\n\t     * @method fromPath\n\t     * @param {string} path\n\t     * @param {body} body\n\t     * @return {vertices} vertices\n\t     */\n\t    Vertices.fromPath = function(path, body) {\n\t        var pathPattern = /L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*/ig,\n\t            points = [];\n\t\n\t        path.replace(pathPattern, function(match, x, y) {\n\t            points.push({ x: parseFloat(x), y: parseFloat(y) });\n\t        });\n\t\n\t        return Vertices.create(points, body);\n\t    };\n\t\n\t    /**\n\t     * Returns the centre (centroid) of the set of vertices.\n\t     * @method centre\n\t     * @param {vertices} vertices\n\t     * @return {vector} The centre point\n\t     */\n\t    Vertices.centre = function(vertices) {\n\t        var area = Vertices.area(vertices, true),\n\t            centre = { x: 0, y: 0 },\n\t            cross,\n\t            temp,\n\t            j;\n\t\n\t        for (var i = 0; i < vertices.length; i++) {\n\t            j = (i + 1) % vertices.length;\n\t            cross = Vector.cross(vertices[i], vertices[j]);\n\t            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n\t            centre = Vector.add(centre, temp);\n\t        }\n\t\n\t        return Vector.div(centre, 6 * area);\n\t    };\n\t\n\t    /**\n\t     * Returns the average (mean) of the set of vertices.\n\t     * @method mean\n\t     * @param {vertices} vertices\n\t     * @return {vector} The average point\n\t     */\n\t    Vertices.mean = function(vertices) {\n\t        var average = { x: 0, y: 0 };\n\t\n\t        for (var i = 0; i < vertices.length; i++) {\n\t            average.x += vertices[i].x;\n\t            average.y += vertices[i].y;\n\t        }\n\t\n\t        return Vector.div(average, vertices.length);\n\t    };\n\t\n\t    /**\n\t     * Returns the area of the set of vertices.\n\t     * @method area\n\t     * @param {vertices} vertices\n\t     * @param {bool} signed\n\t     * @return {number} The area\n\t     */\n\t    Vertices.area = function(vertices, signed) {\n\t        var area = 0,\n\t            j = vertices.length - 1;\n\t\n\t        for (var i = 0; i < vertices.length; i++) {\n\t            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n\t            j = i;\n\t        }\n\t\n\t        if (signed)\n\t            return area / 2;\n\t\n\t        return Math.abs(area) / 2;\n\t    };\n\t\n\t    /**\n\t     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n\t     * @method inertia\n\t     * @param {vertices} vertices\n\t     * @param {number} mass\n\t     * @return {number} The polygon's moment of inertia\n\t     */\n\t    Vertices.inertia = function(vertices, mass) {\n\t        var numerator = 0,\n\t            denominator = 0,\n\t            v = vertices,\n\t            cross,\n\t            j;\n\t\n\t        // find the polygon's moment of inertia, using second moment of area\n\t        // from equations at http://www.physicsforums.com/showthread.php?t=25293\n\t        for (var n = 0; n < v.length; n++) {\n\t            j = (n + 1) % v.length;\n\t            cross = Math.abs(Vector.cross(v[j], v[n]));\n\t            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n\t            denominator += cross;\n\t        }\n\t\n\t        return (mass / 6) * (numerator / denominator);\n\t    };\n\t\n\t    /**\n\t     * Translates the set of vertices in-place.\n\t     * @method translate\n\t     * @param {vertices} vertices\n\t     * @param {vector} vector\n\t     * @param {number} scalar\n\t     */\n\t    Vertices.translate = function(vertices, vector, scalar) {\n\t        var i;\n\t        if (scalar) {\n\t            for (i = 0; i < vertices.length; i++) {\n\t                vertices[i].x += vector.x * scalar;\n\t                vertices[i].y += vector.y * scalar;\n\t            }\n\t        } else {\n\t            for (i = 0; i < vertices.length; i++) {\n\t                vertices[i].x += vector.x;\n\t                vertices[i].y += vector.y;\n\t            }\n\t        }\n\t\n\t        return vertices;\n\t    };\n\t\n\t    /**\n\t     * Rotates the set of vertices in-place.\n\t     * @method rotate\n\t     * @param {vertices} vertices\n\t     * @param {number} angle\n\t     * @param {vector} point\n\t     */\n\t    Vertices.rotate = function(vertices, angle, point) {\n\t        if (angle === 0)\n\t            return;\n\t\n\t        var cos = Math.cos(angle),\n\t            sin = Math.sin(angle);\n\t\n\t        for (var i = 0; i < vertices.length; i++) {\n\t            var vertice = vertices[i],\n\t                dx = vertice.x - point.x,\n\t                dy = vertice.y - point.y;\n\t                \n\t            vertice.x = point.x + (dx * cos - dy * sin);\n\t            vertice.y = point.y + (dx * sin + dy * cos);\n\t        }\n\t\n\t        return vertices;\n\t    };\n\t\n\t    /**\n\t     * Returns `true` if the `point` is inside the set of `vertices`.\n\t     * @method contains\n\t     * @param {vertices} vertices\n\t     * @param {vector} point\n\t     * @return {boolean} True if the vertices contains point, otherwise false\n\t     */\n\t    Vertices.contains = function(vertices, point) {\n\t        for (var i = 0; i < vertices.length; i++) {\n\t            var vertice = vertices[i],\n\t                nextVertice = vertices[(i + 1) % vertices.length];\n\t            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n\t                return false;\n\t            }\n\t        }\n\t\n\t        return true;\n\t    };\n\t\n\t    /**\n\t     * Scales the vertices from a point (default is centre) in-place.\n\t     * @method scale\n\t     * @param {vertices} vertices\n\t     * @param {number} scaleX\n\t     * @param {number} scaleY\n\t     * @param {vector} point\n\t     */\n\t    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n\t        if (scaleX === 1 && scaleY === 1)\n\t            return vertices;\n\t\n\t        point = point || Vertices.centre(vertices);\n\t\n\t        var vertex,\n\t            delta;\n\t\n\t        for (var i = 0; i < vertices.length; i++) {\n\t            vertex = vertices[i];\n\t            delta = Vector.sub(vertex, point);\n\t            vertices[i].x = point.x + delta.x * scaleX;\n\t            vertices[i].y = point.y + delta.y * scaleY;\n\t        }\n\t\n\t        return vertices;\n\t    };\n\t\n\t    /**\n\t     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n\t     * The radius parameter is a single number or an array to specify the radius for each vertex.\n\t     * @method chamfer\n\t     * @param {vertices} vertices\n\t     * @param {number[]} radius\n\t     * @param {number} quality\n\t     * @param {number} qualityMin\n\t     * @param {number} qualityMax\n\t     */\n\t    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n\t        if (typeof radius === 'number') {\n\t            radius = [radius];\n\t        } else {\n\t            radius = radius || [8];\n\t        }\n\t\n\t        // quality defaults to -1, which is auto\n\t        quality = (typeof quality !== 'undefined') ? quality : -1;\n\t        qualityMin = qualityMin || 2;\n\t        qualityMax = qualityMax || 14;\n\t\n\t        var newVertices = [];\n\t\n\t        for (var i = 0; i < vertices.length; i++) {\n\t            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n\t                vertex = vertices[i],\n\t                nextVertex = vertices[(i + 1) % vertices.length],\n\t                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\t\n\t            if (currentRadius === 0) {\n\t                newVertices.push(vertex);\n\t                continue;\n\t            }\n\t\n\t            var prevNormal = Vector.normalise({ \n\t                x: vertex.y - prevVertex.y, \n\t                y: prevVertex.x - vertex.x\n\t            });\n\t\n\t            var nextNormal = Vector.normalise({ \n\t                x: nextVertex.y - vertex.y, \n\t                y: vertex.x - nextVertex.x\n\t            });\n\t\n\t            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n\t                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n\t                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n\t                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\t\n\t            var precision = quality;\n\t\n\t            if (quality === -1) {\n\t                // automatically decide precision\n\t                precision = Math.pow(currentRadius, 0.32) * 1.75;\n\t            }\n\t\n\t            precision = Common.clamp(precision, qualityMin, qualityMax);\n\t\n\t            // use an even value for precision, more likely to reduce axes by using symmetry\n\t            if (precision % 2 === 1)\n\t                precision += 1;\n\t\n\t            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n\t                theta = alpha / precision;\n\t\n\t            for (var j = 0; j < precision; j++) {\n\t                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n\t            }\n\t        }\n\t\n\t        return newVertices;\n\t    };\n\t\n\t    /**\n\t     * Sorts the input vertices into clockwise order in place.\n\t     * @method clockwiseSort\n\t     * @param {vertices} vertices\n\t     * @return {vertices} vertices\n\t     */\n\t    Vertices.clockwiseSort = function(vertices) {\n\t        var centre = Vertices.mean(vertices);\n\t\n\t        vertices.sort(function(vertexA, vertexB) {\n\t            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n\t        });\n\t\n\t        return vertices;\n\t    };\n\t\n\t    /**\n\t     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n\t     * @method isConvex\n\t     * @param {vertices} vertices\n\t     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n\t     */\n\t    Vertices.isConvex = function(vertices) {\n\t        // http://paulbourke.net/geometry/polygonmesh/\n\t        // Copyright (c) Paul Bourke (use permitted)\n\t\n\t        var flag = 0,\n\t            n = vertices.length,\n\t            i,\n\t            j,\n\t            k,\n\t            z;\n\t\n\t        if (n < 3)\n\t            return null;\n\t\n\t        for (i = 0; i < n; i++) {\n\t            j = (i + 1) % n;\n\t            k = (i + 2) % n;\n\t            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n\t            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\t\n\t            if (z < 0) {\n\t                flag |= 1;\n\t            } else if (z > 0) {\n\t                flag |= 2;\n\t            }\n\t\n\t            if (flag === 3) {\n\t                return false;\n\t            }\n\t        }\n\t\n\t        if (flag !== 0){\n\t            return true;\n\t        } else {\n\t            return null;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Returns the convex hull of the input vertices as a new array of points.\n\t     * @method hull\n\t     * @param {vertices} vertices\n\t     * @return [vertex] vertices\n\t     */\n\t    Vertices.hull = function(vertices) {\n\t        // http://geomalgorithms.com/a10-_hull-1.html\n\t\n\t        var upper = [],\n\t            lower = [], \n\t            vertex,\n\t            i;\n\t\n\t        // sort vertices on x-axis (y-axis for ties)\n\t        vertices = vertices.slice(0);\n\t        vertices.sort(function(vertexA, vertexB) {\n\t            var dx = vertexA.x - vertexB.x;\n\t            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n\t        });\n\t\n\t        // build lower hull\n\t        for (i = 0; i < vertices.length; i += 1) {\n\t            vertex = vertices[i];\n\t\n\t            while (lower.length >= 2 \n\t                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n\t                lower.pop();\n\t            }\n\t\n\t            lower.push(vertex);\n\t        }\n\t\n\t        // build upper hull\n\t        for (i = vertices.length - 1; i >= 0; i -= 1) {\n\t            vertex = vertices[i];\n\t\n\t            while (upper.length >= 2 \n\t                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n\t                upper.pop();\n\t            }\n\t\n\t            upper.push(vertex);\n\t        }\n\t\n\t        // concatenation of the lower and upper hulls gives the convex hull\n\t        // omit last points because they are repeated at the beginning of the other list\n\t        upper.pop();\n\t        lower.pop();\n\t\n\t        return upper.concat(lower);\n\t    };\n\t\n\t})();\n\t\n\t},{\"../core/Common\":14,\"../geometry/Vector\":28}],30:[function(_dereq_,module,exports){\n\tvar Matter = module.exports = _dereq_('../core/Matter');\n\t\n\tMatter.Body = _dereq_('../body/Body');\n\tMatter.Composite = _dereq_('../body/Composite');\n\tMatter.World = _dereq_('../body/World');\n\t\n\tMatter.Contact = _dereq_('../collision/Contact');\n\tMatter.Detector = _dereq_('../collision/Detector');\n\tMatter.Grid = _dereq_('../collision/Grid');\n\tMatter.Pairs = _dereq_('../collision/Pairs');\n\tMatter.Pair = _dereq_('../collision/Pair');\n\tMatter.Query = _dereq_('../collision/Query');\n\tMatter.Resolver = _dereq_('../collision/Resolver');\n\tMatter.SAT = _dereq_('../collision/SAT');\n\t\n\tMatter.Constraint = _dereq_('../constraint/Constraint');\n\tMatter.MouseConstraint = _dereq_('../constraint/MouseConstraint');\n\t\n\tMatter.Common = _dereq_('../core/Common');\n\tMatter.Engine = _dereq_('../core/Engine');\n\tMatter.Events = _dereq_('../core/Events');\n\tMatter.Mouse = _dereq_('../core/Mouse');\n\tMatter.Runner = _dereq_('../core/Runner');\n\tMatter.Sleeping = _dereq_('../core/Sleeping');\n\tMatter.Plugin = _dereq_('../core/Plugin');\n\t\n\t\n\tMatter.Bodies = _dereq_('../factory/Bodies');\n\tMatter.Composites = _dereq_('../factory/Composites');\n\t\n\tMatter.Axes = _dereq_('../geometry/Axes');\n\tMatter.Bounds = _dereq_('../geometry/Bounds');\n\tMatter.Svg = _dereq_('../geometry/Svg');\n\tMatter.Vector = _dereq_('../geometry/Vector');\n\tMatter.Vertices = _dereq_('../geometry/Vertices');\n\t\n\tMatter.Render = _dereq_('../render/Render');\n\tMatter.RenderPixi = _dereq_('../render/RenderPixi');\n\t\n\t// aliases\n\t\n\tMatter.World.add = Matter.Composite.add;\n\tMatter.World.remove = Matter.Composite.remove;\n\tMatter.World.addComposite = Matter.Composite.addComposite;\n\tMatter.World.addBody = Matter.Composite.addBody;\n\tMatter.World.addConstraint = Matter.Composite.addConstraint;\n\tMatter.World.clear = Matter.Composite.clear;\n\tMatter.Engine.run = Matter.Runner.run;\n\t\n\t},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Contact\":4,\"../collision/Detector\":5,\"../collision/Grid\":6,\"../collision/Pair\":7,\"../collision/Pairs\":8,\"../collision/Query\":9,\"../collision/Resolver\":10,\"../collision/SAT\":11,\"../constraint/Constraint\":12,\"../constraint/MouseConstraint\":13,\"../core/Common\":14,\"../core/Engine\":15,\"../core/Events\":16,\"../core/Matter\":17,\"../core/Metrics\":18,\"../core/Mouse\":19,\"../core/Plugin\":20,\"../core/Runner\":21,\"../core/Sleeping\":22,\"../factory/Bodies\":23,\"../factory/Composites\":24,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Svg\":27,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31,\"../render/RenderPixi\":32}],31:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n\t* It is intended for development and debugging purposes, but may also be suitable for simple games.\n\t* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n\t*\n\t* @class Render\n\t*/\n\t\n\tvar Render = {};\n\t\n\tmodule.exports = Render;\n\t\n\tvar Common = _dereq_('../core/Common');\n\tvar Composite = _dereq_('../body/Composite');\n\tvar Bounds = _dereq_('../geometry/Bounds');\n\tvar Events = _dereq_('../core/Events');\n\tvar Grid = _dereq_('../collision/Grid');\n\tvar Vector = _dereq_('../geometry/Vector');\n\tvar Mouse = _dereq_('../core/Mouse');\n\t\n\t(function() {\n\t\n\t    var _requestAnimationFrame,\n\t        _cancelAnimationFrame;\n\t\n\t    if (typeof window !== 'undefined') {\n\t        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n\t                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n\t                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\t\n\t        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n\t                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n\t    }\n\t\n\t    /**\n\t     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n\t     * All properties have default values, and many are pre-calculated automatically based on other properties.\n\t     * See the properties section below for detailed information on what you can pass via the `options` object.\n\t     * @method create\n\t     * @param {object} [options]\n\t     * @return {render} A new renderer\n\t     */\n\t    Render.create = function(options) {\n\t        var defaults = {\n\t            controller: Render,\n\t            engine: null,\n\t            element: null,\n\t            canvas: null,\n\t            mouse: null,\n\t            frameRequestId: null,\n\t            options: {\n\t                width: 800,\n\t                height: 600,\n\t                pixelRatio: 1,\n\t                background: '#18181d',\n\t                wireframeBackground: '#0f0f13',\n\t                hasBounds: !!options.bounds,\n\t                enabled: true,\n\t                wireframes: true,\n\t                showSleeping: true,\n\t                showDebug: false,\n\t                showBroadphase: false,\n\t                showBounds: false,\n\t                showVelocity: false,\n\t                showCollisions: false,\n\t                showSeparations: false,\n\t                showAxes: false,\n\t                showPositions: false,\n\t                showAngleIndicator: false,\n\t                showIds: false,\n\t                showShadows: false,\n\t                showVertexNumbers: false,\n\t                showConvexHulls: false,\n\t                showInternalEdges: false,\n\t                showMousePosition: false\n\t            }\n\t        };\n\t\n\t        var render = Common.extend(defaults, options);\n\t\n\t        if (render.canvas) {\n\t            render.canvas.width = render.options.width || render.canvas.width;\n\t            render.canvas.height = render.options.height || render.canvas.height;\n\t        }\n\t\n\t        render.mouse = options.mouse;\n\t        render.engine = options.engine;\n\t        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n\t        render.context = render.canvas.getContext('2d');\n\t        render.textures = {};\n\t\n\t        render.bounds = render.bounds || {\n\t            min: {\n\t                x: 0,\n\t                y: 0\n\t            },\n\t            max: {\n\t                x: render.canvas.width,\n\t                y: render.canvas.height\n\t            }\n\t        };\n\t\n\t        if (render.options.pixelRatio !== 1) {\n\t            Render.setPixelRatio(render, render.options.pixelRatio);\n\t        }\n\t\n\t        if (Common.isElement(render.element)) {\n\t            render.element.appendChild(render.canvas);\n\t        } else if (!render.canvas.parentNode) {\n\t            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n\t        }\n\t\n\t        return render;\n\t    };\n\t\n\t    /**\n\t     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n\t     * @method run\n\t     * @param {render} render\n\t     */\n\t    Render.run = function(render) {\n\t        (function loop(time){\n\t            render.frameRequestId = _requestAnimationFrame(loop);\n\t            Render.world(render);\n\t        })();\n\t    };\n\t\n\t    /**\n\t     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n\t     * @method stop\n\t     * @param {render} render\n\t     */\n\t    Render.stop = function(render) {\n\t        _cancelAnimationFrame(render.frameRequestId);\n\t    };\n\t\n\t    /**\n\t     * Sets the pixel ratio of the renderer and updates the canvas.\n\t     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n\t     * @method setPixelRatio\n\t     * @param {render} render\n\t     * @param {number} pixelRatio\n\t     */\n\t    Render.setPixelRatio = function(render, pixelRatio) {\n\t        var options = render.options,\n\t            canvas = render.canvas;\n\t\n\t        if (pixelRatio === 'auto') {\n\t            pixelRatio = _getPixelRatio(canvas);\n\t        }\n\t\n\t        options.pixelRatio = pixelRatio;\n\t        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n\t        canvas.width = options.width * pixelRatio;\n\t        canvas.height = options.height * pixelRatio;\n\t        canvas.style.width = options.width + 'px';\n\t        canvas.style.height = options.height + 'px';\n\t        render.context.scale(pixelRatio, pixelRatio);\n\t    };\n\t\n\t    /**\n\t     * Positions and sizes the viewport around the given object bounds.\n\t     * Objects must have at least one of the following properties:\n\t     * - `object.bounds`\n\t     * - `object.position`\n\t     * - `object.min` and `object.max`\n\t     * - `object.x` and `object.y`\n\t     * @method lookAt\n\t     * @param {render} render\n\t     * @param {object[]} objects\n\t     * @param {vector} [padding]\n\t     * @param {bool} [center=true]\n\t     */\n\t    Render.lookAt = function(render, objects, padding, center) {\n\t        center = typeof center !== 'undefined' ? center : true;\n\t        objects = Common.isArray(objects) ? objects : [objects];\n\t        padding = padding || {\n\t            x: 0,\n\t            y: 0\n\t        };\n\t\n\t        // find bounds of all objects\n\t        var bounds = {\n\t            min: { x: Infinity, y: Infinity },\n\t            max: { x: -Infinity, y: -Infinity }\n\t        };\n\t\n\t        for (var i = 0; i < objects.length; i += 1) {\n\t            var object = objects[i],\n\t                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n\t                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\t\n\t            if (min && max) {\n\t                if (min.x < bounds.min.x)\n\t                    bounds.min.x = min.x;\n\t\n\t                if (max.x > bounds.max.x)\n\t                    bounds.max.x = max.x;\n\t\n\t                if (min.y < bounds.min.y)\n\t                    bounds.min.y = min.y;\n\t\n\t                if (max.y > bounds.max.y)\n\t                    bounds.max.y = max.y;\n\t            }\n\t        }\n\t\n\t        // find ratios\n\t        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n\t            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n\t            viewHeight = render.canvas.height,\n\t            viewWidth = render.canvas.width,\n\t            outerRatio = viewWidth / viewHeight,\n\t            innerRatio = width / height,\n\t            scaleX = 1,\n\t            scaleY = 1;\n\t\n\t        // find scale factor\n\t        if (innerRatio > outerRatio) {\n\t            scaleY = innerRatio / outerRatio;\n\t        } else {\n\t            scaleX = outerRatio / innerRatio;\n\t        }\n\t\n\t        // enable bounds\n\t        render.options.hasBounds = true;\n\t\n\t        // position and size\n\t        render.bounds.min.x = bounds.min.x;\n\t        render.bounds.max.x = bounds.min.x + width * scaleX;\n\t        render.bounds.min.y = bounds.min.y;\n\t        render.bounds.max.y = bounds.min.y + height * scaleY;\n\t\n\t        // center\n\t        if (center) {\n\t            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n\t            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n\t            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n\t            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n\t        }\n\t\n\t        // padding\n\t        render.bounds.min.x -= padding.x;\n\t        render.bounds.max.x -= padding.x;\n\t        render.bounds.min.y -= padding.y;\n\t        render.bounds.max.y -= padding.y;\n\t\n\t        // update mouse\n\t        if (render.mouse) {\n\t            Mouse.setScale(render.mouse, {\n\t                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n\t                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n\t            });\n\t\n\t            Mouse.setOffset(render.mouse, render.bounds.min);\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Applies viewport transforms based on `render.bounds` to a render context.\n\t     * @method startViewTransform\n\t     * @param {render} render\n\t     */\n\t    Render.startViewTransform = function(render) {\n\t        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n\t            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n\t            boundsScaleX = boundsWidth / render.options.width,\n\t            boundsScaleY = boundsHeight / render.options.height;\n\t\n\t        render.context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n\t        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n\t    };\n\t\n\t    /**\n\t     * Resets all transforms on the render context.\n\t     * @method endViewTransform\n\t     * @param {render} render\n\t     */\n\t    Render.endViewTransform = function(render) {\n\t        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n\t    };\n\t\n\t    /**\n\t     * Renders the given `engine`'s `Matter.World` object.\n\t     * This is the entry point for all rendering and should be called every time the scene changes.\n\t     * @method world\n\t     * @param {render} render\n\t     */\n\t    Render.world = function(render) {\n\t        var engine = render.engine,\n\t            world = engine.world,\n\t            canvas = render.canvas,\n\t            context = render.context,\n\t            options = render.options,\n\t            allBodies = Composite.allBodies(world),\n\t            allConstraints = Composite.allConstraints(world),\n\t            background = options.wireframes ? options.wireframeBackground : options.background,\n\t            bodies = [],\n\t            constraints = [],\n\t            i;\n\t\n\t        var event = {\n\t            timestamp: engine.timing.timestamp\n\t        };\n\t\n\t        Events.trigger(render, 'beforeRender', event);\n\t\n\t        // apply background if it has changed\n\t        if (render.currentBackground !== background)\n\t            _applyBackground(render, background);\n\t\n\t        // clear the canvas with a transparent fill, to allow the canvas background to show\n\t        context.globalCompositeOperation = 'source-in';\n\t        context.fillStyle = \"transparent\";\n\t        context.fillRect(0, 0, canvas.width, canvas.height);\n\t        context.globalCompositeOperation = 'source-over';\n\t\n\t        // handle bounds\n\t        if (options.hasBounds) {\n\t            // filter out bodies that are not in view\n\t            for (i = 0; i < allBodies.length; i++) {\n\t                var body = allBodies[i];\n\t                if (Bounds.overlaps(body.bounds, render.bounds))\n\t                    bodies.push(body);\n\t            }\n\t\n\t            // filter out constraints that are not in view\n\t            for (i = 0; i < allConstraints.length; i++) {\n\t                var constraint = allConstraints[i],\n\t                    bodyA = constraint.bodyA,\n\t                    bodyB = constraint.bodyB,\n\t                    pointAWorld = constraint.pointA,\n\t                    pointBWorld = constraint.pointB;\n\t\n\t                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n\t                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\t\n\t                if (!pointAWorld || !pointBWorld)\n\t                    continue;\n\t\n\t                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n\t                    constraints.push(constraint);\n\t            }\n\t\n\t            // transform the view\n\t            Render.startViewTransform(render);\n\t\n\t            // update mouse\n\t            if (render.mouse) {\n\t                Mouse.setScale(render.mouse, {\n\t                    x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n\t                    y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n\t                });\n\t\n\t                Mouse.setOffset(render.mouse, render.bounds.min);\n\t            }\n\t        } else {\n\t            constraints = allConstraints;\n\t            bodies = allBodies;\n\t        }\n\t\n\t        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n\t            // fully featured rendering of bodies\n\t            Render.bodies(render, bodies, context);\n\t        } else {\n\t            if (options.showConvexHulls)\n\t                Render.bodyConvexHulls(render, bodies, context);\n\t\n\t            // optimised method for wireframes only\n\t            Render.bodyWireframes(render, bodies, context);\n\t        }\n\t\n\t        if (options.showBounds)\n\t            Render.bodyBounds(render, bodies, context);\n\t\n\t        if (options.showAxes || options.showAngleIndicator)\n\t            Render.bodyAxes(render, bodies, context);\n\t\n\t        if (options.showPositions)\n\t            Render.bodyPositions(render, bodies, context);\n\t\n\t        if (options.showVelocity)\n\t            Render.bodyVelocity(render, bodies, context);\n\t\n\t        if (options.showIds)\n\t            Render.bodyIds(render, bodies, context);\n\t\n\t        if (options.showSeparations)\n\t            Render.separations(render, engine.pairs.list, context);\n\t\n\t        if (options.showCollisions)\n\t            Render.collisions(render, engine.pairs.list, context);\n\t\n\t        if (options.showVertexNumbers)\n\t            Render.vertexNumbers(render, bodies, context);\n\t\n\t        if (options.showMousePosition)\n\t            Render.mousePosition(render, render.mouse, context);\n\t\n\t        Render.constraints(constraints, context);\n\t\n\t        if (options.showBroadphase && engine.broadphase.controller === Grid)\n\t            Render.grid(render, engine.broadphase, context);\n\t\n\t        if (options.showDebug)\n\t            Render.debug(render, context);\n\t\n\t        if (options.hasBounds) {\n\t            // revert view transforms\n\t            Render.endViewTransform(render);\n\t        }\n\t\n\t        Events.trigger(render, 'afterRender', event);\n\t    };\n\t\n\t    /**\n\t     * Description\n\t     * @private\n\t     * @method debug\n\t     * @param {render} render\n\t     * @param {RenderingContext} context\n\t     */\n\t    Render.debug = function(render, context) {\n\t        var c = context,\n\t            engine = render.engine,\n\t            world = engine.world,\n\t            metrics = engine.metrics,\n\t            options = render.options,\n\t            bodies = Composite.allBodies(world),\n\t            space = \"    \";\n\t\n\t        if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\n\t            var text = \"\";\n\t\n\t            if (metrics.timing) {\n\t                text += \"fps: \" + Math.round(metrics.timing.fps) + space;\n\t            }\n\t\n\t\n\t            render.debugString = text;\n\t            render.debugTimestamp = engine.timing.timestamp;\n\t        }\n\t\n\t        if (render.debugString) {\n\t            c.font = \"12px Arial\";\n\t\n\t            if (options.wireframes) {\n\t                c.fillStyle = 'rgba(255,255,255,0.5)';\n\t            } else {\n\t                c.fillStyle = 'rgba(0,0,0,0.5)';\n\t            }\n\t\n\t            var split = render.debugString.split('\\n');\n\t\n\t            for (var i = 0; i < split.length; i++) {\n\t                c.fillText(split[i], 50, 50 + i * 18);\n\t            }\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Description\n\t     * @private\n\t     * @method constraints\n\t     * @param {constraint[]} constraints\n\t     * @param {RenderingContext} context\n\t     */\n\t    Render.constraints = function(constraints, context) {\n\t        var c = context;\n\t\n\t        for (var i = 0; i < constraints.length; i++) {\n\t            var constraint = constraints[i];\n\t\n\t            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n\t                continue;\n\t\n\t            var bodyA = constraint.bodyA,\n\t                bodyB = constraint.bodyB,\n\t                start,\n\t                end;\n\t\n\t            if (bodyA) {\n\t                start = Vector.add(bodyA.position, constraint.pointA);\n\t            } else {\n\t                start = constraint.pointA;\n\t            }\n\t\n\t            if (constraint.render.type === 'pin') {\n\t                c.beginPath();\n\t                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n\t                c.closePath();\n\t            } else {\n\t                if (bodyB) {\n\t                    end = Vector.add(bodyB.position, constraint.pointB);\n\t                } else {\n\t                    end = constraint.pointB;\n\t                }\n\t\n\t                c.beginPath();\n\t                c.moveTo(start.x, start.y);\n\t\n\t                if (constraint.render.type === 'spring') {\n\t                    var delta = Vector.sub(end, start),\n\t                        normal = Vector.perp(Vector.normalise(delta)),\n\t                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n\t                        offset;\n\t\n\t                    for (var j = 1; j < coils; j += 1) {\n\t                        offset = j % 2 === 0 ? 1 : -1;\n\t\n\t                        c.lineTo(\n\t                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n\t                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n\t                        );\n\t                    }\n\t                }\n\t\n\t                c.lineTo(end.x, end.y);\n\t            }\n\t\n\t            if (constraint.render.lineWidth) {\n\t                c.lineWidth = constraint.render.lineWidth;\n\t                c.strokeStyle = constraint.render.strokeStyle;\n\t                c.stroke();\n\t            }\n\t\n\t            if (constraint.render.anchors) {\n\t                c.fillStyle = constraint.render.strokeStyle;\n\t                c.beginPath();\n\t                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n\t                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n\t                c.closePath();\n\t                c.fill();\n\t            }\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Description\n\t     * @private\n\t     * @method bodyShadows\n\t     * @param {render} render\n\t     * @param {body[]} bodies\n\t     * @param {RenderingContext} context\n\t     */\n\t    Render.bodyShadows = function(render, bodies, context) {\n\t        var c = context,\n\t            engine = render.engine;\n\t\n\t        for (var i = 0; i < bodies.length; i++) {\n\t            var body = bodies[i];\n\t\n\t            if (!body.render.visible)\n\t                continue;\n\t\n\t            if (body.circleRadius) {\n\t                c.beginPath();\n\t                c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\n\t                c.closePath();\n\t            } else {\n\t                c.beginPath();\n\t                c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\t                for (var j = 1; j < body.vertices.length; j++) {\n\t                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\n\t                }\n\t                c.closePath();\n\t            }\n\t\n\t            var distanceX = body.position.x - render.options.width * 0.5,\n\t                distanceY = body.position.y - render.options.height * 0.2,\n\t                distance = Math.abs(distanceX) + Math.abs(distanceY);\n\t\n\t            c.shadowColor = 'rgba(0,0,0,0.15)';\n\t            c.shadowOffsetX = 0.05 * distanceX;\n\t            c.shadowOffsetY = 0.05 * distanceY;\n\t            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\t\n\t            c.fill();\n\t\n\t            c.shadowColor = null;\n\t            c.shadowOffsetX = null;\n\t            c.shadowOffsetY = null;\n\t            c.shadowBlur = null;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Description\n\t     * @private\n\t     * @method bodies\n\t     * @param {render} render\n\t     * @param {body[]} bodies\n\t     * @param {RenderingContext} context\n\t     */\n\t    Render.bodies = function(render, bodies, context) {\n\t        var c = context,\n\t            engine = render.engine,\n\t            options = render.options,\n\t            showInternalEdges = options.showInternalEdges || !options.wireframes,\n\t            body,\n\t            part,\n\t            i,\n\t            k;\n\t\n\t        for (i = 0; i < bodies.length; i++) {\n\t            body = bodies[i];\n\t\n\t            if (!body.render.visible)\n\t                continue;\n\t\n\t            // handle compound parts\n\t            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n\t                part = body.parts[k];\n\t\n\t                if (!part.render.visible)\n\t                    continue;\n\t\n\t                if (options.showSleeping && body.isSleeping) {\n\t                    c.globalAlpha = 0.5 * part.render.opacity;\n\t                } else if (part.render.opacity !== 1) {\n\t                    c.globalAlpha = part.render.opacity;\n\t                }\n\t\n\t                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n\t                    // part sprite\n\t                    var sprite = part.render.sprite,\n\t                        texture = _getTexture(render, sprite.texture);\n\t\n\t                    c.translate(part.position.x, part.position.y);\n\t                    c.rotate(part.angle);\n\t\n\t                    c.drawImage(\n\t                        texture,\n\t                        texture.width * -sprite.xOffset * sprite.xScale,\n\t                        texture.height * -sprite.yOffset * sprite.yScale,\n\t                        texture.width * sprite.xScale,\n\t                        texture.height * sprite.yScale\n\t                    );\n\t\n\t                    // revert translation, hopefully faster than save / restore\n\t                    c.rotate(-part.angle);\n\t                    c.translate(-part.position.x, -part.position.y);\n\t                } else {\n\t                    // part polygon\n\t                    if (part.circleRadius) {\n\t                        c.beginPath();\n\t                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n\t                    } else {\n\t                        c.beginPath();\n\t                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\t\n\t                        for (var j = 1; j < part.vertices.length; j++) {\n\t                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n\t                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n\t                            } else {\n\t                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n\t                            }\n\t\n\t                            if (part.vertices[j].isInternal && !showInternalEdges) {\n\t                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n\t                            }\n\t                        }\n\t\n\t                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n\t                        c.closePath();\n\t                    }\n\t\n\t                    if (!options.wireframes) {\n\t                        c.fillStyle = part.render.fillStyle;\n\t\n\t                        if (part.render.lineWidth) {\n\t                            c.lineWidth = part.render.lineWidth;\n\t                            c.strokeStyle = part.render.strokeStyle;\n\t                            c.stroke();\n\t                        }\n\t\n\t                        c.fill();\n\t                    } else {\n\t                        c.lineWidth = 1;\n\t                        c.strokeStyle = '#bbb';\n\t                        c.stroke();\n\t                    }\n\t                }\n\t\n\t                c.globalAlpha = 1;\n\t            }\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Optimised method for drawing body wireframes in one pass\n\t     * @private\n\t     * @method bodyWireframes\n\t     * @param {render} render\n\t     * @param {body[]} bodies\n\t     * @param {RenderingContext} context\n\t     */\n\t    Render.bodyWireframes = function(render, bodies, context) {\n\t        var c = context,\n\t            showInternalEdges = render.options.showInternalEdges,\n\t            body,\n\t            part,\n\t            i,\n\t            j,\n\t            k;\n\t\n\t        c.beginPath();\n\t\n\t        // render all bodies\n\t        for (i = 0; i < bodies.length; i++) {\n\t            body = bodies[i];\n\t\n\t            if (!body.render.visible)\n\t                continue;\n\t\n\t            // handle compound parts\n\t            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n\t                part = body.parts[k];\n\t\n\t                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\t\n\t                for (j = 1; j < part.vertices.length; j++) {\n\t                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n\t                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n\t                    } else {\n\t                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n\t                    }\n\t\n\t                    if (part.vertices[j].isInternal && !showInternalEdges) {\n\t                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n\t                    }\n\t                }\n\t\n\t                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n\t            }\n\t        }\n\t\n\t        c.lineWidth = 1;\n\t        c.strokeStyle = '#bbb';\n\t        c.stroke();\n\t    };\n\t\n\t    /**\n\t     * Optimised method for drawing body convex hull wireframes in one pass\n\t     * @private\n\t     * @method bodyConvexHulls\n\t     * @param {render} render\n\t     * @param {body[]} bodies\n\t     * @param {RenderingContext} context\n\t     */\n\t    Render.bodyConvexHulls = function(render, bodies, context) {\n\t        var c = context,\n\t            body,\n\t            part,\n\t            i,\n\t            j,\n\t            k;\n\t\n\t        c.beginPath();\n\t\n\t        // render convex hulls\n\t        for (i = 0; i < bodies.length; i++) {\n\t            body = bodies[i];\n\t\n\t            if (!body.render.visible || body.parts.length === 1)\n\t                continue;\n\t\n\t            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\t\n\t            for (j = 1; j < body.vertices.length; j++) {\n\t                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n\t            }\n\t\n\t            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n\t        }\n\t\n\t        c.lineWidth = 1;\n\t        c.strokeStyle = 'rgba(255,255,255,0.2)';\n\t        c.stroke();\n\t    };\n\t\n\t    /**\n\t     * Renders body vertex numbers.\n\t     * @private\n\t     * @method vertexNumbers\n\t     * @param {render} render\n\t     * @param {body[]} bodies\n\t     * @param {RenderingContext} context\n\t     */\n\t    Render.vertexNumbers = function(render, bodies, context) {\n\t        var c = context,\n\t            i,\n\t            j,\n\t            k;\n\t\n\t        for (i = 0; i < bodies.length; i++) {\n\t            var parts = bodies[i].parts;\n\t            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n\t                var part = parts[k];\n\t                for (j = 0; j < part.vertices.length; j++) {\n\t                    c.fillStyle = 'rgba(255,255,255,0.2)';\n\t                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n\t                }\n\t            }\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Renders mouse position.\n\t     * @private\n\t     * @method mousePosition\n\t     * @param {render} render\n\t     * @param {mouse} mouse\n\t     * @param {RenderingContext} context\n\t     */\n\t    Render.mousePosition = function(render, mouse, context) {\n\t        var c = context;\n\t        c.fillStyle = 'rgba(255,255,255,0.8)';\n\t        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n\t    };\n\t\n\t    /**\n\t     * Draws body bounds\n\t     * @private\n\t     * @method bodyBounds\n\t     * @param {render} render\n\t     * @param {body[]} bodies\n\t     * @param {RenderingContext} context\n\t     */\n\t    Render.bodyBounds = function(render, bodies, context) {\n\t        var c = context,\n\t            engine = render.engine,\n\t            options = render.options;\n\t\n\t        c.beginPath();\n\t\n\t        for (var i = 0; i < bodies.length; i++) {\n\t            var body = bodies[i];\n\t\n\t            if (body.render.visible) {\n\t                var parts = bodies[i].parts;\n\t                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n\t                    var part = parts[j];\n\t                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n\t                }\n\t            }\n\t        }\n\t\n\t        if (options.wireframes) {\n\t            c.strokeStyle = 'rgba(255,255,255,0.08)';\n\t        } else {\n\t            c.strokeStyle = 'rgba(0,0,0,0.1)';\n\t        }\n\t\n\t        c.lineWidth = 1;\n\t        c.stroke();\n\t    };\n\t\n\t    /**\n\t     * Draws body angle indicators and axes\n\t     * @private\n\t     * @method bodyAxes\n\t     * @param {render} render\n\t     * @param {body[]} bodies\n\t     * @param {RenderingContext} context\n\t     */\n\t    Render.bodyAxes = function(render, bodies, context) {\n\t        var c = context,\n\t            engine = render.engine,\n\t            options = render.options,\n\t            part,\n\t            i,\n\t            j,\n\t            k;\n\t\n\t        c.beginPath();\n\t\n\t        for (i = 0; i < bodies.length; i++) {\n\t            var body = bodies[i],\n\t                parts = body.parts;\n\t\n\t            if (!body.render.visible)\n\t                continue;\n\t\n\t            if (options.showAxes) {\n\t                // render all axes\n\t                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n\t                    part = parts[j];\n\t                    for (k = 0; k < part.axes.length; k++) {\n\t                        var axis = part.axes[k];\n\t                        c.moveTo(part.position.x, part.position.y);\n\t                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n\t                    }\n\t                }\n\t            } else {\n\t                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n\t                    part = parts[j];\n\t                    for (k = 0; k < part.axes.length; k++) {\n\t                        // render a single axis indicator\n\t                        c.moveTo(part.position.x, part.position.y);\n\t                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n\t                                 (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        if (options.wireframes) {\n\t            c.strokeStyle = 'indianred';\n\t            c.lineWidth = 1;\n\t        } else {\n\t            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n\t            c.globalCompositeOperation = 'overlay';\n\t            c.lineWidth = 2;\n\t        }\n\t\n\t        c.stroke();\n\t        c.globalCompositeOperation = 'source-over';\n\t    };\n\t\n\t    /**\n\t     * Draws body positions\n\t     * @private\n\t     * @method bodyPositions\n\t     * @param {render} render\n\t     * @param {body[]} bodies\n\t     * @param {RenderingContext} context\n\t     */\n\t    Render.bodyPositions = function(render, bodies, context) {\n\t        var c = context,\n\t            engine = render.engine,\n\t            options = render.options,\n\t            body,\n\t            part,\n\t            i,\n\t            k;\n\t\n\t        c.beginPath();\n\t\n\t        // render current positions\n\t        for (i = 0; i < bodies.length; i++) {\n\t            body = bodies[i];\n\t\n\t            if (!body.render.visible)\n\t                continue;\n\t\n\t            // handle compound parts\n\t            for (k = 0; k < body.parts.length; k++) {\n\t                part = body.parts[k];\n\t                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n\t                c.closePath();\n\t            }\n\t        }\n\t\n\t        if (options.wireframes) {\n\t            c.fillStyle = 'indianred';\n\t        } else {\n\t            c.fillStyle = 'rgba(0,0,0,0.5)';\n\t        }\n\t        c.fill();\n\t\n\t        c.beginPath();\n\t\n\t        // render previous positions\n\t        for (i = 0; i < bodies.length; i++) {\n\t            body = bodies[i];\n\t            if (body.render.visible) {\n\t                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n\t                c.closePath();\n\t            }\n\t        }\n\t\n\t        c.fillStyle = 'rgba(255,165,0,0.8)';\n\t        c.fill();\n\t    };\n\t\n\t    /**\n\t     * Draws body velocity\n\t     * @private\n\t     * @method bodyVelocity\n\t     * @param {render} render\n\t     * @param {body[]} bodies\n\t     * @param {RenderingContext} context\n\t     */\n\t    Render.bodyVelocity = function(render, bodies, context) {\n\t        var c = context;\n\t\n\t        c.beginPath();\n\t\n\t        for (var i = 0; i < bodies.length; i++) {\n\t            var body = bodies[i];\n\t\n\t            if (!body.render.visible)\n\t                continue;\n\t\n\t            c.moveTo(body.position.x, body.position.y);\n\t            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n\t        }\n\t\n\t        c.lineWidth = 3;\n\t        c.strokeStyle = 'cornflowerblue';\n\t        c.stroke();\n\t    };\n\t\n\t    /**\n\t     * Draws body ids\n\t     * @private\n\t     * @method bodyIds\n\t     * @param {render} render\n\t     * @param {body[]} bodies\n\t     * @param {RenderingContext} context\n\t     */\n\t    Render.bodyIds = function(render, bodies, context) {\n\t        var c = context,\n\t            i,\n\t            j;\n\t\n\t        for (i = 0; i < bodies.length; i++) {\n\t            if (!bodies[i].render.visible)\n\t                continue;\n\t\n\t            var parts = bodies[i].parts;\n\t            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n\t                var part = parts[j];\n\t                c.font = \"12px Arial\";\n\t                c.fillStyle = 'rgba(255,255,255,0.5)';\n\t                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n\t            }\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Description\n\t     * @private\n\t     * @method collisions\n\t     * @param {render} render\n\t     * @param {pair[]} pairs\n\t     * @param {RenderingContext} context\n\t     */\n\t    Render.collisions = function(render, pairs, context) {\n\t        var c = context,\n\t            options = render.options,\n\t            pair,\n\t            collision,\n\t            corrected,\n\t            bodyA,\n\t            bodyB,\n\t            i,\n\t            j;\n\t\n\t        c.beginPath();\n\t\n\t        // render collision positions\n\t        for (i = 0; i < pairs.length; i++) {\n\t            pair = pairs[i];\n\t\n\t            if (!pair.isActive)\n\t                continue;\n\t\n\t            collision = pair.collision;\n\t            for (j = 0; j < pair.activeContacts.length; j++) {\n\t                var contact = pair.activeContacts[j],\n\t                    vertex = contact.vertex;\n\t                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n\t            }\n\t        }\n\t\n\t        if (options.wireframes) {\n\t            c.fillStyle = 'rgba(255,255,255,0.7)';\n\t        } else {\n\t            c.fillStyle = 'orange';\n\t        }\n\t        c.fill();\n\t\n\t        c.beginPath();\n\t\n\t        // render collision normals\n\t        for (i = 0; i < pairs.length; i++) {\n\t            pair = pairs[i];\n\t\n\t            if (!pair.isActive)\n\t                continue;\n\t\n\t            collision = pair.collision;\n\t\n\t            if (pair.activeContacts.length > 0) {\n\t                var normalPosX = pair.activeContacts[0].vertex.x,\n\t                    normalPosY = pair.activeContacts[0].vertex.y;\n\t\n\t                if (pair.activeContacts.length === 2) {\n\t                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n\t                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n\t                }\n\t\n\t                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n\t                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n\t                } else {\n\t                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n\t                }\n\t\n\t                c.lineTo(normalPosX, normalPosY);\n\t            }\n\t        }\n\t\n\t        if (options.wireframes) {\n\t            c.strokeStyle = 'rgba(255,165,0,0.7)';\n\t        } else {\n\t            c.strokeStyle = 'orange';\n\t        }\n\t\n\t        c.lineWidth = 1;\n\t        c.stroke();\n\t    };\n\t\n\t    /**\n\t     * Description\n\t     * @private\n\t     * @method separations\n\t     * @param {render} render\n\t     * @param {pair[]} pairs\n\t     * @param {RenderingContext} context\n\t     */\n\t    Render.separations = function(render, pairs, context) {\n\t        var c = context,\n\t            options = render.options,\n\t            pair,\n\t            collision,\n\t            corrected,\n\t            bodyA,\n\t            bodyB,\n\t            i,\n\t            j;\n\t\n\t        c.beginPath();\n\t\n\t        // render separations\n\t        for (i = 0; i < pairs.length; i++) {\n\t            pair = pairs[i];\n\t\n\t            if (!pair.isActive)\n\t                continue;\n\t\n\t            collision = pair.collision;\n\t            bodyA = collision.bodyA;\n\t            bodyB = collision.bodyB;\n\t\n\t            var k = 1;\n\t\n\t            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n\t            if (bodyB.isStatic) k = 0;\n\t\n\t            c.moveTo(bodyB.position.x, bodyB.position.y);\n\t            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\t\n\t            k = 1;\n\t\n\t            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n\t            if (bodyA.isStatic) k = 0;\n\t\n\t            c.moveTo(bodyA.position.x, bodyA.position.y);\n\t            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n\t        }\n\t\n\t        if (options.wireframes) {\n\t            c.strokeStyle = 'rgba(255,165,0,0.5)';\n\t        } else {\n\t            c.strokeStyle = 'orange';\n\t        }\n\t        c.stroke();\n\t    };\n\t\n\t    /**\n\t     * Description\n\t     * @private\n\t     * @method grid\n\t     * @param {render} render\n\t     * @param {grid} grid\n\t     * @param {RenderingContext} context\n\t     */\n\t    Render.grid = function(render, grid, context) {\n\t        var c = context,\n\t            options = render.options;\n\t\n\t        if (options.wireframes) {\n\t            c.strokeStyle = 'rgba(255,180,0,0.1)';\n\t        } else {\n\t            c.strokeStyle = 'rgba(255,180,0,0.5)';\n\t        }\n\t\n\t        c.beginPath();\n\t\n\t        var bucketKeys = Common.keys(grid.buckets);\n\t\n\t        for (var i = 0; i < bucketKeys.length; i++) {\n\t            var bucketId = bucketKeys[i];\n\t\n\t            if (grid.buckets[bucketId].length < 2)\n\t                continue;\n\t\n\t            var region = bucketId.split(/C|R/);\n\t            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth,\n\t                    0.5 + parseInt(region[2], 10) * grid.bucketHeight,\n\t                    grid.bucketWidth,\n\t                    grid.bucketHeight);\n\t        }\n\t\n\t        c.lineWidth = 1;\n\t        c.stroke();\n\t    };\n\t\n\t    /**\n\t     * Description\n\t     * @private\n\t     * @method inspector\n\t     * @param {inspector} inspector\n\t     * @param {RenderingContext} context\n\t     */\n\t    Render.inspector = function(inspector, context) {\n\t        var engine = inspector.engine,\n\t            selected = inspector.selected,\n\t            render = inspector.render,\n\t            options = render.options,\n\t            bounds;\n\t\n\t        if (options.hasBounds) {\n\t            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n\t                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n\t                boundsScaleX = boundsWidth / render.options.width,\n\t                boundsScaleY = boundsHeight / render.options.height;\n\t\n\t            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n\t            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n\t        }\n\t\n\t        for (var i = 0; i < selected.length; i++) {\n\t            var item = selected[i].data;\n\t\n\t            context.translate(0.5, 0.5);\n\t            context.lineWidth = 1;\n\t            context.strokeStyle = 'rgba(255,165,0,0.9)';\n\t            context.setLineDash([1,2]);\n\t\n\t            switch (item.type) {\n\t\n\t            case 'body':\n\t\n\t                // render body selections\n\t                bounds = item.bounds;\n\t                context.beginPath();\n\t                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n\t                             Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n\t                context.closePath();\n\t                context.stroke();\n\t\n\t                break;\n\t\n\t            case 'constraint':\n\t\n\t                // render constraint selections\n\t                var point = item.pointA;\n\t                if (item.bodyA)\n\t                    point = item.pointB;\n\t                context.beginPath();\n\t                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n\t                context.closePath();\n\t                context.stroke();\n\t\n\t                break;\n\t\n\t            }\n\t\n\t            context.setLineDash([]);\n\t            context.translate(-0.5, -0.5);\n\t        }\n\t\n\t        // render selection region\n\t        if (inspector.selectStart !== null) {\n\t            context.translate(0.5, 0.5);\n\t            context.lineWidth = 1;\n\t            context.strokeStyle = 'rgba(255,165,0,0.6)';\n\t            context.fillStyle = 'rgba(255,165,0,0.1)';\n\t            bounds = inspector.selectBounds;\n\t            context.beginPath();\n\t            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n\t                         Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n\t            context.closePath();\n\t            context.stroke();\n\t            context.fill();\n\t            context.translate(-0.5, -0.5);\n\t        }\n\t\n\t        if (options.hasBounds)\n\t            context.setTransform(1, 0, 0, 1, 0, 0);\n\t    };\n\t\n\t    /**\n\t     * Description\n\t     * @method _createCanvas\n\t     * @private\n\t     * @param {} width\n\t     * @param {} height\n\t     * @return canvas\n\t     */\n\t    var _createCanvas = function(width, height) {\n\t        var canvas = document.createElement('canvas');\n\t        canvas.width = width;\n\t        canvas.height = height;\n\t        canvas.oncontextmenu = function() { return false; };\n\t        canvas.onselectstart = function() { return false; };\n\t        return canvas;\n\t    };\n\t\n\t    /**\n\t     * Gets the pixel ratio of the canvas.\n\t     * @method _getPixelRatio\n\t     * @private\n\t     * @param {HTMLElement} canvas\n\t     * @return {Number} pixel ratio\n\t     */\n\t    var _getPixelRatio = function(canvas) {\n\t        var context = canvas.getContext('2d'),\n\t            devicePixelRatio = window.devicePixelRatio || 1,\n\t            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n\t                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n\t                                      || context.backingStorePixelRatio || 1;\n\t\n\t        return devicePixelRatio / backingStorePixelRatio;\n\t    };\n\t\n\t    /**\n\t     * Gets the requested texture (an Image) via its path\n\t     * @method _getTexture\n\t     * @private\n\t     * @param {render} render\n\t     * @param {string} imagePath\n\t     * @return {Image} texture\n\t     */\n\t    var _getTexture = function(render, imagePath) {\n\t        var image = render.textures[imagePath];\n\t\n\t        if (image)\n\t            return image;\n\t\n\t        image = render.textures[imagePath] = new Image();\n\t        image.src = imagePath;\n\t\n\t        return image;\n\t    };\n\t\n\t    /**\n\t     * Applies the background to the canvas using CSS.\n\t     * @method applyBackground\n\t     * @private\n\t     * @param {render} render\n\t     * @param {string} background\n\t     */\n\t    var _applyBackground = function(render, background) {\n\t        var cssBackground = background;\n\t\n\t        if (/(jpg|gif|png)$/.test(background))\n\t            cssBackground = 'url(' + background + ')';\n\t\n\t        render.canvas.style.background = cssBackground;\n\t        render.canvas.style.backgroundSize = \"contain\";\n\t        render.currentBackground = background;\n\t    };\n\t\n\t    /*\n\t    *\n\t    *  Events Documentation\n\t    *\n\t    */\n\t\n\t    /**\n\t    * Fired before rendering\n\t    *\n\t    * @event beforeRender\n\t    * @param {} event An event object\n\t    * @param {number} event.timestamp The engine.timing.timestamp of the event\n\t    * @param {} event.source The source object of the event\n\t    * @param {} event.name The name of the event\n\t    */\n\t\n\t    /**\n\t    * Fired after rendering\n\t    *\n\t    * @event afterRender\n\t    * @param {} event An event object\n\t    * @param {number} event.timestamp The engine.timing.timestamp of the event\n\t    * @param {} event.source The source object of the event\n\t    * @param {} event.name The name of the event\n\t    */\n\t\n\t    /*\n\t    *\n\t    *  Properties Documentation\n\t    *\n\t    */\n\t\n\t    /**\n\t     * A back-reference to the `Matter.Render` module.\n\t     *\n\t     * @property controller\n\t     * @type render\n\t     */\n\t\n\t    /**\n\t     * A reference to the `Matter.Engine` instance to be used.\n\t     *\n\t     * @property engine\n\t     * @type engine\n\t     */\n\t\n\t    /**\n\t     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n\t     *\n\t     * @property element\n\t     * @type HTMLElement\n\t     * @default null\n\t     */\n\t\n\t    /**\n\t     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n\t     *\n\t     * @property canvas\n\t     * @type HTMLCanvasElement\n\t     * @default null\n\t     */\n\t\n\t    /**\n\t     * The configuration options of the renderer.\n\t     *\n\t     * @property options\n\t     * @type {}\n\t     */\n\t\n\t    /**\n\t     * The target width in pixels of the `render.canvas` to be created.\n\t     *\n\t     * @property options.width\n\t     * @type number\n\t     * @default 800\n\t     */\n\t\n\t    /**\n\t     * The target height in pixels of the `render.canvas` to be created.\n\t     *\n\t     * @property options.height\n\t     * @type number\n\t     * @default 600\n\t     */\n\t\n\t    /**\n\t     * A flag that specifies if `render.bounds` should be used when rendering.\n\t     *\n\t     * @property options.hasBounds\n\t     * @type boolean\n\t     * @default false\n\t     */\n\t\n\t    /**\n\t     * A `Bounds` object that specifies the drawing view region.\n\t     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n\t     * This allows for creating views that can pan or zoom around the scene.\n\t     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n\t     *\n\t     * @property bounds\n\t     * @type bounds\n\t     */\n\t\n\t    /**\n\t     * The 2d rendering context from the `render.canvas` element.\n\t     *\n\t     * @property context\n\t     * @type CanvasRenderingContext2D\n\t     */\n\t\n\t    /**\n\t     * The sprite texture cache.\n\t     *\n\t     * @property textures\n\t     * @type {}\n\t     */\n\t\n\t})();\n\t\n\t},{\"../body/Composite\":2,\"../collision/Grid\":6,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}],32:[function(_dereq_,module,exports){\n\t/**\n\t* The `Matter.RenderPixi` module is an example renderer using pixi.js.\n\t* See also `Matter.Render` for a canvas based renderer.\n\t*\n\t* @class RenderPixi\n\t* @deprecated the Matter.RenderPixi module will soon be removed from the Matter.js core.\n\t* It will likely be moved to its own repository (but maintenance will be limited).\n\t*/\n\t\n\tvar RenderPixi = {};\n\t\n\tmodule.exports = RenderPixi;\n\t\n\tvar Bounds = _dereq_('../geometry/Bounds');\n\tvar Composite = _dereq_('../body/Composite');\n\tvar Common = _dereq_('../core/Common');\n\tvar Events = _dereq_('../core/Events');\n\tvar Vector = _dereq_('../geometry/Vector');\n\t\n\t(function() {\n\t\n\t    var _requestAnimationFrame,\n\t        _cancelAnimationFrame;\n\t\n\t    if (typeof window !== 'undefined') {\n\t        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n\t                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame \n\t                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\t   \n\t        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n\t                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n\t    }\n\t    \n\t    /**\n\t     * Creates a new Pixi.js WebGL renderer\n\t     * @method create\n\t     * @param {object} options\n\t     * @return {RenderPixi} A new renderer\n\t     * @deprecated\n\t     */\n\t    RenderPixi.create = function(options) {\n\t        Common.warn('RenderPixi.create: Matter.RenderPixi is deprecated (see docs)');\n\t\n\t        var defaults = {\n\t            controller: RenderPixi,\n\t            engine: null,\n\t            element: null,\n\t            frameRequestId: null,\n\t            canvas: null,\n\t            renderer: null,\n\t            container: null,\n\t            spriteContainer: null,\n\t            pixiOptions: null,\n\t            options: {\n\t                width: 800,\n\t                height: 600,\n\t                background: '#fafafa',\n\t                wireframeBackground: '#222',\n\t                hasBounds: false,\n\t                enabled: true,\n\t                wireframes: true,\n\t                showSleeping: true,\n\t                showDebug: false,\n\t                showBroadphase: false,\n\t                showBounds: false,\n\t                showVelocity: false,\n\t                showCollisions: false,\n\t                showAxes: false,\n\t                showPositions: false,\n\t                showAngleIndicator: false,\n\t                showIds: false,\n\t                showShadows: false\n\t            }\n\t        };\n\t\n\t        var render = Common.extend(defaults, options),\n\t            transparent = !render.options.wireframes && render.options.background === 'transparent';\n\t\n\t        // init pixi\n\t        render.pixiOptions = render.pixiOptions || {\n\t            view: render.canvas,\n\t            transparent: transparent,\n\t            antialias: true,\n\t            backgroundColor: options.background\n\t        };\n\t\n\t        render.mouse = options.mouse;\n\t        render.engine = options.engine;\n\t        render.renderer = render.renderer || new PIXI.WebGLRenderer(render.options.width, render.options.height, render.pixiOptions);\n\t        render.container = render.container || new PIXI.Container();\n\t        render.spriteContainer = render.spriteContainer || new PIXI.Container();\n\t        render.canvas = render.canvas || render.renderer.view;\n\t        render.bounds = render.bounds || { \n\t            min: {\n\t                x: 0,\n\t                y: 0\n\t            }, \n\t            max: { \n\t                x: render.options.width,\n\t                y: render.options.height\n\t            }\n\t        };\n\t\n\t        // event listeners\n\t        Events.on(render.engine, 'beforeUpdate', function() {\n\t            RenderPixi.clear(render);\n\t        });\n\t\n\t        // caches\n\t        render.textures = {};\n\t        render.sprites = {};\n\t        render.primitives = {};\n\t\n\t        // use a sprite batch for performance\n\t        render.container.addChild(render.spriteContainer);\n\t\n\t        // insert canvas\n\t        if (Common.isElement(render.element)) {\n\t            render.element.appendChild(render.canvas);\n\t        } else {\n\t            Common.warn('No \"render.element\" passed, \"render.canvas\" was not inserted into document.');\n\t        }\n\t\n\t        // prevent menus on canvas\n\t        render.canvas.oncontextmenu = function() { return false; };\n\t        render.canvas.onselectstart = function() { return false; };\n\t\n\t        return render;\n\t    };\n\t\n\t    /**\n\t     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n\t     * @method run\n\t     * @param {render} render\n\t     * @deprecated\n\t     */\n\t    RenderPixi.run = function(render) {\n\t        (function loop(time){\n\t            render.frameRequestId = _requestAnimationFrame(loop);\n\t            RenderPixi.world(render);\n\t        })();\n\t    };\n\t\n\t    /**\n\t     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n\t     * @method stop\n\t     * @param {render} render\n\t     * @deprecated\n\t     */\n\t    RenderPixi.stop = function(render) {\n\t        _cancelAnimationFrame(render.frameRequestId);\n\t    };\n\t\n\t    /**\n\t     * Clears the scene graph\n\t     * @method clear\n\t     * @param {RenderPixi} render\n\t     * @deprecated\n\t     */\n\t    RenderPixi.clear = function(render) {\n\t        var container = render.container,\n\t            spriteContainer = render.spriteContainer;\n\t\n\t        // clear stage container\n\t        while (container.children[0]) { \n\t            container.removeChild(container.children[0]); \n\t        }\n\t\n\t        // clear sprite batch\n\t        while (spriteContainer.children[0]) { \n\t            spriteContainer.removeChild(spriteContainer.children[0]); \n\t        }\n\t\n\t        var bgSprite = render.sprites['bg-0'];\n\t\n\t        // clear caches\n\t        render.textures = {};\n\t        render.sprites = {};\n\t        render.primitives = {};\n\t\n\t        // set background sprite\n\t        render.sprites['bg-0'] = bgSprite;\n\t        if (bgSprite)\n\t            container.addChildAt(bgSprite, 0);\n\t\n\t        // add sprite batch back into container\n\t        render.container.addChild(render.spriteContainer);\n\t\n\t        // reset background state\n\t        render.currentBackground = null;\n\t\n\t        // reset bounds transforms\n\t        container.scale.set(1, 1);\n\t        container.position.set(0, 0);\n\t    };\n\t\n\t    /**\n\t     * Sets the background of the canvas \n\t     * @method setBackground\n\t     * @param {RenderPixi} render\n\t     * @param {string} background\n\t     * @deprecated\n\t     */\n\t    RenderPixi.setBackground = function(render, background) {\n\t        if (render.currentBackground !== background) {\n\t            var isColor = background.indexOf && background.indexOf('#') !== -1,\n\t                bgSprite = render.sprites['bg-0'];\n\t\n\t            if (isColor) {\n\t                // if solid background color\n\t                var color = Common.colorToNumber(background);\n\t                render.renderer.backgroundColor = color;\n\t\n\t                // remove background sprite if existing\n\t                if (bgSprite)\n\t                    render.container.removeChild(bgSprite); \n\t            } else {\n\t                // initialise background sprite if needed\n\t                if (!bgSprite) {\n\t                    var texture = _getTexture(render, background);\n\t\n\t                    bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(texture);\n\t                    bgSprite.position.x = 0;\n\t                    bgSprite.position.y = 0;\n\t                    render.container.addChildAt(bgSprite, 0);\n\t                }\n\t            }\n\t\n\t            render.currentBackground = background;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Description\n\t     * @method world\n\t     * @param {engine} engine\n\t     * @deprecated\n\t     */\n\t    RenderPixi.world = function(render) {\n\t        var engine = render.engine,\n\t            world = engine.world,\n\t            renderer = render.renderer,\n\t            container = render.container,\n\t            options = render.options,\n\t            bodies = Composite.allBodies(world),\n\t            allConstraints = Composite.allConstraints(world),\n\t            constraints = [],\n\t            i;\n\t\n\t        if (options.wireframes) {\n\t            RenderPixi.setBackground(render, options.wireframeBackground);\n\t        } else {\n\t            RenderPixi.setBackground(render, options.background);\n\t        }\n\t\n\t        // handle bounds\n\t        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n\t            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n\t            boundsScaleX = boundsWidth / render.options.width,\n\t            boundsScaleY = boundsHeight / render.options.height;\n\t\n\t        if (options.hasBounds) {\n\t            // Hide bodies that are not in view\n\t            for (i = 0; i < bodies.length; i++) {\n\t                var body = bodies[i];\n\t                body.render.sprite.visible = Bounds.overlaps(body.bounds, render.bounds);\n\t            }\n\t\n\t            // filter out constraints that are not in view\n\t            for (i = 0; i < allConstraints.length; i++) {\n\t                var constraint = allConstraints[i],\n\t                    bodyA = constraint.bodyA,\n\t                    bodyB = constraint.bodyB,\n\t                    pointAWorld = constraint.pointA,\n\t                    pointBWorld = constraint.pointB;\n\t\n\t                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n\t                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\t\n\t                if (!pointAWorld || !pointBWorld)\n\t                    continue;\n\t\n\t                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n\t                    constraints.push(constraint);\n\t            }\n\t\n\t            // transform the view\n\t            container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\n\t            container.position.set(-render.bounds.min.x * (1 / boundsScaleX), -render.bounds.min.y * (1 / boundsScaleY));\n\t        } else {\n\t            constraints = allConstraints;\n\t        }\n\t\n\t        for (i = 0; i < bodies.length; i++)\n\t            RenderPixi.body(render, bodies[i]);\n\t\n\t        for (i = 0; i < constraints.length; i++)\n\t            RenderPixi.constraint(render, constraints[i]);\n\t\n\t        renderer.render(container);\n\t    };\n\t\n\t\n\t    /**\n\t     * Description\n\t     * @method constraint\n\t     * @param {engine} engine\n\t     * @param {constraint} constraint\n\t     * @deprecated\n\t     */\n\t    RenderPixi.constraint = function(render, constraint) {\n\t        var engine = render.engine,\n\t            bodyA = constraint.bodyA,\n\t            bodyB = constraint.bodyB,\n\t            pointA = constraint.pointA,\n\t            pointB = constraint.pointB,\n\t            container = render.container,\n\t            constraintRender = constraint.render,\n\t            primitiveId = 'c-' + constraint.id,\n\t            primitive = render.primitives[primitiveId];\n\t\n\t        // initialise constraint primitive if not existing\n\t        if (!primitive)\n\t            primitive = render.primitives[primitiveId] = new PIXI.Graphics();\n\t\n\t        // don't render if constraint does not have two end points\n\t        if (!constraintRender.visible || !constraint.pointA || !constraint.pointB) {\n\t            primitive.clear();\n\t            return;\n\t        }\n\t\n\t        // add to scene graph if not already there\n\t        if (Common.indexOf(container.children, primitive) === -1)\n\t            container.addChild(primitive);\n\t\n\t        // render the constraint on every update, since they can change dynamically\n\t        primitive.clear();\n\t        primitive.beginFill(0, 0);\n\t        primitive.lineStyle(constraintRender.lineWidth, Common.colorToNumber(constraintRender.strokeStyle), 1);\n\t        \n\t        if (bodyA) {\n\t            primitive.moveTo(bodyA.position.x + pointA.x, bodyA.position.y + pointA.y);\n\t        } else {\n\t            primitive.moveTo(pointA.x, pointA.y);\n\t        }\n\t\n\t        if (bodyB) {\n\t            primitive.lineTo(bodyB.position.x + pointB.x, bodyB.position.y + pointB.y);\n\t        } else {\n\t            primitive.lineTo(pointB.x, pointB.y);\n\t        }\n\t\n\t        primitive.endFill();\n\t    };\n\t    \n\t    /**\n\t     * Description\n\t     * @method body\n\t     * @param {engine} engine\n\t     * @param {body} body\n\t     * @deprecated\n\t     */\n\t    RenderPixi.body = function(render, body) {\n\t        var engine = render.engine,\n\t            bodyRender = body.render;\n\t\n\t        if (!bodyRender.visible)\n\t            return;\n\t\n\t        if (bodyRender.sprite && bodyRender.sprite.texture) {\n\t            var spriteId = 'b-' + body.id,\n\t                sprite = render.sprites[spriteId],\n\t                spriteContainer = render.spriteContainer;\n\t\n\t            // initialise body sprite if not existing\n\t            if (!sprite)\n\t                sprite = render.sprites[spriteId] = _createBodySprite(render, body);\n\t\n\t            // add to scene graph if not already there\n\t            if (Common.indexOf(spriteContainer.children, sprite) === -1)\n\t                spriteContainer.addChild(sprite);\n\t\n\t            // update body sprite\n\t            sprite.position.x = body.position.x;\n\t            sprite.position.y = body.position.y;\n\t            sprite.rotation = body.angle;\n\t            sprite.scale.x = bodyRender.sprite.xScale || 1;\n\t            sprite.scale.y = bodyRender.sprite.yScale || 1;\n\t        } else {\n\t            var primitiveId = 'b-' + body.id,\n\t                primitive = render.primitives[primitiveId],\n\t                container = render.container;\n\t\n\t            // initialise body primitive if not existing\n\t            if (!primitive) {\n\t                primitive = render.primitives[primitiveId] = _createBodyPrimitive(render, body);\n\t                primitive.initialAngle = body.angle;\n\t            }\n\t\n\t            // add to scene graph if not already there\n\t            if (Common.indexOf(container.children, primitive) === -1)\n\t                container.addChild(primitive);\n\t\n\t            // update body primitive\n\t            primitive.position.x = body.position.x;\n\t            primitive.position.y = body.position.y;\n\t            primitive.rotation = body.angle - primitive.initialAngle;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Creates a body sprite\n\t     * @method _createBodySprite\n\t     * @private\n\t     * @param {RenderPixi} render\n\t     * @param {body} body\n\t     * @return {PIXI.Sprite} sprite\n\t     * @deprecated\n\t     */\n\t    var _createBodySprite = function(render, body) {\n\t        var bodyRender = body.render,\n\t            texturePath = bodyRender.sprite.texture,\n\t            texture = _getTexture(render, texturePath),\n\t            sprite = new PIXI.Sprite(texture);\n\t\n\t        sprite.anchor.x = body.render.sprite.xOffset;\n\t        sprite.anchor.y = body.render.sprite.yOffset;\n\t\n\t        return sprite;\n\t    };\n\t\n\t    /**\n\t     * Creates a body primitive\n\t     * @method _createBodyPrimitive\n\t     * @private\n\t     * @param {RenderPixi} render\n\t     * @param {body} body\n\t     * @return {PIXI.Graphics} graphics\n\t     * @deprecated\n\t     */\n\t    var _createBodyPrimitive = function(render, body) {\n\t        var bodyRender = body.render,\n\t            options = render.options,\n\t            primitive = new PIXI.Graphics(),\n\t            fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n\t            strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n\t            strokeStyleIndicator = Common.colorToNumber(bodyRender.strokeStyle),\n\t            strokeStyleWireframe = Common.colorToNumber('#bbb'),\n\t            strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n\t            part;\n\t\n\t        primitive.clear();\n\t\n\t        // handle compound parts\n\t        for (var k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n\t            part = body.parts[k];\n\t\n\t            if (!options.wireframes) {\n\t                primitive.beginFill(fillStyle, 1);\n\t                primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n\t            } else {\n\t                primitive.beginFill(0, 0);\n\t                primitive.lineStyle(1, strokeStyleWireframe, 1);\n\t            }\n\t\n\t            primitive.moveTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\t\n\t            for (var j = 1; j < part.vertices.length; j++) {\n\t                primitive.lineTo(part.vertices[j].x - body.position.x, part.vertices[j].y - body.position.y);\n\t            }\n\t\n\t            primitive.lineTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\t\n\t            primitive.endFill();\n\t\n\t            // angle indicator\n\t            if (options.showAngleIndicator || options.showAxes) {\n\t                primitive.beginFill(0, 0);\n\t\n\t                if (options.wireframes) {\n\t                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n\t                } else {\n\t                    primitive.lineStyle(1, strokeStyleIndicator);\n\t                }\n\t\n\t                primitive.moveTo(part.position.x - body.position.x, part.position.y - body.position.y);\n\t                primitive.lineTo(((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2 - body.position.x), \n\t                                 ((part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2 - body.position.y));\n\t\n\t                primitive.endFill();\n\t            }\n\t        }\n\t\n\t        return primitive;\n\t    };\n\t\n\t    /**\n\t     * Gets the requested texture (a PIXI.Texture) via its path\n\t     * @method _getTexture\n\t     * @private\n\t     * @param {RenderPixi} render\n\t     * @param {string} imagePath\n\t     * @return {PIXI.Texture} texture\n\t     * @deprecated\n\t     */\n\t    var _getTexture = function(render, imagePath) {\n\t        var texture = render.textures[imagePath];\n\t\n\t        if (!texture)\n\t            texture = render.textures[imagePath] = PIXI.Texture.fromImage(imagePath);\n\t\n\t        return texture;\n\t    };\n\t\n\t})();\n\t\n\t},{\"../body/Composite\":2,\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}]},{},[30])(30)\n\t});\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tif (true) {\n\t  module.exports = __webpack_require__(20);\n\t} else {\n\t  module.exports = require('./cjs/react.development.js');\n\t}\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar asap = __webpack_require__(5);\n\t\n\tfunction noop() {}\n\t\n\t// States:\n\t//\n\t// 0 - pending\n\t// 1 - fulfilled with _value\n\t// 2 - rejected with _value\n\t// 3 - adopted the state of another promise, _value\n\t//\n\t// once the state is no longer pending (0) it is immutable\n\t\n\t// All `_` prefixed properties will be reduced to `_{random number}`\n\t// at build time to obfuscate them and discourage their use.\n\t// We don't use symbols or Object.defineProperty to fully hide them\n\t// because the performance isn't good enough.\n\t\n\t\n\t// to avoid using try/catch inside critical functions, we\n\t// extract them to here.\n\tvar LAST_ERROR = null;\n\tvar IS_ERROR = {};\n\tfunction getThen(obj) {\n\t  try {\n\t    return obj.then;\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\t\n\tfunction tryCallOne(fn, a) {\n\t  try {\n\t    return fn(a);\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\tfunction tryCallTwo(fn, a, b) {\n\t  try {\n\t    fn(a, b);\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\t\n\tmodule.exports = Promise;\n\t\n\tfunction Promise(fn) {\n\t  if (typeof this !== 'object') {\n\t    throw new TypeError('Promises must be constructed via new');\n\t  }\n\t  if (typeof fn !== 'function') {\n\t    throw new TypeError('not a function');\n\t  }\n\t  this._45 = 0;\n\t  this._81 = 0;\n\t  this._65 = null;\n\t  this._54 = null;\n\t  if (fn === noop) return;\n\t  doResolve(fn, this);\n\t}\n\tPromise._10 = null;\n\tPromise._97 = null;\n\tPromise._61 = noop;\n\t\n\tPromise.prototype.then = function(onFulfilled, onRejected) {\n\t  if (this.constructor !== Promise) {\n\t    return safeThen(this, onFulfilled, onRejected);\n\t  }\n\t  var res = new Promise(noop);\n\t  handle(this, new Handler(onFulfilled, onRejected, res));\n\t  return res;\n\t};\n\t\n\tfunction safeThen(self, onFulfilled, onRejected) {\n\t  return new self.constructor(function (resolve, reject) {\n\t    var res = new Promise(noop);\n\t    res.then(resolve, reject);\n\t    handle(self, new Handler(onFulfilled, onRejected, res));\n\t  });\n\t};\n\tfunction handle(self, deferred) {\n\t  while (self._81 === 3) {\n\t    self = self._65;\n\t  }\n\t  if (Promise._10) {\n\t    Promise._10(self);\n\t  }\n\t  if (self._81 === 0) {\n\t    if (self._45 === 0) {\n\t      self._45 = 1;\n\t      self._54 = deferred;\n\t      return;\n\t    }\n\t    if (self._45 === 1) {\n\t      self._45 = 2;\n\t      self._54 = [self._54, deferred];\n\t      return;\n\t    }\n\t    self._54.push(deferred);\n\t    return;\n\t  }\n\t  handleResolved(self, deferred);\n\t}\n\t\n\tfunction handleResolved(self, deferred) {\n\t  asap(function() {\n\t    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t    if (cb === null) {\n\t      if (self._81 === 1) {\n\t        resolve(deferred.promise, self._65);\n\t      } else {\n\t        reject(deferred.promise, self._65);\n\t      }\n\t      return;\n\t    }\n\t    var ret = tryCallOne(cb, self._65);\n\t    if (ret === IS_ERROR) {\n\t      reject(deferred.promise, LAST_ERROR);\n\t    } else {\n\t      resolve(deferred.promise, ret);\n\t    }\n\t  });\n\t}\n\tfunction resolve(self, newValue) {\n\t  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t  if (newValue === self) {\n\t    return reject(\n\t      self,\n\t      new TypeError('A promise cannot be resolved with itself.')\n\t    );\n\t  }\n\t  if (\n\t    newValue &&\n\t    (typeof newValue === 'object' || typeof newValue === 'function')\n\t  ) {\n\t    var then = getThen(newValue);\n\t    if (then === IS_ERROR) {\n\t      return reject(self, LAST_ERROR);\n\t    }\n\t    if (\n\t      then === self.then &&\n\t      newValue instanceof Promise\n\t    ) {\n\t      self._81 = 3;\n\t      self._65 = newValue;\n\t      finale(self);\n\t      return;\n\t    } else if (typeof then === 'function') {\n\t      doResolve(then.bind(newValue), self);\n\t      return;\n\t    }\n\t  }\n\t  self._81 = 1;\n\t  self._65 = newValue;\n\t  finale(self);\n\t}\n\t\n\tfunction reject(self, newValue) {\n\t  self._81 = 2;\n\t  self._65 = newValue;\n\t  if (Promise._97) {\n\t    Promise._97(self, newValue);\n\t  }\n\t  finale(self);\n\t}\n\tfunction finale(self) {\n\t  if (self._45 === 1) {\n\t    handle(self, self._54);\n\t    self._54 = null;\n\t  }\n\t  if (self._45 === 2) {\n\t    for (var i = 0; i < self._54.length; i++) {\n\t      handle(self, self._54[i]);\n\t    }\n\t    self._54 = null;\n\t  }\n\t}\n\t\n\tfunction Handler(onFulfilled, onRejected, promise){\n\t  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t  this.promise = promise;\n\t}\n\t\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, promise) {\n\t  var done = false;\n\t  var res = tryCallTwo(fn, function (value) {\n\t    if (done) return;\n\t    done = true;\n\t    resolve(promise, value);\n\t  }, function (reason) {\n\t    if (done) return;\n\t    done = true;\n\t    reject(promise, reason);\n\t  })\n\t  if (!done && res === IS_ERROR) {\n\t    done = true;\n\t    reject(promise, LAST_ERROR);\n\t  }\n\t}\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t/*\n\tobject-assign\n\t(c) Sindre Sorhus\n\t@license MIT\n\t*/\n\t\n\t'use strict';\n\t/* eslint-disable no-unused-vars */\n\tvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\t\n\t\treturn Object(val);\n\t}\n\t\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\t\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\t\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (getOwnPropertySymbols) {\n\t\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\t\n\t// Use the fastest means possible to execute a task in its own turn, with\n\t// priority over other events including IO, animation, reflow, and redraw\n\t// events in browsers.\n\t//\n\t// An exception thrown by a task will permanently interrupt the processing of\n\t// subsequent tasks. The higher level `asap` function ensures that if an\n\t// exception is thrown by a task, that the task queue will continue flushing as\n\t// soon as possible, but if you use `rawAsap` directly, you are responsible to\n\t// either ensure that no exceptions are thrown from your task, or to manually\n\t// call `rawAsap.requestFlush` if an exception is thrown.\n\tmodule.exports = rawAsap;\n\tfunction rawAsap(task) {\n\t    if (!queue.length) {\n\t        requestFlush();\n\t        flushing = true;\n\t    }\n\t    // Equivalent to push, but avoids a function call.\n\t    queue[queue.length] = task;\n\t}\n\t\n\tvar queue = [];\n\t// Once a flush has been requested, no further calls to `requestFlush` are\n\t// necessary until the next `flush` completes.\n\tvar flushing = false;\n\t// `requestFlush` is an implementation-specific method that attempts to kick\n\t// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n\t// the event queue before yielding to the browser's own event loop.\n\tvar requestFlush;\n\t// The position of the next task to execute in the task queue. This is\n\t// preserved between calls to `flush` so that it can be resumed if\n\t// a task throws an exception.\n\tvar index = 0;\n\t// If a task schedules additional tasks recursively, the task queue can grow\n\t// unbounded. To prevent memory exhaustion, the task queue will periodically\n\t// truncate already-completed tasks.\n\tvar capacity = 1024;\n\t\n\t// The flush function processes all tasks that have been scheduled with\n\t// `rawAsap` unless and until one of those tasks throws an exception.\n\t// If a task throws an exception, `flush` ensures that its state will remain\n\t// consistent and will resume where it left off when called again.\n\t// However, `flush` does not make any arrangements to be called again if an\n\t// exception is thrown.\n\tfunction flush() {\n\t    while (index < queue.length) {\n\t        var currentIndex = index;\n\t        // Advance the index before calling the task. This ensures that we will\n\t        // begin flushing on the next task the task throws an error.\n\t        index = index + 1;\n\t        queue[currentIndex].call();\n\t        // Prevent leaking memory for long chains of recursive calls to `asap`.\n\t        // If we call `asap` within tasks scheduled by `asap`, the queue will\n\t        // grow, but to avoid an O(n) walk for every task we execute, we don't\n\t        // shift tasks off the queue after they have been executed.\n\t        // Instead, we periodically shift 1024 tasks off the queue.\n\t        if (index > capacity) {\n\t            // Manually shift all values starting at the index back to the\n\t            // beginning of the queue.\n\t            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n\t                queue[scan] = queue[scan + index];\n\t            }\n\t            queue.length -= index;\n\t            index = 0;\n\t        }\n\t    }\n\t    queue.length = 0;\n\t    index = 0;\n\t    flushing = false;\n\t}\n\t\n\t// `requestFlush` is implemented using a strategy based on data collected from\n\t// every available SauceLabs Selenium web driver worker at time of writing.\n\t// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\t\n\t// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n\t// have WebKitMutationObserver but not un-prefixed MutationObserver.\n\t// Must use `global` or `self` instead of `window` to work in both frames and web\n\t// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\t\n\t/* globals self */\n\tvar scope = typeof global !== \"undefined\" ? global : self;\n\tvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\t\n\t// MutationObservers are desirable because they have high priority and work\n\t// reliably everywhere they are implemented.\n\t// They are implemented in all modern browsers.\n\t//\n\t// - Android 4-4.3\n\t// - Chrome 26-34\n\t// - Firefox 14-29\n\t// - Internet Explorer 11\n\t// - iPad Safari 6-7.1\n\t// - iPhone Safari 7-7.1\n\t// - Safari 6-7\n\tif (typeof BrowserMutationObserver === \"function\") {\n\t    requestFlush = makeRequestCallFromMutationObserver(flush);\n\t\n\t// MessageChannels are desirable because they give direct access to the HTML\n\t// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n\t// 11-12, and in web workers in many engines.\n\t// Although message channels yield to any queued rendering and IO tasks, they\n\t// would be better than imposing the 4ms delay of timers.\n\t// However, they do not work reliably in Internet Explorer or Safari.\n\t\n\t// Internet Explorer 10 is the only browser that has setImmediate but does\n\t// not have MutationObservers.\n\t// Although setImmediate yields to the browser's renderer, it would be\n\t// preferrable to falling back to setTimeout since it does not have\n\t// the minimum 4ms penalty.\n\t// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n\t// Desktop to a lesser extent) that renders both setImmediate and\n\t// MessageChannel useless for the purposes of ASAP.\n\t// https://github.com/kriskowal/q/issues/396\n\t\n\t// Timers are implemented universally.\n\t// We fall back to timers in workers in most engines, and in foreground\n\t// contexts in the following browsers.\n\t// However, note that even this simple case requires nuances to operate in a\n\t// broad spectrum of browsers.\n\t//\n\t// - Firefox 3-13\n\t// - Internet Explorer 6-9\n\t// - iPad Safari 4.3\n\t// - Lynx 2.8.7\n\t} else {\n\t    requestFlush = makeRequestCallFromTimer(flush);\n\t}\n\t\n\t// `requestFlush` requests that the high priority event queue be flushed as\n\t// soon as possible.\n\t// This is useful to prevent an error thrown in a task from stalling the event\n\t// queue if the exception handled by Node.js’s\n\t// `process.on(\"uncaughtException\")` or by a domain.\n\trawAsap.requestFlush = requestFlush;\n\t\n\t// To request a high priority event, we induce a mutation observer by toggling\n\t// the text of a text node between \"1\" and \"-1\".\n\tfunction makeRequestCallFromMutationObserver(callback) {\n\t    var toggle = 1;\n\t    var observer = new BrowserMutationObserver(callback);\n\t    var node = document.createTextNode(\"\");\n\t    observer.observe(node, {characterData: true});\n\t    return function requestCall() {\n\t        toggle = -toggle;\n\t        node.data = toggle;\n\t    };\n\t}\n\t\n\t// The message channel technique was discovered by Malte Ubl and was the\n\t// original foundation for this library.\n\t// http://www.nonblocking.io/2011/06/windownexttick.html\n\t\n\t// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n\t// page's first load. Thankfully, this version of Safari supports\n\t// MutationObservers, so we don't need to fall back in that case.\n\t\n\t// function makeRequestCallFromMessageChannel(callback) {\n\t//     var channel = new MessageChannel();\n\t//     channel.port1.onmessage = callback;\n\t//     return function requestCall() {\n\t//         channel.port2.postMessage(0);\n\t//     };\n\t// }\n\t\n\t// For reasons explained above, we are also unable to use `setImmediate`\n\t// under any circumstances.\n\t// Even if we were, there is another bug in Internet Explorer 10.\n\t// It is not sufficient to assign `setImmediate` to `requestFlush` because\n\t// `setImmediate` must be called *by name* and therefore must be wrapped in a\n\t// closure.\n\t// Never forget.\n\t\n\t// function makeRequestCallFromSetImmediate(callback) {\n\t//     return function requestCall() {\n\t//         setImmediate(callback);\n\t//     };\n\t// }\n\t\n\t// Safari 6.0 has a problem where timers will get lost while the user is\n\t// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n\t// mutation observers, so that implementation is used instead.\n\t// However, if we ever elect to use timers in Safari, the prevalent work-around\n\t// is to add a scroll event listener that calls for a flush.\n\t\n\t// `setTimeout` does not call the passed callback if the delay is less than\n\t// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n\t// even then.\n\t\n\tfunction makeRequestCallFromTimer(callback) {\n\t    return function requestCall() {\n\t        // We dispatch a timeout with a specified delay of 0 for engines that\n\t        // can reliably accommodate that request. This will usually be snapped\n\t        // to a 4 milisecond delay, but once we're flushing, there's no delay\n\t        // between events.\n\t        var timeoutHandle = setTimeout(handleTimer, 0);\n\t        // However, since this timer gets frequently dropped in Firefox\n\t        // workers, we enlist an interval handle that will try to fire\n\t        // an event 20 times per second until it succeeds.\n\t        var intervalHandle = setInterval(handleTimer, 50);\n\t\n\t        function handleTimer() {\n\t            // Whichever timer succeeds will cancel both timers and\n\t            // execute the callback.\n\t            clearTimeout(timeoutHandle);\n\t            clearInterval(intervalHandle);\n\t            callback();\n\t        }\n\t    };\n\t}\n\t\n\t// This is for `asap.js` only.\n\t// Its name will be periodically randomized to break any code that depends on\n\t// its existence.\n\trawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\t\n\t// ASAP was originally a nextTick shim included in Q. This was factored out\n\t// into this ASAP package. It was later adapted to RSVP which made further\n\t// amendments. These decisions, particularly to marginalize MessageChannel and\n\t// to capture the MutationObserver implementation in a closure, were integrated\n\t// back into ASAP proper.\n\t// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 7 */\n6,\n/* 8 */\n4,\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t//This file contains the ES6 extensions to the core Promises/A+ API\n\t\n\tvar Promise = __webpack_require__(3);\n\t\n\tmodule.exports = Promise;\n\t\n\t/* Static Functions */\n\t\n\tvar TRUE = valuePromise(true);\n\tvar FALSE = valuePromise(false);\n\tvar NULL = valuePromise(null);\n\tvar UNDEFINED = valuePromise(undefined);\n\tvar ZERO = valuePromise(0);\n\tvar EMPTYSTRING = valuePromise('');\n\t\n\tfunction valuePromise(value) {\n\t  var p = new Promise(Promise._61);\n\t  p._81 = 1;\n\t  p._65 = value;\n\t  return p;\n\t}\n\tPromise.resolve = function (value) {\n\t  if (value instanceof Promise) return value;\n\t\n\t  if (value === null) return NULL;\n\t  if (value === undefined) return UNDEFINED;\n\t  if (value === true) return TRUE;\n\t  if (value === false) return FALSE;\n\t  if (value === 0) return ZERO;\n\t  if (value === '') return EMPTYSTRING;\n\t\n\t  if (typeof value === 'object' || typeof value === 'function') {\n\t    try {\n\t      var then = value.then;\n\t      if (typeof then === 'function') {\n\t        return new Promise(then.bind(value));\n\t      }\n\t    } catch (ex) {\n\t      return new Promise(function (resolve, reject) {\n\t        reject(ex);\n\t      });\n\t    }\n\t  }\n\t  return valuePromise(value);\n\t};\n\t\n\tPromise.all = function (arr) {\n\t  var args = Array.prototype.slice.call(arr);\n\t\n\t  return new Promise(function (resolve, reject) {\n\t    if (args.length === 0) return resolve([]);\n\t    var remaining = args.length;\n\t    function res(i, val) {\n\t      if (val && (typeof val === 'object' || typeof val === 'function')) {\n\t        if (val instanceof Promise && val.then === Promise.prototype.then) {\n\t          while (val._81 === 3) {\n\t            val = val._65;\n\t          }\n\t          if (val._81 === 1) return res(i, val._65);\n\t          if (val._81 === 2) reject(val._65);\n\t          val.then(function (val) {\n\t            res(i, val);\n\t          }, reject);\n\t          return;\n\t        } else {\n\t          var then = val.then;\n\t          if (typeof then === 'function') {\n\t            var p = new Promise(then.bind(val));\n\t            p.then(function (val) {\n\t              res(i, val);\n\t            }, reject);\n\t            return;\n\t          }\n\t        }\n\t      }\n\t      args[i] = val;\n\t      if (--remaining === 0) {\n\t        resolve(args);\n\t      }\n\t    }\n\t    for (var i = 0; i < args.length; i++) {\n\t      res(i, args[i]);\n\t    }\n\t  });\n\t};\n\t\n\tPromise.reject = function (value) {\n\t  return new Promise(function (resolve, reject) {\n\t    reject(value);\n\t  });\n\t};\n\t\n\tPromise.race = function (values) {\n\t  return new Promise(function (resolve, reject) {\n\t    values.forEach(function(value){\n\t      Promise.resolve(value).then(resolve, reject);\n\t    });\n\t  });\n\t};\n\t\n\t/* Prototype Methods */\n\t\n\tPromise.prototype['catch'] = function (onRejected) {\n\t  return this.then(null, onRejected);\n\t};\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(3);\n\t\n\tvar DEFAULT_WHITELIST = [\n\t  ReferenceError,\n\t  TypeError,\n\t  RangeError\n\t];\n\t\n\tvar enabled = false;\n\texports.disable = disable;\n\tfunction disable() {\n\t  enabled = false;\n\t  Promise._10 = null;\n\t  Promise._97 = null;\n\t}\n\t\n\texports.enable = enable;\n\tfunction enable(options) {\n\t  options = options || {};\n\t  if (enabled) disable();\n\t  enabled = true;\n\t  var id = 0;\n\t  var displayId = 0;\n\t  var rejections = {};\n\t  Promise._10 = function (promise) {\n\t    if (\n\t      promise._81 === 2 && // IS REJECTED\n\t      rejections[promise._72]\n\t    ) {\n\t      if (rejections[promise._72].logged) {\n\t        onHandled(promise._72);\n\t      } else {\n\t        clearTimeout(rejections[promise._72].timeout);\n\t      }\n\t      delete rejections[promise._72];\n\t    }\n\t  };\n\t  Promise._97 = function (promise, err) {\n\t    if (promise._45 === 0) { // not yet handled\n\t      promise._72 = id++;\n\t      rejections[promise._72] = {\n\t        displayId: null,\n\t        error: err,\n\t        timeout: setTimeout(\n\t          onUnhandled.bind(null, promise._72),\n\t          // For reference errors and type errors, this almost always\n\t          // means the programmer made a mistake, so log them after just\n\t          // 100ms\n\t          // otherwise, wait 2 seconds to see if they get handled\n\t          matchWhitelist(err, DEFAULT_WHITELIST)\n\t            ? 100\n\t            : 2000\n\t        ),\n\t        logged: false\n\t      };\n\t    }\n\t  };\n\t  function onUnhandled(id) {\n\t    if (\n\t      options.allRejections ||\n\t      matchWhitelist(\n\t        rejections[id].error,\n\t        options.whitelist || DEFAULT_WHITELIST\n\t      )\n\t    ) {\n\t      rejections[id].displayId = displayId++;\n\t      if (options.onUnhandled) {\n\t        rejections[id].logged = true;\n\t        options.onUnhandled(\n\t          rejections[id].displayId,\n\t          rejections[id].error\n\t        );\n\t      } else {\n\t        rejections[id].logged = true;\n\t        logError(\n\t          rejections[id].displayId,\n\t          rejections[id].error\n\t        );\n\t      }\n\t    }\n\t  }\n\t  function onHandled(id) {\n\t    if (rejections[id].logged) {\n\t      if (options.onHandled) {\n\t        options.onHandled(rejections[id].displayId, rejections[id].error);\n\t      } else if (!rejections[id].onUnhandled) {\n\t        console.warn(\n\t          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n\t        );\n\t        console.warn(\n\t          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n\t          rejections[id].displayId + '.'\n\t        );\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction logError(id, error) {\n\t  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n\t  var errStr = (error && (error.stack || error)) + '';\n\t  errStr.split('\\n').forEach(function (line) {\n\t    console.warn('  ' + line);\n\t  });\n\t}\n\t\n\tfunction matchWhitelist(error, list) {\n\t  return list.some(function (cls) {\n\t    return error instanceof cls;\n\t  });\n\t}\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// @remove-on-eject-begin\n\t/**\n\t * Copyright (c) 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\t// @remove-on-eject-end\n\t'use strict';\n\t\n\tif (typeof Promise === 'undefined') {\n\t  // Rejection tracking prevents a common issue where React gets into an\n\t  // inconsistent state due to an error, but it gets swallowed by a Promise,\n\t  // and the user has no idea what causes React's erratic future behavior.\n\t  __webpack_require__(10).enable();\n\t  window.Promise = __webpack_require__(9);\n\t}\n\t\n\t// fetch() polyfill for making API calls.\n\t__webpack_require__(12);\n\t\n\t// Object.assign() is commonly used with React.\n\t// It will use the native implementation if it's present and isn't buggy.\n\tObject.assign = __webpack_require__(8);\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  if (support.arrayBuffer) {\n\t    var viewClasses = [\n\t      '[object Int8Array]',\n\t      '[object Uint8Array]',\n\t      '[object Uint8ClampedArray]',\n\t      '[object Int16Array]',\n\t      '[object Uint16Array]',\n\t      '[object Int32Array]',\n\t      '[object Uint32Array]',\n\t      '[object Float32Array]',\n\t      '[object Float64Array]'\n\t    ]\n\t\n\t    var isDataView = function(obj) {\n\t      return obj && DataView.prototype.isPrototypeOf(obj)\n\t    }\n\t\n\t    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n\t      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n\t    }\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var oldValue = this.map[name]\n\t    this.map[name] = oldValue ? oldValue+','+value : value\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    name = normalizeName(name)\n\t    return this.has(name) ? this.map[name] : null\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = normalizeValue(value)\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    for (var name in this.map) {\n\t      if (this.map.hasOwnProperty(name)) {\n\t        callback.call(thisArg, this.map[name], name, this)\n\t      }\n\t    }\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsArrayBuffer(blob)\n\t    return promise\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsText(blob)\n\t    return promise\n\t  }\n\t\n\t  function readArrayBufferAsText(buf) {\n\t    var view = new Uint8Array(buf)\n\t    var chars = new Array(view.length)\n\t\n\t    for (var i = 0; i < view.length; i++) {\n\t      chars[i] = String.fromCharCode(view[i])\n\t    }\n\t    return chars.join('')\n\t  }\n\t\n\t  function bufferClone(buf) {\n\t    if (buf.slice) {\n\t      return buf.slice(0)\n\t    } else {\n\t      var view = new Uint8Array(buf.byteLength)\n\t      view.set(new Uint8Array(buf))\n\t      return view.buffer\n\t    }\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (!body) {\n\t        this._bodyText = ''\n\t      } else if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n\t        this._bodyArrayBuffer = bufferClone(body.buffer)\n\t        // IE 10-11 can't handle a DataView body.\n\t        this._bodyInit = new Blob([this._bodyArrayBuffer])\n\t      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n\t        this._bodyArrayBuffer = bufferClone(body)\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyArrayBuffer) {\n\t          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        if (this._bodyArrayBuffer) {\n\t          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n\t        } else {\n\t          return this.blob().then(readBlobAsArrayBuffer)\n\t        }\n\t      }\n\t    }\n\t\n\t    this.text = function() {\n\t      var rejected = consumed(this)\n\t      if (rejected) {\n\t        return rejected\n\t      }\n\t\n\t      if (this._bodyBlob) {\n\t        return readBlobAsText(this._bodyBlob)\n\t      } else if (this._bodyArrayBuffer) {\n\t        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n\t      } else if (this._bodyFormData) {\n\t        throw new Error('could not read FormData body as text')\n\t      } else {\n\t        return Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t\n\t    if (input instanceof Request) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body && input._bodyInit != null) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = String(input)\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this, { body: this._bodyInit })\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function parseHeaders(rawHeaders) {\n\t    var headers = new Headers()\n\t    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n\t      var parts = line.split(':')\n\t      var key = parts.shift().trim()\n\t      if (key) {\n\t        var value = parts.join(':').trim()\n\t        headers.append(key, value)\n\t      }\n\t    })\n\t    return headers\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = 'status' in options ? options.status : 200\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n\t    this.headers = new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request = new Request(input, init)\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n\t        }\n\t        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _matterJs = __webpack_require__(1);\n\t\n\tvar _matterJs2 = _interopRequireDefault(_matterJs);\n\t\n\tvar _ball = __webpack_require__(15);\n\t\n\tvar _ball2 = _interopRequireDefault(_ball);\n\t\n\tvar _drag = __webpack_require__(16);\n\t\n\tvar _drag2 = _interopRequireDefault(_drag);\n\t\n\tvar _render = __webpack_require__(17);\n\t\n\tvar _render2 = _interopRequireDefault(_render);\n\t\n\t__webpack_require__(6);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar App = function (_Component) {\n\t  _inherits(App, _Component);\n\t\n\t  function App(props) {\n\t    _classCallCheck(this, App);\n\t\n\t    var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));\n\t\n\t    _this.state = {\n\t      engine: _matterJs2.default.Engine.create()\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(App, [{\n\t    key: 'setupWorld',\n\t    value: function setupWorld(canvas) {\n\t      //create ball\n\t      var ball = new _ball2.default(canvas.width / 2, canvas.height / 2);\n\t      //create ground\n\t      var ground = _matterJs2.default.Bodies.rectangle(0, 495, canvas.width * 2, 20, { isStatic: true, render: { fillStyle: '#222' } });\n\t      //create drag constraint\n\t      var dragConstraint = (0, _drag2.default)(canvas, this.state.engine);\n\t\n\t      _matterJs2.default.World.add(this.state.engine.world, [ball, ground, dragConstraint]);\n\t    }\n\t  }, {\n\t    key: 'run',\n\t    value: function run(renderer) {\n\t      _matterJs2.default.Engine.run(this.state.engine);\n\t      _matterJs2.default.Render.run(renderer);\n\t    }\n\t  }, {\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      var canvas = document.getElementById(\"canvas\");\n\t      this.setupWorld(canvas);\n\t      var renderer = (0, _render2.default)(canvas, this.state.engine);\n\t      this.run(renderer);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'div',\n\t        { className: 'container' },\n\t        _react2.default.createElement(\n\t          'div',\n\t          null,\n\t          _react2.default.createElement(\n\t            'h2',\n\t            null,\n\t            'Red Ball'\n\t          ),\n\t          _react2.default.createElement(\n\t            'p',\n\t            null,\n\t            'A small experiment with React and ',\n\t            _react2.default.createElement(\n\t              'a',\n\t              { href: 'http://brm.io/matter-js/' },\n\t              'Matter.js'\n\t            )\n\t          )\n\t        ),\n\t        _react2.default.createElement('canvas', { id: 'canvas', className: 'canvas', width: '500', height: '500' }),\n\t        _react2.default.createElement(\n\t          'div',\n\t          null,\n\t          _react2.default.createElement(\n\t            'a',\n\t            { href: '' },\n\t            'refresh'\n\t          ),\n\t          _react2.default.createElement('br', null),\n\t          _react2.default.createElement('br', null),\n\t          _react2.default.createElement(\n\t            'a',\n\t            { href: '../' },\n\t            'back'\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return App;\n\t}(_react.Component);\n\t\n\texports.default = App;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(19);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _app = __webpack_require__(13);\n\t\n\tvar _app2 = _interopRequireDefault(_app);\n\t\n\t__webpack_require__(7);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_reactDom2.default.render(_react2.default.createElement(_app2.default, null), document.getElementById('root'));\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = Ball;\n\t\n\tvar _matterJs = __webpack_require__(1);\n\t\n\tvar _matterJs2 = _interopRequireDefault(_matterJs);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction Ball(x, y) {\n\t    this.body = _matterJs2.default.Bodies.circle(x, y, 25, {\n\t        friction: 0.0025,\n\t        restitution: 0.8,\n\t        render: {\n\t            fillStyle: 'red'\n\t        }\n\t    });\n\t\n\t    return this.body;\n\t}\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = createMouseDragConstraint;\n\t\n\tvar _matterJs = __webpack_require__(1);\n\t\n\tvar _matterJs2 = _interopRequireDefault(_matterJs);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction createMouseDragConstraint(canvas, engine) {\n\t    var mouse = _matterJs2.default.Mouse.create(canvas),\n\t        mouseConstraint = _matterJs2.default.MouseConstraint.create(engine, {\n\t        mouse: mouse,\n\t        constraint: {\n\t            stiffness: 0.2,\n\t            render: {\n\t                visible: false\n\t            }\n\t        }\n\t    });\n\t\n\t    return mouseConstraint;\n\t}\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = createRender;\n\t\n\tvar _matterJs = __webpack_require__(1);\n\t\n\tvar _matterJs2 = _interopRequireDefault(_matterJs);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction createRender(canvas, engine) {\n\t    return _matterJs2.default.Render.create({\n\t        canvas: canvas,\n\t        options: {\n\t            width: canvas.width,\n\t            height: canvas.height,\n\t            wireframes: false,\n\t            background: '#ffffff'\n\t        },\n\t        engine: engine\n\t    });\n\t}\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/** @license React v16.8.6\n\t * react-dom.production.min.js\n\t *\n\t * Copyright (c) Facebook, Inc. and its affiliates.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t/*\n\t Modernizr 3.0.0pre (Custom Build) | MIT\n\t*/\n\t'use strict';var aa=__webpack_require__(2),n=__webpack_require__(4),r=__webpack_require__(22);function ba(a,b,c,d,e,f,g,h){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[c,d,e,f,g,h],k=0;a=Error(b.replace(/%s/g,function(){return l[k++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\n\tfunction x(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);ba(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}aa?void 0:x(\"227\");function ca(a,b,c,d,e,f,g,h,l){var k=Array.prototype.slice.call(arguments,3);try{b.apply(c,k)}catch(m){this.onError(m)}}\n\tvar da=!1,ea=null,fa=!1,ha=null,ia={onError:function(a){da=!0;ea=a}};function ja(a,b,c,d,e,f,g,h,l){da=!1;ea=null;ca.apply(ia,arguments)}function ka(a,b,c,d,e,f,g,h,l){ja.apply(this,arguments);if(da){if(da){var k=ea;da=!1;ea=null}else x(\"198\"),k=void 0;fa||(fa=!0,ha=k)}}var la=null,ma={};\n\tfunction na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:x(\"96\",a);if(!oa[c]){b.extractEvents?void 0:x(\"97\",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?x(\"99\",h):void 0;pa[h]=f;var l=f.phasedRegistrationNames;if(l){for(e in l)l.hasOwnProperty(e)&&qa(l[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:x(\"98\",d,a)}}}}\n\tfunction qa(a,b,c){ra[a]?x(\"100\",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={},ta=null,ua=null,va=null;function wa(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=va(c);ka(d,b,void 0,a);a.currentTarget=null}function xa(a,b){null==b?x(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}\n\tfunction ya(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var za=null;function Aa(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)wa(a,b[d],c[d]);else b&&wa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}\n\tvar Ba={injectEventPluginOrder:function(a){la?x(\"101\"):void 0;la=Array.prototype.slice.call(a);na()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?x(\"102\",c):void 0,ma[c]=d,b=!0)}b&&na()}};\n\tfunction Ca(a,b){var c=a.stateNode;if(!c)return null;var d=ta(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?x(\"231\",b,typeof c):void 0;\n\treturn c}function Da(a){null!==a&&(za=xa(za,a));a=za;za=null;if(a&&(ya(a,Aa),za?x(\"95\"):void 0,fa))throw a=ha,fa=!1,ha=null,a;}var Ea=Math.random().toString(36).slice(2),Fa=\"__reactInternalInstance$\"+Ea,Ga=\"__reactEventHandlers$\"+Ea;function Ha(a){if(a[Fa])return a[Fa];for(;!a[Fa];)if(a.parentNode)a=a.parentNode;else return null;a=a[Fa];return 5===a.tag||6===a.tag?a:null}function Ia(a){a=a[Fa];return!a||5!==a.tag&&6!==a.tag?null:a}\n\tfunction Ja(a){if(5===a.tag||6===a.tag)return a.stateNode;x(\"33\")}function Ka(a){return a[Ga]||null}function La(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ma(a,b,c){if(b=Ca(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a)}\n\tfunction Na(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=La(b);for(b=c.length;0<b--;)Ma(c[b],\"captured\",a);for(b=0;b<c.length;b++)Ma(c[b],\"bubbled\",a)}}function Oa(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ca(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a))}function Pa(a){a&&a.dispatchConfig.registrationName&&Oa(a._targetInst,null,a)}\n\tfunction Qa(a){ya(a,Na)}var Ra=!(\"undefined\"===typeof window||!window.document||!window.document.createElement);function Sa(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ta={animationend:Sa(\"Animation\",\"AnimationEnd\"),animationiteration:Sa(\"Animation\",\"AnimationIteration\"),animationstart:Sa(\"Animation\",\"AnimationStart\"),transitionend:Sa(\"Transition\",\"TransitionEnd\")},Ua={},Va={};\n\tRa&&(Va=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ta.animationend.animation,delete Ta.animationiteration.animation,delete Ta.animationstart.animation),\"TransitionEvent\"in window||delete Ta.transitionend.transition);function Wa(a){if(Ua[a])return Ua[a];if(!Ta[a])return a;var b=Ta[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Va)return Ua[a]=b[c];return a}\n\tvar Xa=Wa(\"animationend\"),Ya=Wa(\"animationiteration\"),Za=Wa(\"animationstart\"),$a=Wa(\"transitionend\"),ab=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),bb=null,cb=null,db=null;\n\tfunction eb(){if(db)return db;var a,b=cb,c=b.length,d,e=\"value\"in bb?bb.value:bb.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return db=e.slice(a,1<d?1-d:void 0)}function fb(){return!0}function gb(){return!1}\n\tfunction y(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?fb:gb;this.isPropagationStopped=gb;return this}\n\tn(y.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=fb)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=fb)},persist:function(){this.isPersistent=fb},isPersistent:gb,destructor:function(){var a=this.constructor.Interface,\n\tb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=gb;this._dispatchInstances=this._dispatchListeners=null}});y.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\n\ty.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;hb(c);return c};hb(y);function ib(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function jb(a){a instanceof this?void 0:x(\"279\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}\n\tfunction hb(a){a.eventPool=[];a.getPooled=ib;a.release=jb}var kb=y.extend({data:null}),lb=y.extend({data:null}),mb=[9,13,27,32],nb=Ra&&\"CompositionEvent\"in window,ob=null;Ra&&\"documentMode\"in document&&(ob=document.documentMode);\n\tvar pb=Ra&&\"TextEvent\"in window&&!ob,qb=Ra&&(!nb||ob&&8<ob&&11>=ob),rb=String.fromCharCode(32),sb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\n\tcaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},tb=!1;\n\tfunction ub(a,b){switch(a){case \"keyup\":return-1!==mb.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function vb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var wb=!1;function xb(a,b){switch(a){case \"compositionend\":return vb(b);case \"keypress\":if(32!==b.which)return null;tb=!0;return rb;case \"textInput\":return a=b.data,a===rb&&tb?null:a;default:return null}}\n\tfunction yb(a,b){if(wb)return\"compositionend\"===a||!nb&&ub(a,b)?(a=eb(),db=cb=bb=null,wb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return qb&&\"ko\"!==b.locale?null:b.data;default:return null}}\n\tvar zb={eventTypes:sb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(nb)b:{switch(a){case \"compositionstart\":e=sb.compositionStart;break b;case \"compositionend\":e=sb.compositionEnd;break b;case \"compositionupdate\":e=sb.compositionUpdate;break b}e=void 0}else wb?ub(a,c)&&(e=sb.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=sb.compositionStart);e?(qb&&\"ko\"!==c.locale&&(wb||e!==sb.compositionStart?e===sb.compositionEnd&&wb&&(f=eb()):(bb=d,cb=\"value\"in bb?bb.value:bb.textContent,wb=\n\t!0)),e=kb.getPooled(e,b,c,d),f?e.data=f:(f=vb(c),null!==f&&(e.data=f)),Qa(e),f=e):f=null;(a=pb?xb(a,c):yb(a,c))?(b=lb.getPooled(sb.beforeInput,b,c,d),b.data=a,Qa(b)):b=null;return null===f?b:null===b?f:[f,b]}},Ab=null,Bb=null,Cb=null;function Db(a){if(a=ua(a)){\"function\"!==typeof Ab?x(\"280\"):void 0;var b=ta(a.stateNode);Ab(a.stateNode,a.type,b)}}function Eb(a){Bb?Cb?Cb.push(a):Cb=[a]:Bb=a}function Fb(){if(Bb){var a=Bb,b=Cb;Cb=Bb=null;Db(a);if(b)for(a=0;a<b.length;a++)Db(b[a])}}\n\tfunction Gb(a,b){return a(b)}function Hb(a,b,c){return a(b,c)}function Ib(){}var Jb=!1;function Kb(a,b){if(Jb)return a(b);Jb=!0;try{return Gb(a,b)}finally{if(Jb=!1,null!==Bb||null!==Cb)Ib(),Fb()}}var Lb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Mb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Lb[a.type]:\"textarea\"===b?!0:!1}\n\tfunction Nb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Ob(a){if(!Ra)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function Pb(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\n\tfunction Qb(a){var b=Pb(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\n\tnull;delete a[b]}}}}function Rb(a){a._valueTracker||(a._valueTracker=Qb(a))}function Sb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Pb(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}var Tb=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Tb.hasOwnProperty(\"ReactCurrentDispatcher\")||(Tb.ReactCurrentDispatcher={current:null});\n\tvar Ub=/^(.*)[\\\\\\/]/,z=\"function\"===typeof Symbol&&Symbol.for,Vb=z?Symbol.for(\"react.element\"):60103,Wb=z?Symbol.for(\"react.portal\"):60106,Xb=z?Symbol.for(\"react.fragment\"):60107,Yb=z?Symbol.for(\"react.strict_mode\"):60108,Zb=z?Symbol.for(\"react.profiler\"):60114,$b=z?Symbol.for(\"react.provider\"):60109,ac=z?Symbol.for(\"react.context\"):60110,bc=z?Symbol.for(\"react.concurrent_mode\"):60111,cc=z?Symbol.for(\"react.forward_ref\"):60112,dc=z?Symbol.for(\"react.suspense\"):60113,ec=z?Symbol.for(\"react.memo\"):\n\t60115,fc=z?Symbol.for(\"react.lazy\"):60116,gc=\"function\"===typeof Symbol&&Symbol.iterator;function hc(a){if(null===a||\"object\"!==typeof a)return null;a=gc&&a[gc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\n\tfunction ic(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case bc:return\"ConcurrentMode\";case Xb:return\"Fragment\";case Wb:return\"Portal\";case Zb:return\"Profiler\";case Yb:return\"StrictMode\";case dc:return\"Suspense\"}if(\"object\"===typeof a)switch(a.$$typeof){case ac:return\"Context.Consumer\";case $b:return\"Context.Provider\";case cc:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\n\t\")\":\"ForwardRef\");case ec:return ic(a.type);case fc:if(a=1===a._status?a._result:null)return ic(a)}return null}function jc(a){var b=\"\";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c=\"\";break a;default:var d=a._debugOwner,e=a._debugSource,f=ic(a.type);c=null;d&&(c=ic(d.type));d=f;f=\"\";e?f=\" (at \"+e.fileName.replace(Ub,\"\")+\":\"+e.lineNumber+\")\":c&&(f=\" (created by \"+c+\")\");c=\"\\n    in \"+(d||\"Unknown\")+f}b+=c;a=a.return}while(a);return b}\n\tvar kc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,lc=Object.prototype.hasOwnProperty,mc={},nc={};\n\tfunction oc(a){if(lc.call(nc,a))return!0;if(lc.call(mc,a))return!1;if(kc.test(a))return nc[a]=!0;mc[a]=!0;return!1}function pc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\n\tfunction qc(a,b,c,d){if(null===b||\"undefined\"===typeof b||pc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function C(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var D={};\n\t\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new C(a,0,!1,a,null)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new C(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new C(a,2,!1,a.toLowerCase(),null)});\n\t[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new C(a,2,!1,a,null)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new C(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new C(a,3,!0,a,null)});\n\t[\"capture\",\"download\"].forEach(function(a){D[a]=new C(a,4,!1,a,null)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new C(a,6,!1,a,null)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new C(a,5,!1,a.toLowerCase(),null)});var rc=/[\\-:]([a-z])/g;function sc(a){return a[1].toUpperCase()}\n\t\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(rc,\n\tsc);D[b]=new C(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(rc,sc);D[b]=new C(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(rc,sc);D[b]=new C(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new C(a,1,!1,a.toLowerCase(),null)});\n\tfunction tc(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(qc(b,c,e,d)&&(c=null),d||null===e?oc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\n\tfunction uc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function vc(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\n\tfunction wc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=uc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function xc(a,b){b=b.checked;null!=b&&tc(a,\"checked\",b,!1)}\n\tfunction yc(a,b){xc(a,b);var c=uc(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?zc(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&zc(a,b.type,uc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\n\tfunction Ac(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\n\tfunction zc(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var Bc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Cc(a,b,c){a=y.getPooled(Bc.change,a,b,c);a.type=\"change\";Eb(c);Qa(a);return a}var Dc=null,Ec=null;function Fc(a){Da(a)}\n\tfunction Gc(a){var b=Ja(a);if(Sb(b))return a}function Hc(a,b){if(\"change\"===a)return b}var Ic=!1;Ra&&(Ic=Ob(\"input\")&&(!document.documentMode||9<document.documentMode));function Jc(){Dc&&(Dc.detachEvent(\"onpropertychange\",Kc),Ec=Dc=null)}function Kc(a){\"value\"===a.propertyName&&Gc(Ec)&&(a=Cc(Ec,a,Nb(a)),Kb(Fc,a))}function Lc(a,b,c){\"focus\"===a?(Jc(),Dc=b,Ec=c,Dc.attachEvent(\"onpropertychange\",Kc)):\"blur\"===a&&Jc()}function Mc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Gc(Ec)}\n\tfunction Nc(a,b){if(\"click\"===a)return Gc(b)}function Oc(a,b){if(\"input\"===a||\"change\"===a)return Gc(b)}\n\tvar Pc={eventTypes:Bc,_isInputEventSupported:Ic,extractEvents:function(a,b,c,d){var e=b?Ja(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Hc:Mb(e)?Ic?f=Oc:(f=Mc,g=Lc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Nc);if(f&&(f=f(a,b)))return Cc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&zc(e,\"number\",e.value)}},Qc=y.extend({view:null,detail:null}),Rc={Alt:\"altKey\",\n\tControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Sc(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Rc[a])?!!b[a]:!1}function Tc(){return Sc}\n\tvar Uc=0,Vc=0,Wc=!1,Xc=!1,Yc=Qc.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Tc,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=Uc;Uc=a.screenX;return Wc?\"mousemove\"===a.type?a.screenX-b:0:(Wc=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;\n\tvar b=Vc;Vc=a.screenY;return Xc?\"mousemove\"===a.type?a.screenY-b:0:(Xc=!0,0)}}),Zc=Yc.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),$c={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",\n\tdependencies:[\"pointerout\",\"pointerover\"]}},ad={eventTypes:$c,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Ha(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,l=void 0,k=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=Yc,h=$c.mouseLeave,l=$c.mouseEnter,k=\"mouse\";\n\telse if(\"pointerout\"===a||\"pointerover\"===a)g=Zc,h=$c.pointerLeave,l=$c.pointerEnter,k=\"pointer\";var m=null==f?e:Ja(f);e=null==b?e:Ja(b);a=g.getPooled(h,f,c,d);a.type=k+\"leave\";a.target=m;a.relatedTarget=e;c=g.getPooled(l,b,c,d);c.type=k+\"enter\";c.target=e;c.relatedTarget=m;d=b;if(f&&d)a:{b=f;e=d;k=0;for(g=b;g;g=La(g))k++;g=0;for(l=e;l;l=La(l))g++;for(;0<k-g;)b=La(b),k--;for(;0<g-k;)e=La(e),g--;for(;k--;){if(b===e||b===e.alternate)break a;b=La(b);e=La(e)}b=null}else b=null;e=b;for(b=[];f&&f!==e;){k=\n\tf.alternate;if(null!==k&&k===e)break;b.push(f);f=La(f)}for(f=[];d&&d!==e;){k=d.alternate;if(null!==k&&k===e)break;f.push(d);d=La(d)}for(d=0;d<b.length;d++)Oa(b[d],\"bubbled\",a);for(d=f.length;0<d--;)Oa(f[d],\"captured\",c);return[a,c]}};function bd(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var cd=Object.prototype.hasOwnProperty;\n\tfunction dd(a,b){if(bd(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!cd.call(b,c[d])||!bd(a[c[d]],b[c[d]]))return!1;return!0}function ed(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function fd(a){2!==ed(a)?x(\"188\"):void 0}\n\tfunction gd(a){var b=a.alternate;if(!b)return b=ed(a),3===b?x(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return fd(e),a;if(g===d)return fd(e),b;g=g.sibling}x(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\n\tvoid 0:x(\"189\")}}c.alternate!==d?x(\"190\"):void 0}3!==c.tag?x(\"188\"):void 0;return c.stateNode.current===c?a:b}function hd(a){a=gd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\n\tvar id=y.extend({animationName:null,elapsedTime:null,pseudoElement:null}),jd=y.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),kd=Qc.extend({relatedTarget:null});function ld(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\n\tvar md={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n\t116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},od=Qc.extend({key:function(a){if(a.key){var b=md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=ld(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?nd[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Tc,charCode:function(a){return\"keypress\"===\n\ta.type?ld(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?ld(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),pd=Yc.extend({dataTransfer:null}),qd=Qc.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Tc}),rd=y.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),sd=Yc.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\n\ta?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),td=[[\"abort\",\"abort\"],[Xa,\"animationEnd\"],[Ya,\"animationIteration\"],[Za,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n\t[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n\t[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[$a,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],ud={},vd={};function wd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};ud[a]=b;vd[c]=b}\n\t[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"auxclick\",\"auxClick\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],\n\t[\"pointerdown\",\"pointerDown\"],[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){wd(a,!0)});td.forEach(function(a){wd(a,!1)});\n\tvar xd={eventTypes:ud,isInteractiveTopLevelEventType:function(a){a=vd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=vd[a];if(!e)return null;switch(a){case \"keypress\":if(0===ld(c))return null;case \"keydown\":case \"keyup\":a=od;break;case \"blur\":case \"focus\":a=kd;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=Yc;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\n\tpd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=qd;break;case Xa:case Ya:case Za:a=id;break;case $a:a=rd;break;case \"scroll\":a=Qc;break;case \"wheel\":a=sd;break;case \"copy\":case \"cut\":case \"paste\":a=jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=Zc;break;default:a=y}b=a.getPooled(e,b,c,d);Qa(b);return b}},yd=xd.isInteractiveTopLevelEventType,\n\tzd=[];function Ad(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d;for(d=c;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo;if(!d)break;a.ancestors.push(c);c=Ha(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Nb(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=null,h=0;h<oa.length;h++){var l=oa[h];l&&(l=l.extractEvents(d,b,f,e))&&(g=xa(g,l))}Da(g)}}var Bd=!0;\n\tfunction E(a,b){if(!b)return null;var c=(yd(a)?Cd:Dd).bind(null,a);b.addEventListener(a,c,!1)}function Ed(a,b){if(!b)return null;var c=(yd(a)?Cd:Dd).bind(null,a);b.addEventListener(a,c,!0)}function Cd(a,b){Hb(Dd,a,b)}\n\tfunction Dd(a,b){if(Bd){var c=Nb(b);c=Ha(c);null===c||\"number\"!==typeof c.tag||2===ed(c)||(c=null);if(zd.length){var d=zd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Kb(Ad,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>zd.length&&zd.push(a)}}}var Fd={},Gd=0,Hd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);\n\tfunction Id(a){Object.prototype.hasOwnProperty.call(a,Hd)||(a[Hd]=Gd++,Fd[a[Hd]]={});return Fd[a[Hd]]}function Jd(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function Kd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\n\tfunction Ld(a,b){var c=Kd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Kd(c)}}function Md(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Md(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\n\tfunction Nd(){for(var a=window,b=Jd();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Jd(a.document)}return b}function Od(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\n\tfunction Pd(){var a=Nd();if(Od(a)){if(\"selectionStart\"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{b=(b=a.ownerDocument)&&b.defaultView||window;var c=b.getSelection&&b.getSelection();if(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(A){b=null;break a}var f=0,g=-1,h=-1,l=0,k=0,m=a,p=null;b:for(;;){for(var t;;){m!==b||0!==d&&3!==m.nodeType||(g=f+d);m!==e||0!==c&&3!==m.nodeType||(h=f+c);3===m.nodeType&&(f+=m.nodeValue.length);\n\tif(null===(t=m.firstChild))break;p=m;m=t}for(;;){if(m===a)break b;p===b&&++l===d&&(g=f);p===e&&++k===c&&(h=f);if(null!==(t=m.nextSibling))break;m=p;p=m.parentNode}m=t}b=-1===g||-1===h?null:{start:g,end:h}}else b=null}b=b||{start:0,end:0}}else b=null;return{focusedElem:a,selectionRange:b}}\n\tfunction Qd(a){var b=Nd(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Md(c.ownerDocument.documentElement,c)){if(null!==d&&Od(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ld(c,f);var g=Ld(c,\n\td);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\n\tvar Rd=Ra&&\"documentMode\"in document&&11>=document.documentMode,Sd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Td=null,Ud=null,Vd=null,Wd=!1;\n\tfunction Xd(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if(Wd||null==Td||Td!==Jd(c))return null;c=Td;\"selectionStart\"in c&&Od(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return Vd&&dd(Vd,c)?null:(Vd=c,a=y.getPooled(Sd.select,Ud,a,b),a.type=\"select\",a.target=Td,Qa(a),a)}\n\tvar Yd={eventTypes:Sd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Id(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Ja(b):window;switch(a){case \"focus\":if(Mb(e)||\"true\"===e.contentEditable)Td=e,Ud=b,Vd=null;break;case \"blur\":Vd=Ud=Td=null;break;case \"mousedown\":Wd=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return Wd=!1,Xd(c,d);case \"selectionchange\":if(Rd)break;\n\tcase \"keydown\":case \"keyup\":return Xd(c,d)}return null}};Ba.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));ta=Ka;ua=Ia;va=Ja;Ba.injectEventPluginsByName({SimpleEventPlugin:xd,EnterLeaveEventPlugin:ad,ChangeEventPlugin:Pc,SelectEventPlugin:Yd,BeforeInputEventPlugin:zb});function Zd(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}\n\tfunction $d(a,b){a=n({children:void 0},b);if(b=Zd(b.children))a.children=b;return a}function ae(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+uc(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\n\tfunction be(a,b){null!=b.dangerouslySetInnerHTML?x(\"91\"):void 0;return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function ce(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?x(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:x(\"93\"),b=b[0]),c=b),null==c&&(c=\"\"));a._wrapperState={initialValue:uc(c)}}\n\tfunction de(a,b){var c=uc(b.value),d=uc(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function ee(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var fe={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\n\tfunction ge(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function he(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?ge(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\n\tvar ie=void 0,je=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==fe.svg||\"innerHTML\"in a)a.innerHTML=b;else{ie=ie||document.createElement(\"div\");ie.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=ie.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\n\tfunction ke(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\n\tvar le={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\n\tfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},me=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(le).forEach(function(a){me.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);le[b]=le[a]})});function ne(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||le.hasOwnProperty(a)&&le[a]?(\"\"+b).trim():b+\"px\"}\n\tfunction oe(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=ne(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var pe=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\n\tfunction qe(a,b){b&&(pe[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?x(\"137\",a,\"\"):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?x(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:x(\"61\")),null!=b.style&&\"object\"!==typeof b.style?x(\"62\",\"\"):void 0)}\n\tfunction re(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}\n\tfunction se(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Id(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Ed(\"scroll\",a);break;case \"focus\":case \"blur\":Ed(\"focus\",a);Ed(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":Ob(e)&&Ed(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===ab.indexOf(e)&&E(e,a)}c[e]=!0}}}function te(){}var ue=null,ve=null;\n\tfunction we(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}function xe(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\n\tvar ye=\"function\"===typeof setTimeout?setTimeout:void 0,ze=\"function\"===typeof clearTimeout?clearTimeout:void 0,Ae=r.unstable_scheduleCallback,Be=r.unstable_cancelCallback;\n\tfunction Ce(a,b,c,d,e){a[Ga]=e;\"input\"===c&&\"radio\"===e.type&&null!=e.name&&xc(a,e);re(c,d);d=re(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?oe(a,h):\"dangerouslySetInnerHTML\"===g?je(a,h):\"children\"===g?ke(a,h):tc(a,g,h,d)}switch(c){case \"input\":yc(a,e);break;case \"textarea\":de(a,e);break;case \"select\":b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?ae(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?ae(a,!!e.multiple,e.defaultValue,\n\t!0):ae(a,!!e.multiple,e.multiple?[]:\"\",!1))}}function De(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function Ee(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var Fe=[],Ge=-1;function F(a){0>Ge||(a.current=Fe[Ge],Fe[Ge]=null,Ge--)}function G(a,b){Ge++;Fe[Ge]=a.current;a.current=b}var He={},H={current:He},I={current:!1},Ie=He;\n\tfunction Je(a,b){var c=a.type.contextTypes;if(!c)return He;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function J(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Ke(a){F(I,a);F(H,a)}function Le(a){F(I,a);F(H,a)}\n\tfunction Me(a,b,c){H.current!==He?x(\"168\"):void 0;G(H,b,a);G(I,c,a)}function Ne(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)e in a?void 0:x(\"108\",ic(b)||\"Unknown\",e);return n({},c,d)}function Oe(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||He;Ie=H.current;G(H,b,a);G(I,I.current,a);return!0}\n\tfunction Pe(a,b,c){var d=a.stateNode;d?void 0:x(\"169\");c?(b=Ne(a,b,Ie),d.__reactInternalMemoizedMergedChildContext=b,F(I,a),F(H,a),G(H,b,a)):F(I,a);G(I,c,a)}var Qe=null,Re=null;function Se(a){return function(b){try{return a(b)}catch(c){}}}\n\tfunction Te(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Qe=Se(function(a){return b.onCommitFiberRoot(c,a)});Re=Se(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}\n\tfunction Ue(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function K(a,b,c,d){return new Ue(a,b,c,d)}\n\tfunction Ve(a){a=a.prototype;return!(!a||!a.isReactComponent)}function We(a){if(\"function\"===typeof a)return Ve(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===cc)return 11;if(a===ec)return 14}return 2}\n\tfunction Xe(a,b){var c=a.alternate;null===c?(c=K(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;c.contextDependencies=a.contextDependencies;c.sibling=a.sibling;\n\tc.index=a.index;c.ref=a.ref;return c}\n\tfunction Ye(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)Ve(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case Xb:return Ze(c.children,e,f,b);case bc:return $e(c,e|3,f,b);case Yb:return $e(c,e|2,f,b);case Zb:return a=K(12,c,b,e|4),a.elementType=Zb,a.type=Zb,a.expirationTime=f,a;case dc:return a=K(13,c,b,e),a.elementType=dc,a.type=dc,a.expirationTime=f,a;default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case $b:g=10;break a;case ac:g=9;break a;case cc:g=11;break a;case ec:g=\n\t14;break a;case fc:g=16;d=null;break a}x(\"130\",null==a?a:typeof a,\"\")}b=K(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function Ze(a,b,c,d){a=K(7,a,d,b);a.expirationTime=c;return a}function $e(a,b,c,d){a=K(8,a,d,b);b=0===(b&1)?Yb:bc;a.elementType=b;a.type=b;a.expirationTime=c;return a}function af(a,b,c){a=K(6,a,null,b);a.expirationTime=c;return a}\n\tfunction bf(a,b,c){b=K(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}function cf(a,b){a.didError=!1;var c=a.earliestPendingTime;0===c?a.earliestPendingTime=a.latestPendingTime=b:c<b?a.earliestPendingTime=b:a.latestPendingTime>b&&(a.latestPendingTime=b);df(b,a)}\n\tfunction ef(a,b){a.didError=!1;if(0===b)a.earliestPendingTime=0,a.latestPendingTime=0,a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0;else{b<a.latestPingedTime&&(a.latestPingedTime=0);var c=a.latestPendingTime;0!==c&&(c>b?a.earliestPendingTime=a.latestPendingTime=0:a.earliestPendingTime>b&&(a.earliestPendingTime=a.latestPendingTime));c=a.earliestSuspendedTime;0===c?cf(a,b):b<a.latestSuspendedTime?(a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0,cf(a,b)):\n\tb>c&&cf(a,b)}df(0,a)}function ff(a,b){a.didError=!1;a.latestPingedTime>=b&&(a.latestPingedTime=0);var c=a.earliestPendingTime,d=a.latestPendingTime;c===b?a.earliestPendingTime=d===b?a.latestPendingTime=0:d:d===b&&(a.latestPendingTime=c);c=a.earliestSuspendedTime;d=a.latestSuspendedTime;0===c?a.earliestSuspendedTime=a.latestSuspendedTime=b:c<b?a.earliestSuspendedTime=b:d>b&&(a.latestSuspendedTime=b);df(b,a)}\n\tfunction gf(a,b){var c=a.earliestPendingTime;a=a.earliestSuspendedTime;c>b&&(b=c);a>b&&(b=a);return b}function df(a,b){var c=b.earliestSuspendedTime,d=b.latestSuspendedTime,e=b.earliestPendingTime,f=b.latestPingedTime;e=0!==e?e:f;0===e&&(0===a||d<a)&&(e=d);a=e;0!==a&&c>a&&(a=c);b.nextExpirationTimeToWorkOn=e;b.expirationTime=a}function L(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}\n\tfunction hf(a){var b=a._result;switch(a._status){case 1:return b;case 2:throw b;case 0:throw b;default:a._status=0;b=a._ctor;b=b();b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)});switch(a._status){case 1:return a._result;case 2:throw a._result;}a._result=b;throw b;}}var jf=(new aa.Component).refs;\n\tfunction kf(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}\n\tvar tf={isMounted:function(a){return(a=a._reactInternalFiber)?2===ed(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=lf();d=mf(d,a);var e=nf(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);of();pf(a,e);qf(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=lf();d=mf(d,a);var e=nf(d);e.tag=rf;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);of();pf(a,e);qf(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=lf();c=mf(c,a);var d=nf(c);d.tag=\n\tsf;void 0!==b&&null!==b&&(d.callback=b);of();pf(a,d);qf(a,c)}};function uf(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!dd(c,d)||!dd(e,f):!0}\n\tfunction vf(a,b,c){var d=!1,e=He;var f=b.contextType;\"object\"===typeof f&&null!==f?f=M(f):(e=J(b)?Ie:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Je(a,e):He);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=tf;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\n\tfunction wf(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&tf.enqueueReplaceState(b,b.state,null)}\n\tfunction xf(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jf;var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=M(f):(f=J(b)?Ie:H.current,e.context=Je(a,f));f=a.updateQueue;null!==f&&(yf(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kf(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==\n\ttypeof e.componentWillMount||(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&tf.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(yf(a,f,c,e,d),e.state=a.memoizedState));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var zf=Array.isArray;\n\tfunction Af(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(1!==c.tag?x(\"309\"):void 0,d=c.stateNode);d?void 0:x(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===jf&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?x(\"284\"):void 0;c._owner?void 0:x(\"290\",a)}return a}\n\tfunction Bf(a,b){\"textarea\"!==a.type&&x(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\n\tfunction Cf(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=Xe(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n\t2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=af(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function l(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props,d),d.ref=Af(a,b,c),d.return=a,d;d=Ye(c.type,c.key,c.props,null,a.mode,d);d.ref=Af(a,b,c);d.return=a;return d}function k(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==\n\tc.implementation)return b=bf(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ze(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function p(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=af(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Vb:return c=Ye(b.type,b.key,b.props,null,a.mode,c),c.ref=Af(a,null,b),c.return=a,c;case Wb:return b=bf(b,a.mode,c),b.return=a,b}if(zf(b)||\n\thc(b))return b=Ze(b,a.mode,c,null),b.return=a,b;Bf(a,b)}return null}function t(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Vb:return c.key===e?c.type===Xb?m(a,b,c.props.children,d,e):l(a,b,c,d):null;case Wb:return c.key===e?k(a,b,c,d):null}if(zf(c)||hc(c))return null!==e?null:m(a,b,c,d,null);Bf(a,c)}return null}function A(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=\n\ta.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Vb:return a=a.get(null===d.key?c:d.key)||null,d.type===Xb?m(b,a,d.props.children,e,d.key):l(b,a,d,e);case Wb:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e)}if(zf(d)||hc(d))return a=a.get(c)||null,m(b,a,d,e,null);Bf(b,d)}return null}function v(e,g,h,k){for(var l=null,m=null,q=g,u=g=0,B=null;null!==q&&u<h.length;u++){q.index>u?(B=q,q=null):B=q.sibling;var w=t(e,q,h[u],k);if(null===w){null===q&&(q=B);break}a&&\n\tq&&null===w.alternate&&b(e,q);g=f(w,g,u);null===m?l=w:m.sibling=w;m=w;q=B}if(u===h.length)return c(e,q),l;if(null===q){for(;u<h.length;u++)if(q=p(e,h[u],k))g=f(q,g,u),null===m?l=q:m.sibling=q,m=q;return l}for(q=d(e,q);u<h.length;u++)if(B=A(q,e,u,h[u],k))a&&null!==B.alternate&&q.delete(null===B.key?u:B.key),g=f(B,g,u),null===m?l=B:m.sibling=B,m=B;a&&q.forEach(function(a){return b(e,a)});return l}function R(e,g,h,k){var l=hc(h);\"function\"!==typeof l?x(\"150\"):void 0;h=l.call(h);null==h?x(\"151\"):void 0;\n\tfor(var m=l=null,q=g,u=g=0,B=null,w=h.next();null!==q&&!w.done;u++,w=h.next()){q.index>u?(B=q,q=null):B=q.sibling;var v=t(e,q,w.value,k);if(null===v){q||(q=B);break}a&&q&&null===v.alternate&&b(e,q);g=f(v,g,u);null===m?l=v:m.sibling=v;m=v;q=B}if(w.done)return c(e,q),l;if(null===q){for(;!w.done;u++,w=h.next())w=p(e,w.value,k),null!==w&&(g=f(w,g,u),null===m?l=w:m.sibling=w,m=w);return l}for(q=d(e,q);!w.done;u++,w=h.next())w=A(q,e,u,w.value,k),null!==w&&(a&&null!==w.alternate&&q.delete(null===w.key?u:\n\tw.key),g=f(w,g,u),null===m?l=w:m.sibling=w,m=w);a&&q.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===Xb&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Vb:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(7===k.tag?f.type===Xb:k.elementType===f.type){c(a,k.sibling);d=e(k,f.type===Xb?f.props.children:f.props,h);d.ref=Af(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=\n\tk.sibling}f.type===Xb?(d=Ze(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Ye(f.type,f.key,f.props,null,a.mode,h),h.ref=Af(a,d,f),h.return=a,a=h)}return g(a);case Wb:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=bf(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\n\t\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=a,a=d):(c(a,d),d=af(f,a.mode,h),d.return=a,a=d),g(a);if(zf(f))return v(a,d,f,h);if(hc(f))return R(a,d,f,h);l&&Bf(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 0:h=a.type,x(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var Df=Cf(!0),Ef=Cf(!1),Ff={},N={current:Ff},Gf={current:Ff},Hf={current:Ff};function If(a){a===Ff?x(\"174\"):void 0;return a}\n\tfunction Jf(a,b){G(Hf,b,a);G(Gf,a,a);G(N,Ff,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:he(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=he(b,c)}F(N,a);G(N,b,a)}function Kf(a){F(N,a);F(Gf,a);F(Hf,a)}function Lf(a){If(Hf.current);var b=If(N.current);var c=he(b,a.type);b!==c&&(G(Gf,a,a),G(N,c,a))}function Mf(a){Gf.current===a&&(F(N,a),F(Gf,a))}\n\tvar Nf=0,Of=2,Pf=4,Qf=8,Rf=16,Sf=32,Tf=64,Uf=128,Vf=Tb.ReactCurrentDispatcher,Wf=0,Xf=null,O=null,P=null,Yf=null,Q=null,Zf=null,$f=0,ag=null,bg=0,cg=!1,dg=null,eg=0;function fg(){x(\"321\")}function gg(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!bd(a[c],b[c]))return!1;return!0}\n\tfunction hg(a,b,c,d,e,f){Wf=f;Xf=b;P=null!==a?a.memoizedState:null;Vf.current=null===P?ig:jg;b=c(d,e);if(cg){do cg=!1,eg+=1,P=null!==a?a.memoizedState:null,Zf=Yf,ag=Q=O=null,Vf.current=jg,b=c(d,e);while(cg);dg=null;eg=0}Vf.current=kg;a=Xf;a.memoizedState=Yf;a.expirationTime=$f;a.updateQueue=ag;a.effectTag|=bg;a=null!==O&&null!==O.next;Wf=0;Zf=Q=Yf=P=O=Xf=null;$f=0;ag=null;bg=0;a?x(\"300\"):void 0;return b}function lg(){Vf.current=kg;Wf=0;Zf=Q=Yf=P=O=Xf=null;$f=0;ag=null;bg=0;cg=!1;dg=null;eg=0}\n\tfunction mg(){var a={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};null===Q?Yf=Q=a:Q=Q.next=a;return Q}function ng(){if(null!==Zf)Q=Zf,Zf=Q.next,O=P,P=null!==O?O.next:null;else{null===P?x(\"310\"):void 0;O=P;var a={memoizedState:O.memoizedState,baseState:O.baseState,queue:O.queue,baseUpdate:O.baseUpdate,next:null};Q=null===Q?Yf=a:Q.next=a;P=O.next}return Q}function og(a,b){return\"function\"===typeof b?b(a):b}\n\tfunction pg(a){var b=ng(),c=b.queue;null===c?x(\"311\"):void 0;c.lastRenderedReducer=a;if(0<eg){var d=c.dispatch;if(null!==dg){var e=dg.get(c);if(void 0!==e){dg.delete(c);var f=b.memoizedState;do f=a(f,e.action),e=e.next;while(null!==e);bd(f,b.memoizedState)||(qg=!0);b.memoizedState=f;b.baseUpdate===c.last&&(b.baseState=f);c.lastRenderedState=f;return[f,d]}}return[b.memoizedState,d]}d=c.last;var g=b.baseUpdate;f=b.baseState;null!==g?(null!==d&&(d.next=null),d=g.next):d=null!==d?d.next:null;if(null!==\n\td){var h=e=null,l=d,k=!1;do{var m=l.expirationTime;m<Wf?(k||(k=!0,h=g,e=f),m>$f&&($f=m)):f=l.eagerReducer===a?l.eagerState:a(f,l.action);g=l;l=l.next}while(null!==l&&l!==d);k||(h=g,e=f);bd(f,b.memoizedState)||(qg=!0);b.memoizedState=f;b.baseUpdate=h;b.baseState=e;c.lastRenderedState=f}return[b.memoizedState,c.dispatch]}\n\tfunction rg(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};null===ag?(ag={lastEffect:null},ag.lastEffect=a.next=a):(b=ag.lastEffect,null===b?ag.lastEffect=a.next=a:(c=b.next,b.next=a,a.next=c,ag.lastEffect=a));return a}function sg(a,b,c,d){var e=mg();bg|=a;e.memoizedState=rg(b,c,void 0,void 0===d?null:d)}\n\tfunction tg(a,b,c,d){var e=ng();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&gg(d,g.deps)){rg(Nf,c,f,d);return}}bg|=a;e.memoizedState=rg(b,c,f,d)}function ug(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function vg(){}\n\tfunction wg(a,b,c){25>eg?void 0:x(\"301\");var d=a.alternate;if(a===Xf||null!==d&&d===Xf)if(cg=!0,a={expirationTime:Wf,action:c,eagerReducer:null,eagerState:null,next:null},null===dg&&(dg=new Map),c=dg.get(b),void 0===c)dg.set(b,a);else{for(b=c;null!==b.next;)b=b.next;b.next=a}else{of();var e=lf();e=mf(e,a);var f={expirationTime:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.last;if(null===g)f.next=f;else{var h=g.next;null!==h&&(f.next=h);g.next=f}b.last=f;if(0===a.expirationTime&&(null===\n\td||0===d.expirationTime)&&(d=b.lastRenderedReducer,null!==d))try{var l=b.lastRenderedState,k=d(l,c);f.eagerReducer=d;f.eagerState=k;if(bd(k,l))return}catch(m){}finally{}qf(a,e)}}\n\tvar kg={readContext:M,useCallback:fg,useContext:fg,useEffect:fg,useImperativeHandle:fg,useLayoutEffect:fg,useMemo:fg,useReducer:fg,useRef:fg,useState:fg,useDebugValue:fg},ig={readContext:M,useCallback:function(a,b){mg().memoizedState=[a,void 0===b?null:b];return a},useContext:M,useEffect:function(a,b){return sg(516,Uf|Tf,a,b)},useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return sg(4,Pf|Sf,ug.bind(null,b,a),c)},useLayoutEffect:function(a,b){return sg(4,Pf|Sf,a,b)},\n\tuseMemo:function(a,b){var c=mg();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=mg();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={last:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=wg.bind(null,Xf,a);return[d.memoizedState,a]},useRef:function(a){var b=mg();a={current:a};return b.memoizedState=a},useState:function(a){var b=mg();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={last:null,dispatch:null,\n\tlastRenderedReducer:og,lastRenderedState:a};a=a.dispatch=wg.bind(null,Xf,a);return[b.memoizedState,a]},useDebugValue:vg},jg={readContext:M,useCallback:function(a,b){var c=ng();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&gg(b,d[1]))return d[0];c.memoizedState=[a,b];return a},useContext:M,useEffect:function(a,b){return tg(516,Uf|Tf,a,b)},useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return tg(4,Pf|Sf,ug.bind(null,b,a),c)},useLayoutEffect:function(a,\n\tb){return tg(4,Pf|Sf,a,b)},useMemo:function(a,b){var c=ng();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&gg(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a},useReducer:pg,useRef:function(){return ng().memoizedState},useState:function(a){return pg(og,a)},useDebugValue:vg},xg=null,yg=null,zg=!1;\n\tfunction Ag(a,b){var c=K(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function Bg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\n\tfunction Cg(a){if(zg){var b=yg;if(b){var c=b;if(!Bg(a,b)){b=De(c);if(!b||!Bg(a,b)){a.effectTag|=2;zg=!1;xg=a;return}Ag(xg,c)}xg=a;yg=Ee(b)}else a.effectTag|=2,zg=!1,xg=a}}function Dg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&18!==a.tag;)a=a.return;xg=a}function Eg(a){if(a!==xg)return!1;if(!zg)return Dg(a),zg=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!xe(b,a.memoizedProps))for(b=yg;b;)Ag(a,b),b=De(b);Dg(a);yg=xg?De(a.stateNode):null;return!0}function Fg(){yg=xg=null;zg=!1}\n\tvar Gg=Tb.ReactCurrentOwner,qg=!1;function S(a,b,c,d){b.child=null===a?Ef(b,null,c,d):Df(b,a.child,c,d)}function Hg(a,b,c,d,e){c=c.render;var f=b.ref;Ig(b,e);d=hg(a,b,c,d,f,e);if(null!==a&&!qg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),Jg(a,b,e);b.effectTag|=1;S(a,b,d,e);return b.child}\n\tfunction Kg(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!Ve(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,Lg(a,b,g,d,e,f);a=Ye(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:dd,c(e,d)&&a.ref===b.ref))return Jg(a,b,f);b.effectTag|=1;a=Xe(g,d,f);a.ref=b.ref;a.return=b;return b.child=a}\n\tfunction Lg(a,b,c,d,e,f){return null!==a&&dd(a.memoizedProps,d)&&a.ref===b.ref&&(qg=!1,e<f)?Jg(a,b,f):Mg(a,b,c,d,f)}function Ng(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Mg(a,b,c,d,e){var f=J(c)?Ie:H.current;f=Je(b,f);Ig(b,e);c=hg(a,b,c,d,f,e);if(null!==a&&!qg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),Jg(a,b,e);b.effectTag|=1;S(a,b,c,e);return b.child}\n\tfunction Og(a,b,c,d,e){if(J(c)){var f=!0;Oe(b)}else f=!1;Ig(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),vf(b,c,d,e),xf(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var l=g.context,k=c.contextType;\"object\"===typeof k&&null!==k?k=M(k):(k=J(c)?Ie:H.current,k=Je(b,k));var m=c.getDerivedStateFromProps,p=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;p||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\t\"function\"!==typeof g.componentWillReceiveProps||(h!==d||l!==k)&&wf(b,g,d,k);Pg=!1;var t=b.memoizedState;l=g.state=t;var A=b.updateQueue;null!==A&&(yf(b,A,d,g,e),l=b.memoizedState);h!==d||t!==l||I.current||Pg?(\"function\"===typeof m&&(kf(b,c,m,d),l=b.memoizedState),(h=Pg||uf(b,c,h,d,t,l,k))?(p||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&\n\tg.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=l),g.props=d,g.state=l,g.context=k,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=b.memoizedProps,g.props=b.type===b.elementType?h:L(b.type,h),l=g.context,k=c.contextType,\"object\"===typeof k&&null!==k?k=M(k):(k=J(c)?Ie:H.current,k=Je(b,k)),m=c.getDerivedStateFromProps,(p=\"function\"===\n\ttypeof m||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||l!==k)&&wf(b,g,d,k),Pg=!1,l=b.memoizedState,t=g.state=l,A=b.updateQueue,null!==A&&(yf(b,A,d,g,e),t=b.memoizedState),h!==d||l!==t||I.current||Pg?(\"function\"===typeof m&&(kf(b,c,m,d),t=b.memoizedState),(m=Pg||uf(b,c,h,d,l,t,k))?(p||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===\n\ttypeof g.componentWillUpdate&&g.componentWillUpdate(d,t,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,t,k)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=256),b.memoizedProps=d,b.memoizedState=\n\tt),g.props=d,g.state=t,g.context=k,d=m):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=256),d=!1);return Qg(a,b,c,d,f,e)}\n\tfunction Qg(a,b,c,d,e,f){Ng(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Pe(b,c,!1),Jg(a,b,f);d=b.stateNode;Gg.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=Df(b,a.child,null,f),b.child=Df(b,null,h,f)):S(a,b,h,f);b.memoizedState=d.state;e&&Pe(b,c,!0);return b.child}function Rg(a){var b=a.stateNode;b.pendingContext?Me(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Me(a,b.context,!1);Jf(a,b.containerInfo)}\n\tfunction Sg(a,b,c){var d=b.mode,e=b.pendingProps,f=b.memoizedState;if(0===(b.effectTag&64)){f=null;var g=!1}else f={timedOutAt:null!==f?f.timedOutAt:0},g=!0,b.effectTag&=-65;if(null===a)if(g){var h=e.fallback;a=Ze(null,d,0,null);0===(b.mode&1)&&(a.child=null!==b.memoizedState?b.child.child:b.child);d=Ze(h,d,c,null);a.sibling=d;c=a;c.return=d.return=b}else c=d=Ef(b,null,e.children,c);else null!==a.memoizedState?(d=a.child,h=d.sibling,g?(c=e.fallback,e=Xe(d,d.pendingProps,0),0===(b.mode&1)&&(g=null!==\n\tb.memoizedState?b.child.child:b.child,g!==d.child&&(e.child=g)),d=e.sibling=Xe(h,c,h.expirationTime),c=e,e.childExpirationTime=0,c.return=d.return=b):c=d=Df(b,d.child,e.children,c)):(h=a.child,g?(g=e.fallback,e=Ze(null,d,0,null),e.child=h,0===(b.mode&1)&&(e.child=null!==b.memoizedState?b.child.child:b.child),d=e.sibling=Ze(g,d,c,null),d.effectTag|=2,c=e,e.childExpirationTime=0,c.return=d.return=b):d=c=Df(b,h,e.children,c)),b.stateNode=a.stateNode;b.memoizedState=f;b.child=c;return d}\n\tfunction Jg(a,b,c){null!==a&&(b.contextDependencies=a.contextDependencies);if(b.childExpirationTime<c)return null;null!==a&&b.child!==a.child?x(\"153\"):void 0;if(null!==b.child){a=b.child;c=Xe(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Xe(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\n\tfunction Tg(a,b,c){var d=b.expirationTime;if(null!==a)if(a.memoizedProps!==b.pendingProps||I.current)qg=!0;else{if(d<c){qg=!1;switch(b.tag){case 3:Rg(b);Fg();break;case 5:Lf(b);break;case 1:J(b.type)&&Oe(b);break;case 4:Jf(b,b.stateNode.containerInfo);break;case 10:Ug(b,b.memoizedProps.value);break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;if(0!==d&&d>=c)return Sg(a,b,c);b=Jg(a,b,c);return null!==b?b.sibling:null}}return Jg(a,b,c)}}else qg=!1;b.expirationTime=0;switch(b.tag){case 2:d=\n\tb.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;var e=Je(b,H.current);Ig(b,c);e=hg(null,b,d,a,e,c);b.effectTag|=1;if(\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;lg();if(J(d)){var f=!0;Oe(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;var g=d.getDerivedStateFromProps;\"function\"===typeof g&&kf(b,d,g,a);e.updater=tf;b.stateNode=e;e._reactInternalFiber=b;xf(b,d,a,c);b=Qg(null,b,d,!0,f,\n\tc)}else b.tag=0,S(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);f=b.pendingProps;a=hf(e);b.type=a;e=b.tag=We(a);f=L(a,f);g=void 0;switch(e){case 0:g=Mg(null,b,a,f,c);break;case 1:g=Og(null,b,a,f,c);break;case 11:g=Hg(null,b,a,f,c);break;case 14:g=Kg(null,b,a,L(a.type,f),d,c);break;default:x(\"306\",a,\"\")}return g;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:L(d,e),Mg(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,\n\te=b.elementType===d?e:L(d,e),Og(a,b,d,e,c);case 3:Rg(b);d=b.updateQueue;null===d?x(\"282\"):void 0;e=b.memoizedState;e=null!==e?e.element:null;yf(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)Fg(),b=Jg(a,b,c);else{e=b.stateNode;if(e=(null===a||null===a.child)&&e.hydrate)yg=Ee(b.stateNode.containerInfo),xg=b,e=zg=!0;e?(b.effectTag|=2,b.child=Ef(b,null,d,c)):(S(a,b,d,c),Fg());b=b.child}return b;case 5:return Lf(b),null===a&&Cg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,\n\tg=e.children,xe(d,e)?g=null:null!==f&&xe(d,f)&&(b.effectTag|=16),Ng(a,b),1!==c&&b.mode&1&&e.hidden?(b.expirationTime=b.childExpirationTime=1,b=null):(S(a,b,g,c),b=b.child),b;case 6:return null===a&&Cg(b),null;case 13:return Sg(a,b,c);case 4:return Jf(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Df(b,null,d,c):S(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:L(d,e),Hg(a,b,d,e,c);case 7:return S(a,b,b.pendingProps,c),b.child;case 8:return S(a,b,b.pendingProps.children,\n\tc),b.child;case 12:return S(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;Ug(b,f);if(null!==g){var h=g.value;f=bd(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!I.current){b=Jg(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var l=h.contextDependencies;if(null!==l){g=h.child;for(var k=l.first;null!==k;){if(k.context===d&&0!==\n\t(k.observedBits&f)){1===h.tag&&(k=nf(c),k.tag=sf,pf(h,k));h.expirationTime<c&&(h.expirationTime=c);k=h.alternate;null!==k&&k.expirationTime<c&&(k.expirationTime=c);k=c;for(var m=h.return;null!==m;){var p=m.alternate;if(m.childExpirationTime<k)m.childExpirationTime=k,null!==p&&p.childExpirationTime<k&&(p.childExpirationTime=k);else if(null!==p&&p.childExpirationTime<k)p.childExpirationTime=k;else break;m=m.return}l.expirationTime<c&&(l.expirationTime=c);break}k=k.next}}else g=10===h.tag?h.type===b.type?\n\tnull:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}}S(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,Ig(b,c),e=M(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,S(a,b,d,c),b.child;case 14:return e=b.type,f=L(e,b.pendingProps),f=L(e.type,f),Kg(a,b,e,f,d,c);case 15:return Lg(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===\n\td?e:L(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,J(d)?(a=!0,Oe(b)):a=!1,Ig(b,c),vf(b,d,e,c),xf(b,d,e,c),Qg(null,b,d,!0,a,c)}x(\"156\")}var Vg={current:null},Wg=null,Xg=null,Yg=null;function Ug(a,b){var c=a.type._context;G(Vg,c._currentValue,a);c._currentValue=b}function Zg(a){var b=Vg.current;F(Vg,a);a.type._context._currentValue=b}function Ig(a,b){Wg=a;Yg=Xg=null;var c=a.contextDependencies;null!==c&&c.expirationTime>=b&&(qg=!0);a.contextDependencies=null}\n\tfunction M(a,b){if(Yg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)Yg=a,b=1073741823;b={context:a,observedBits:b,next:null};null===Xg?(null===Wg?x(\"308\"):void 0,Xg=b,Wg.contextDependencies={first:b,expirationTime:0}):Xg=Xg.next=b}return a._currentValue}var $g=0,rf=1,sf=2,ah=3,Pg=!1;function bh(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\n\tfunction ch(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function nf(a){return{expirationTime:a,tag:$g,payload:null,callback:null,next:null,nextEffect:null}}function dh(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}\n\tfunction pf(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=bh(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=bh(a.memoizedState),e=c.updateQueue=bh(c.memoizedState)):d=a.updateQueue=ch(e):null===e&&(e=c.updateQueue=ch(d));null===e||d===e?dh(d,b):null===d.lastUpdate||null===e.lastUpdate?(dh(d,b),dh(e,b)):(dh(d,b),e.lastUpdate=b)}\n\tfunction eh(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=bh(a.memoizedState):fh(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function fh(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=ch(b));return b}\n\tfunction gh(a,b,c,d,e,f){switch(c.tag){case rf:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case ah:a.effectTag=a.effectTag&-2049|64;case $g:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case sf:Pg=!0}return d}\n\tfunction yf(a,b,c,d,e){Pg=!1;b=fh(a,b);for(var f=b.baseState,g=null,h=0,l=b.firstUpdate,k=f;null!==l;){var m=l.expirationTime;m<e?(null===g&&(g=l,f=k),h<m&&(h=m)):(k=gh(a,b,l,k,c,d),null!==l.callback&&(a.effectTag|=32,l.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=l:(b.lastEffect.nextEffect=l,b.lastEffect=l)));l=l.next}m=null;for(l=b.firstCapturedUpdate;null!==l;){var p=l.expirationTime;p<e?(null===m&&(m=l,null===g&&(f=k)),h<p&&(h=p)):(k=gh(a,b,l,k,c,d),null!==l.callback&&(a.effectTag|=\n\t32,l.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=l:(b.lastCapturedEffect.nextEffect=l,b.lastCapturedEffect=l)));l=l.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=k);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;a.expirationTime=h;a.memoizedState=k}\n\tfunction hh(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);ih(b.firstEffect,c);b.firstEffect=b.lastEffect=null;ih(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function ih(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;\"function\"!==typeof c?x(\"191\",c):void 0;c.call(d)}a=a.nextEffect}}\n\tfunction jh(a,b){return{value:a,source:b,stack:jc(b)}}function kh(a){a.effectTag|=4}var lh=void 0,mh=void 0,nh=void 0,oh=void 0;lh=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};mh=function(){};\n\tnh=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;If(N.current);a=null;switch(c){case \"input\":f=vc(g,f);d=vc(g,d);a=[];break;case \"option\":f=$d(g,f);d=$d(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=be(g,f);d=be(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=te)}qe(c,d);g=c=void 0;var h=null;for(c in f)if(!d.hasOwnProperty(c)&&f.hasOwnProperty(c)&&null!=f[c])if(\"style\"===\n\tc){var l=f[c];for(g in l)l.hasOwnProperty(g)&&(h||(h={}),h[g]=\"\")}else\"dangerouslySetInnerHTML\"!==c&&\"children\"!==c&&\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&\"autoFocus\"!==c&&(ra.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in d){var k=d[c];l=null!=f?f[c]:void 0;if(d.hasOwnProperty(c)&&k!==l&&(null!=k||null!=l))if(\"style\"===c)if(l){for(g in l)!l.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(h||(h={}),h[g]=\"\");for(g in k)k.hasOwnProperty(g)&&l[g]!==k[g]&&(h||\n\t(h={}),h[g]=k[g])}else h||(a||(a=[]),a.push(c,h)),h=k;else\"dangerouslySetInnerHTML\"===c?(k=k?k.__html:void 0,l=l?l.__html:void 0,null!=k&&l!==k&&(a=a||[]).push(c,\"\"+k)):\"children\"===c?l===k||\"string\"!==typeof k&&\"number\"!==typeof k||(a=a||[]).push(c,\"\"+k):\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&(ra.hasOwnProperty(c)?(null!=k&&se(e,c),a||l===k||(a=[])):(a=a||[]).push(c,k))}h&&(a=a||[]).push(\"style\",h);e=a;(b.updateQueue=e)&&kh(b)}};oh=function(a,b,c,d){c!==d&&kh(b)};\n\tvar ph=\"function\"===typeof WeakSet?WeakSet:Set;function qh(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=jc(c));null!==c&&ic(c.type);b=b.value;null!==a&&1===a.tag&&ic(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function rh(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){sh(a,c)}else b.current=null}\n\tfunction th(a,b,c){c=c.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do{if((d.tag&a)!==Nf){var e=d.destroy;d.destroy=void 0;void 0!==e&&e()}(d.tag&b)!==Nf&&(e=d.create,d.destroy=e());d=d.next}while(d!==c)}}\n\tfunction uh(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d.style.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=ne(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if(13===c.tag&&null!==c.memoizedState){d=c.child.sibling;d.return=c;c=d;continue}else if(null!==c.child){c.child.return=c;c=c.child;continue}if(c===a)break;for(;null===c.sibling;){if(null===c.return||\n\tc.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\n\tfunction vh(a){\"function\"===typeof Re&&Re(a);switch(a.tag){case 0:case 11:case 14:case 15:var b=a.updateQueue;if(null!==b&&(b=b.lastEffect,null!==b)){var c=b=b.next;do{var d=c.destroy;if(void 0!==d){var e=a;try{d()}catch(f){sh(e,f)}}c=c.next}while(c!==b)}break;case 1:rh(a);b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(f){sh(a,f)}break;case 5:rh(a);break;case 4:wh(a)}}\n\tfunction xh(a){return 5===a.tag||3===a.tag||4===a.tag}\n\tfunction yh(a){a:{for(var b=a.return;null!==b;){if(xh(b)){var c=b;break a}b=b.return}x(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:x(\"161\")}c.effectTag&16&&(ke(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||xh(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.effectTag&\n\t2)continue b;if(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(g=b,h=e.stateNode,8===g.nodeType?(f=g.parentNode,f.insertBefore(h,g)):(f=g,f.appendChild(h)),g=g._reactRootContainer,null!==g&&void 0!==g||null!==f.onclick||(f.onclick=te)):b.appendChild(e.stateNode);\n\telse if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\n\tfunction wh(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?x(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if(vh(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n\t(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag){if(null!==b.child){d=b.stateNode.containerInfo;e=!0;b.child.return=b;b=b.child;continue}}else if(vh(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\n\tfunction zh(a,b){switch(b.tag){case 0:case 11:case 14:case 15:th(Pf,Qf,b);break;case 1:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&Ce(c,f,e,a,d,b)}break;case 6:null===b.stateNode?x(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 12:break;case 13:c=b.memoizedState;d=void 0;a=b;null===c?d=!1:(d=!0,a=b.child,0===c.timedOutAt&&(c.timedOutAt=lf()));null!==a&&uh(a,d);c=\n\tb.updateQueue;if(null!==c){b.updateQueue=null;var g=b.stateNode;null===g&&(g=b.stateNode=new ph);c.forEach(function(a){var c=Ah.bind(null,b,a);g.has(a)||(g.add(a),a.then(c,c))})}break;case 17:break;default:x(\"163\")}}var Bh=\"function\"===typeof WeakMap?WeakMap:Map;function Ch(a,b,c){c=nf(c);c.tag=ah;c.payload={element:null};var d=b.value;c.callback=function(){Dh(d);qh(a,b)};return c}\n\tfunction Eh(a,b,c){c=nf(c);c.tag=ah;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Fh?Fh=new Set([this]):Fh.add(this));var c=b.value,e=b.stack;qh(a,b);this.componentDidCatch(c,{componentStack:null!==e?e:\"\"})});return c}\n\tfunction Gh(a){switch(a.tag){case 1:J(a.type)&&Ke(a);var b=a.effectTag;return b&2048?(a.effectTag=b&-2049|64,a):null;case 3:return Kf(a),Le(a),b=a.effectTag,0!==(b&64)?x(\"285\"):void 0,a.effectTag=b&-2049|64,a;case 5:return Mf(a),null;case 13:return b=a.effectTag,b&2048?(a.effectTag=b&-2049|64,a):null;case 18:return null;case 4:return Kf(a),null;case 10:return Zg(a),null;default:return null}}\n\tvar Hh=Tb.ReactCurrentDispatcher,Ih=Tb.ReactCurrentOwner,Jh=1073741822,Kh=!1,T=null,Lh=null,U=0,Mh=-1,Nh=!1,V=null,Oh=!1,Ph=null,Qh=null,Rh=null,Fh=null;function Sh(){if(null!==T)for(var a=T.return;null!==a;){var b=a;switch(b.tag){case 1:var c=b.type.childContextTypes;null!==c&&void 0!==c&&Ke(b);break;case 3:Kf(b);Le(b);break;case 5:Mf(b);break;case 4:Kf(b);break;case 10:Zg(b)}a=a.return}Lh=null;U=0;Mh=-1;Nh=!1;T=null}\n\tfunction Th(){for(;null!==V;){var a=V.effectTag;a&16&&ke(V.stateNode,\"\");if(a&128){var b=V.alternate;null!==b&&(b=b.ref,null!==b&&(\"function\"===typeof b?b(null):b.current=null))}switch(a&14){case 2:yh(V);V.effectTag&=-3;break;case 6:yh(V);V.effectTag&=-3;zh(V.alternate,V);break;case 4:zh(V.alternate,V);break;case 8:a=V,wh(a),a.return=null,a.child=null,a.memoizedState=null,a.updateQueue=null,a=a.alternate,null!==a&&(a.return=null,a.child=null,a.memoizedState=null,a.updateQueue=null)}V=V.nextEffect}}\n\tfunction Uh(){for(;null!==V;){if(V.effectTag&256)a:{var a=V.alternate,b=V;switch(b.tag){case 0:case 11:case 15:th(Of,Nf,b);break a;case 1:if(b.effectTag&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:L(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}break a;case 3:case 5:case 6:case 4:case 17:break a;default:x(\"163\")}}V=V.nextEffect}}\n\tfunction Vh(a,b){for(;null!==V;){var c=V.effectTag;if(c&36){var d=V.alternate,e=V,f=b;switch(e.tag){case 0:case 11:case 15:th(Rf,Sf,e);break;case 1:var g=e.stateNode;if(e.effectTag&4)if(null===d)g.componentDidMount();else{var h=e.elementType===e.type?d.memoizedProps:L(e.type,d.memoizedProps);g.componentDidUpdate(h,d.memoizedState,g.__reactInternalSnapshotBeforeUpdate)}d=e.updateQueue;null!==d&&hh(e,d,g,f);break;case 3:d=e.updateQueue;if(null!==d){g=null;if(null!==e.child)switch(e.child.tag){case 5:g=\n\te.child.stateNode;break;case 1:g=e.child.stateNode}hh(e,d,g,f)}break;case 5:f=e.stateNode;null===d&&e.effectTag&4&&we(e.type,e.memoizedProps)&&f.focus();break;case 6:break;case 4:break;case 12:break;case 13:break;case 17:break;default:x(\"163\")}}c&128&&(e=V.ref,null!==e&&(f=V.stateNode,\"function\"===typeof e?e(f):e.current=f));c&512&&(Ph=a);V=V.nextEffect}}\n\tfunction Wh(a,b){Rh=Qh=Ph=null;var c=W;W=!0;do{if(b.effectTag&512){var d=!1,e=void 0;try{var f=b;th(Uf,Nf,f);th(Nf,Tf,f)}catch(g){d=!0,e=g}d&&sh(b,e)}b=b.nextEffect}while(null!==b);W=c;c=a.expirationTime;0!==c&&Xh(a,c);X||W||Yh(1073741823,!1)}function of(){null!==Qh&&Be(Qh);null!==Rh&&Rh()}\n\tfunction Zh(a,b){Oh=Kh=!0;a.current===b?x(\"177\"):void 0;var c=a.pendingCommitExpirationTime;0===c?x(\"261\"):void 0;a.pendingCommitExpirationTime=0;var d=b.expirationTime,e=b.childExpirationTime;ef(a,e>d?e:d);Ih.current=null;d=void 0;1<b.effectTag?null!==b.lastEffect?(b.lastEffect.nextEffect=b,d=b.firstEffect):d=b:d=b.firstEffect;ue=Bd;ve=Pd();Bd=!1;for(V=d;null!==V;){e=!1;var f=void 0;try{Uh()}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}for(V=d;null!==V;){e=!1;\n\tf=void 0;try{Th()}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}Qd(ve);ve=null;Bd=!!ue;ue=null;a.current=b;for(V=d;null!==V;){e=!1;f=void 0;try{Vh(a,c)}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}if(null!==d&&null!==Ph){var g=Wh.bind(null,a,d);Qh=r.unstable_runWithPriority(r.unstable_NormalPriority,function(){return Ae(g)});Rh=g}Kh=Oh=!1;\"function\"===typeof Qe&&Qe(b.stateNode);c=b.expirationTime;b=b.childExpirationTime;b=\n\tb>c?b:c;0===b&&(Fh=null);$h(a,b)}\n\tfunction ai(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&1024)){T=a;a:{var e=b;b=a;var f=U;var g=b.pendingProps;switch(b.tag){case 2:break;case 16:break;case 15:case 0:break;case 1:J(b.type)&&Ke(b);break;case 3:Kf(b);Le(b);g=b.stateNode;g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null);if(null===e||null===e.child)Eg(b),b.effectTag&=-3;mh(b);break;case 5:Mf(b);var h=If(Hf.current);f=b.type;if(null!==e&&null!=b.stateNode)nh(e,b,f,g,h),e.ref!==b.ref&&(b.effectTag|=\n\t128);else if(g){var l=If(N.current);if(Eg(b)){g=b;e=g.stateNode;var k=g.type,m=g.memoizedProps,p=h;e[Fa]=g;e[Ga]=m;f=void 0;h=k;switch(h){case \"iframe\":case \"object\":E(\"load\",e);break;case \"video\":case \"audio\":for(k=0;k<ab.length;k++)E(ab[k],e);break;case \"source\":E(\"error\",e);break;case \"img\":case \"image\":case \"link\":E(\"error\",e);E(\"load\",e);break;case \"form\":E(\"reset\",e);E(\"submit\",e);break;case \"details\":E(\"toggle\",e);break;case \"input\":wc(e,m);E(\"invalid\",e);se(p,\"onChange\");break;case \"select\":e._wrapperState=\n\t{wasMultiple:!!m.multiple};E(\"invalid\",e);se(p,\"onChange\");break;case \"textarea\":ce(e,m),E(\"invalid\",e),se(p,\"onChange\")}qe(h,m);k=null;for(f in m)m.hasOwnProperty(f)&&(l=m[f],\"children\"===f?\"string\"===typeof l?e.textContent!==l&&(k=[\"children\",l]):\"number\"===typeof l&&e.textContent!==\"\"+l&&(k=[\"children\",\"\"+l]):ra.hasOwnProperty(f)&&null!=l&&se(p,f));switch(h){case \"input\":Rb(e);Ac(e,m,!0);break;case \"textarea\":Rb(e);ee(e,m);break;case \"select\":case \"option\":break;default:\"function\"===typeof m.onClick&&\n\t(e.onclick=te)}f=k;g.updateQueue=f;g=null!==f?!0:!1;g&&kh(b)}else{m=b;p=f;e=g;k=9===h.nodeType?h:h.ownerDocument;l===fe.html&&(l=ge(p));l===fe.html?\"script\"===p?(e=k.createElement(\"div\"),e.innerHTML=\"<script>\\x3c/script>\",k=e.removeChild(e.firstChild)):\"string\"===typeof e.is?k=k.createElement(p,{is:e.is}):(k=k.createElement(p),\"select\"===p&&(p=k,e.multiple?p.multiple=!0:e.size&&(p.size=e.size))):k=k.createElementNS(l,p);e=k;e[Fa]=m;e[Ga]=g;lh(e,b,!1,!1);p=e;k=f;m=g;var t=h,A=re(k,m);switch(k){case \"iframe\":case \"object\":E(\"load\",\n\tp);h=m;break;case \"video\":case \"audio\":for(h=0;h<ab.length;h++)E(ab[h],p);h=m;break;case \"source\":E(\"error\",p);h=m;break;case \"img\":case \"image\":case \"link\":E(\"error\",p);E(\"load\",p);h=m;break;case \"form\":E(\"reset\",p);E(\"submit\",p);h=m;break;case \"details\":E(\"toggle\",p);h=m;break;case \"input\":wc(p,m);h=vc(p,m);E(\"invalid\",p);se(t,\"onChange\");break;case \"option\":h=$d(p,m);break;case \"select\":p._wrapperState={wasMultiple:!!m.multiple};h=n({},m,{value:void 0});E(\"invalid\",p);se(t,\"onChange\");break;case \"textarea\":ce(p,\n\tm);h=be(p,m);E(\"invalid\",p);se(t,\"onChange\");break;default:h=m}qe(k,h);l=void 0;var v=k,R=p,u=h;for(l in u)if(u.hasOwnProperty(l)){var q=u[l];\"style\"===l?oe(R,q):\"dangerouslySetInnerHTML\"===l?(q=q?q.__html:void 0,null!=q&&je(R,q)):\"children\"===l?\"string\"===typeof q?(\"textarea\"!==v||\"\"!==q)&&ke(R,q):\"number\"===typeof q&&ke(R,\"\"+q):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ra.hasOwnProperty(l)?null!=q&&se(t,l):null!=q&&tc(R,l,q,A))}switch(k){case \"input\":Rb(p);\n\tAc(p,m,!1);break;case \"textarea\":Rb(p);ee(p,m);break;case \"option\":null!=m.value&&p.setAttribute(\"value\",\"\"+uc(m.value));break;case \"select\":h=p;h.multiple=!!m.multiple;p=m.value;null!=p?ae(h,!!m.multiple,p,!1):null!=m.defaultValue&&ae(h,!!m.multiple,m.defaultValue,!0);break;default:\"function\"===typeof h.onClick&&(p.onclick=te)}(g=we(f,g))&&kh(b);b.stateNode=e}null!==b.ref&&(b.effectTag|=128)}else null===b.stateNode?x(\"166\"):void 0;break;case 6:e&&null!=b.stateNode?oh(e,b,e.memoizedProps,g):(\"string\"!==\n\ttypeof g&&(null===b.stateNode?x(\"166\"):void 0),e=If(Hf.current),If(N.current),Eg(b)?(g=b,f=g.stateNode,e=g.memoizedProps,f[Fa]=g,(g=f.nodeValue!==e)&&kh(b)):(f=b,g=(9===e.nodeType?e:e.ownerDocument).createTextNode(g),g[Fa]=b,f.stateNode=g));break;case 11:break;case 13:g=b.memoizedState;if(0!==(b.effectTag&64)){b.expirationTime=f;T=b;break a}g=null!==g;f=null!==e&&null!==e.memoizedState;null!==e&&!g&&f&&(e=e.child.sibling,null!==e&&(h=b.firstEffect,null!==h?(b.firstEffect=e,e.nextEffect=h):(b.firstEffect=\n\tb.lastEffect=e,e.nextEffect=null),e.effectTag=8));if(g||f)b.effectTag|=4;break;case 7:break;case 8:break;case 12:break;case 4:Kf(b);mh(b);break;case 10:Zg(b);break;case 9:break;case 14:break;case 17:J(b.type)&&Ke(b);break;case 18:break;default:x(\"156\")}T=null}b=a;if(1===U||1!==b.childExpirationTime){g=0;for(f=b.child;null!==f;)e=f.expirationTime,h=f.childExpirationTime,e>g&&(g=e),h>g&&(g=h),f=f.sibling;b.childExpirationTime=g}if(null!==T)return T;null!==c&&0===(c.effectTag&1024)&&(null===c.firstEffect&&\n\t(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a))}else{a=Gh(a,U);if(null!==a)return a.effectTag&=1023,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=1024)}if(null!==d)return d;if(null!==c)a=c;else break}return null}\n\tfunction bi(a){var b=Tg(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=ai(a));Ih.current=null;return b}\n\tfunction ci(a,b){Kh?x(\"243\"):void 0;of();Kh=!0;var c=Hh.current;Hh.current=kg;var d=a.nextExpirationTimeToWorkOn;if(d!==U||a!==Lh||null===T)Sh(),Lh=a,U=d,T=Xe(Lh.current,null,U),a.pendingCommitExpirationTime=0;var e=!1;do{try{if(b)for(;null!==T&&!di();)T=bi(T);else for(;null!==T;)T=bi(T)}catch(u){if(Yg=Xg=Wg=null,lg(),null===T)e=!0,Dh(u);else{null===T?x(\"271\"):void 0;var f=T,g=f.return;if(null===g)e=!0,Dh(u);else{a:{var h=a,l=g,k=f,m=u;g=U;k.effectTag|=1024;k.firstEffect=k.lastEffect=null;if(null!==\n\tm&&\"object\"===typeof m&&\"function\"===typeof m.then){var p=m;m=l;var t=-1,A=-1;do{if(13===m.tag){var v=m.alternate;if(null!==v&&(v=v.memoizedState,null!==v)){A=10*(1073741822-v.timedOutAt);break}v=m.pendingProps.maxDuration;if(\"number\"===typeof v)if(0>=v)t=0;else if(-1===t||v<t)t=v}m=m.return}while(null!==m);m=l;do{if(v=13===m.tag)v=void 0===m.memoizedProps.fallback?!1:null===m.memoizedState;if(v){l=m.updateQueue;null===l?(l=new Set,l.add(p),m.updateQueue=l):l.add(p);if(0===(m.mode&1)){m.effectTag|=\n\t64;k.effectTag&=-1957;1===k.tag&&(null===k.alternate?k.tag=17:(g=nf(1073741823),g.tag=sf,pf(k,g)));k.expirationTime=1073741823;break a}k=h;l=g;var R=k.pingCache;null===R?(R=k.pingCache=new Bh,v=new Set,R.set(p,v)):(v=R.get(p),void 0===v&&(v=new Set,R.set(p,v)));v.has(l)||(v.add(l),k=ei.bind(null,k,p,l),p.then(k,k));-1===t?h=1073741823:(-1===A&&(A=10*(1073741822-gf(h,g))-5E3),h=A+t);0<=h&&Mh<h&&(Mh=h);m.effectTag|=2048;m.expirationTime=g;break a}m=m.return}while(null!==m);m=Error((ic(k.type)||\"A React component\")+\n\t\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\"+jc(k))}Nh=!0;m=jh(m,k);h=l;do{switch(h.tag){case 3:h.effectTag|=2048;h.expirationTime=g;g=Ch(h,m,g);eh(h,g);break a;case 1:if(t=m,A=h.type,k=h.stateNode,0===(h.effectTag&64)&&(\"function\"===typeof A.getDerivedStateFromError||null!==k&&\"function\"===typeof k.componentDidCatch&&(null===Fh||!Fh.has(k)))){h.effectTag|=2048;\n\th.expirationTime=g;g=Eh(h,t,g);eh(h,g);break a}}h=h.return}while(null!==h)}T=ai(f);continue}}}break}while(1);Kh=!1;Hh.current=c;Yg=Xg=Wg=null;lg();if(e)Lh=null,a.finishedWork=null;else if(null!==T)a.finishedWork=null;else{c=a.current.alternate;null===c?x(\"281\"):void 0;Lh=null;if(Nh){e=a.latestPendingTime;f=a.latestSuspendedTime;g=a.latestPingedTime;if(0!==e&&e<d||0!==f&&f<d||0!==g&&g<d){ff(a,d);fi(a,c,d,a.expirationTime,-1);return}if(!a.didError&&b){a.didError=!0;d=a.nextExpirationTimeToWorkOn=d;\n\tb=a.expirationTime=1073741823;fi(a,c,d,b,-1);return}}b&&-1!==Mh?(ff(a,d),b=10*(1073741822-gf(a,d)),b<Mh&&(Mh=b),b=10*(1073741822-lf()),b=Mh-b,fi(a,c,d,a.expirationTime,0>b?0:b)):(a.pendingCommitExpirationTime=d,a.finishedWork=c)}}\n\tfunction sh(a,b){for(var c=a.return;null!==c;){switch(c.tag){case 1:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Fh||!Fh.has(d))){a=jh(b,a);a=Eh(c,a,1073741823);pf(c,a);qf(c,1073741823);return}break;case 3:a=jh(b,a);a=Ch(c,a,1073741823);pf(c,a);qf(c,1073741823);return}c=c.return}3===a.tag&&(c=jh(b,a),c=Ch(a,c,1073741823),pf(a,c),qf(a,1073741823))}\n\tfunction mf(a,b){var c=r.unstable_getCurrentPriorityLevel(),d=void 0;if(0===(b.mode&1))d=1073741823;else if(Kh&&!Oh)d=U;else{switch(c){case r.unstable_ImmediatePriority:d=1073741823;break;case r.unstable_UserBlockingPriority:d=1073741822-10*(((1073741822-a+15)/10|0)+1);break;case r.unstable_NormalPriority:d=1073741822-25*(((1073741822-a+500)/25|0)+1);break;case r.unstable_LowPriority:case r.unstable_IdlePriority:d=1;break;default:x(\"313\")}null!==Lh&&d===U&&--d}c===r.unstable_UserBlockingPriority&&\n\t(0===gi||d<gi)&&(gi=d);return d}function ei(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);if(null!==Lh&&U===c)Lh=null;else if(b=a.earliestSuspendedTime,d=a.latestSuspendedTime,0!==b&&c<=b&&c>=d){a.didError=!1;b=a.latestPingedTime;if(0===b||b>c)a.latestPingedTime=c;df(c,a);c=a.expirationTime;0!==c&&Xh(a,c)}}function Ah(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=lf();b=mf(b,a);a=hi(a,b);null!==a&&(cf(a,b),b=a.expirationTime,0!==b&&Xh(a,b))}\n\tfunction hi(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}return e}\n\tfunction qf(a,b){a=hi(a,b);null!==a&&(!Kh&&0!==U&&b>U&&Sh(),cf(a,b),Kh&&!Oh&&Lh===a||Xh(a,a.expirationTime),ii>ji&&(ii=0,x(\"185\")))}function ki(a,b,c,d,e){return r.unstable_runWithPriority(r.unstable_ImmediatePriority,function(){return a(b,c,d,e)})}var li=null,Y=null,mi=0,ni=void 0,W=!1,oi=null,Z=0,gi=0,pi=!1,qi=null,X=!1,ri=!1,si=null,ti=r.unstable_now(),ui=1073741822-(ti/10|0),vi=ui,ji=50,ii=0,wi=null;function xi(){ui=1073741822-((r.unstable_now()-ti)/10|0)}\n\tfunction yi(a,b){if(0!==mi){if(b<mi)return;null!==ni&&r.unstable_cancelCallback(ni)}mi=b;a=r.unstable_now()-ti;ni=r.unstable_scheduleCallback(zi,{timeout:10*(1073741822-b)-a})}function fi(a,b,c,d,e){a.expirationTime=d;0!==e||di()?0<e&&(a.timeoutHandle=ye(Ai.bind(null,a,b,c),e)):(a.pendingCommitExpirationTime=c,a.finishedWork=b)}function Ai(a,b,c){a.pendingCommitExpirationTime=c;a.finishedWork=b;xi();vi=ui;Bi(a,c)}function $h(a,b){a.expirationTime=b;a.finishedWork=null}\n\tfunction lf(){if(W)return vi;Ci();if(0===Z||1===Z)xi(),vi=ui;return vi}function Xh(a,b){null===a.nextScheduledRoot?(a.expirationTime=b,null===Y?(li=Y=a,a.nextScheduledRoot=a):(Y=Y.nextScheduledRoot=a,Y.nextScheduledRoot=li)):b>a.expirationTime&&(a.expirationTime=b);W||(X?ri&&(oi=a,Z=1073741823,Di(a,1073741823,!1)):1073741823===b?Yh(1073741823,!1):yi(a,b))}\n\tfunction Ci(){var a=0,b=null;if(null!==Y)for(var c=Y,d=li;null!==d;){var e=d.expirationTime;if(0===e){null===c||null===Y?x(\"244\"):void 0;if(d===d.nextScheduledRoot){li=Y=d.nextScheduledRoot=null;break}else if(d===li)li=e=d.nextScheduledRoot,Y.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===Y){Y=c;Y.nextScheduledRoot=li;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{e>a&&(a=e,b=d);if(d===Y)break;if(1073741823===\n\ta)break;c=d;d=d.nextScheduledRoot}}oi=b;Z=a}var Ei=!1;function di(){return Ei?!0:r.unstable_shouldYield()?Ei=!0:!1}function zi(){try{if(!di()&&null!==li){xi();var a=li;do{var b=a.expirationTime;0!==b&&ui<=b&&(a.nextExpirationTimeToWorkOn=ui);a=a.nextScheduledRoot}while(a!==li)}Yh(0,!0)}finally{Ei=!1}}\n\tfunction Yh(a,b){Ci();if(b)for(xi(),vi=ui;null!==oi&&0!==Z&&a<=Z&&!(Ei&&ui>Z);)Di(oi,Z,ui>Z),Ci(),xi(),vi=ui;else for(;null!==oi&&0!==Z&&a<=Z;)Di(oi,Z,!1),Ci();b&&(mi=0,ni=null);0!==Z&&yi(oi,Z);ii=0;wi=null;if(null!==si)for(a=si,si=null,b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){pi||(pi=!0,qi=d)}}if(pi)throw a=qi,qi=null,pi=!1,a;}function Bi(a,b){W?x(\"253\"):void 0;oi=a;Z=b;Di(a,b,!1);Yh(1073741823,!1)}\n\tfunction Di(a,b,c){W?x(\"245\"):void 0;W=!0;if(c){var d=a.finishedWork;null!==d?Fi(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,ze(d)),ci(a,c),d=a.finishedWork,null!==d&&(di()?a.finishedWork=d:Fi(a,d,b)))}else d=a.finishedWork,null!==d?Fi(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,ze(d)),ci(a,c),d=a.finishedWork,null!==d&&Fi(a,d,b));W=!1}\n\tfunction Fi(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime>=c&&(null===si?si=[d]:si.push(d),d._defer)){a.finishedWork=b;a.expirationTime=0;return}a.finishedWork=null;a===wi?ii++:(wi=a,ii=0);r.unstable_runWithPriority(r.unstable_ImmediatePriority,function(){Zh(a,b)})}function Dh(a){null===oi?x(\"246\"):void 0;oi.expirationTime=0;pi||(pi=!0,qi=a)}function Gi(a,b){var c=X;X=!0;try{return a(b)}finally{(X=c)||W||Yh(1073741823,!1)}}\n\tfunction Hi(a,b){if(X&&!ri){ri=!0;try{return a(b)}finally{ri=!1}}return a(b)}function Ii(a,b,c){X||W||0===gi||(Yh(gi,!1),gi=0);var d=X;X=!0;try{return r.unstable_runWithPriority(r.unstable_UserBlockingPriority,function(){return a(b,c)})}finally{(X=d)||W||Yh(1073741823,!1)}}\n\tfunction Ji(a,b,c,d,e){var f=b.current;a:if(c){c=c._reactInternalFiber;b:{2===ed(c)&&1===c.tag?void 0:x(\"170\");var g=c;do{switch(g.tag){case 3:g=g.stateNode.context;break b;case 1:if(J(g.type)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}}g=g.return}while(null!==g);x(\"171\");g=void 0}if(1===c.tag){var h=c.type;if(J(h)){c=Ne(c,h,g);break a}}c=g}else c=He;null===b.context?b.context=c:b.pendingContext=c;b=e;e=nf(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);\n\tof();pf(f,e);qf(f,d);return d}function Ki(a,b,c,d){var e=b.current,f=lf();e=mf(f,e);return Ji(a,b,c,e,d)}function Li(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function Mi(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Wb,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\n\tAb=function(a,b,c){switch(b){case \"input\":yc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Ka(d);e?void 0:x(\"90\");Sb(d);yc(d,e)}}}break;case \"textarea\":de(a,c);break;case \"select\":b=c.value,null!=b&&ae(a,!!c.multiple,b,!1)}};\n\tfunction Ni(a){var b=1073741822-25*(((1073741822-lf()+500)/25|0)+1);b>=Jh&&(b=Jh-1);this._expirationTime=Jh=b;this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}Ni.prototype.render=function(a){this._defer?void 0:x(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new Oi;Ji(a,b,null,c,d._onCommit);return d};\n\tNi.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\n\tNi.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:x(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?x(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;Bi(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\n\tnull,this._defer=!1};Ni.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function Oi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}Oi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\n\tOi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?x(\"191\",c):void 0;c()}}};\n\tfunction Pi(a,b,c){b=K(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:c,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null};this._internalRoot=b.stateNode=a}\n\tPi.prototype.render=function(a,b){var c=this._internalRoot,d=new Oi;b=void 0===b?null:b;null!==b&&d.then(b);Ki(a,c,null,d._onCommit);return d};Pi.prototype.unmount=function(a){var b=this._internalRoot,c=new Oi;a=void 0===a?null:a;null!==a&&c.then(a);Ki(null,b,null,c._onCommit);return c};Pi.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new Oi;c=void 0===c?null:c;null!==c&&e.then(c);Ki(b,d,a,e._onCommit);return e};\n\tPi.prototype.createBatch=function(){var a=new Ni(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime>=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function Qi(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Gb=Gi;Hb=Ii;Ib=function(){W||0===gi||(Yh(gi,!1),gi=0)};\n\tfunction Ri(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new Pi(a,!1,b)}\n\tfunction Si(a,b,c,d,e){var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=Li(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=Ri(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=Li(f._internalRoot);h.call(a)}}Hi(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return Li(f._internalRoot)}\n\tfunction Ti(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Qi(b)?void 0:x(\"200\");return Mi(a,b,null,c)}\n\tvar Vi={createPortal:Ti,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?x(\"188\"):x(\"268\",Object.keys(a)));a=hd(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){Qi(b)?void 0:x(\"200\");return Si(null,a,b,!0,c)},render:function(a,b,c){Qi(b)?void 0:x(\"200\");return Si(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){Qi(c)?void 0:x(\"200\");null==a||void 0===a._reactInternalFiber?\n\tx(\"38\"):void 0;return Si(a,b,c,!1,d)},unmountComponentAtNode:function(a){Qi(a)?void 0:x(\"40\");return a._reactRootContainer?(Hi(function(){Si(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return Ti.apply(void 0,arguments)},unstable_batchedUpdates:Gi,unstable_interactiveUpdates:Ii,flushSync:function(a,b){W?x(\"187\"):void 0;var c=X;X=!0;try{return ki(a,b)}finally{X=c,Yh(1073741823,!1)}},unstable_createRoot:Ui,unstable_flushControlled:function(a){var b=\n\tX;X=!0;try{ki(a)}finally{(X=b)||W||Yh(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[Ia,Ja,Ka,Ba.injectEventPluginsByName,pa,Qa,function(a){ya(a,Pa)},Eb,Fb,Dd,Da]}};function Ui(a,b){Qi(a)?void 0:x(\"299\",\"unstable_createRoot\");return new Pi(a,!0,null!=b&&!0===b.hydrate)}\n\t(function(a){var b=a.findFiberByHostInstance;return Te(n({},a,{overrideProps:null,currentDispatcherRef:Tb.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=hd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))})({findFiberByHostInstance:Ha,bundleType:0,version:\"16.8.6\",rendererPackageName:\"react-dom\"});var Wi={default:Vi},Xi=Wi&&Vi||Wi;module.exports=Xi.default||Xi;\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction checkDCE() {\n\t  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n\t  if (\n\t    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n\t    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n\t  ) {\n\t    return;\n\t  }\n\t  if (false) {\n\t    // This branch is unreachable because this function is only called\n\t    // in production, but the condition is true only in development.\n\t    // Therefore if the branch is still here, dead code elimination wasn't\n\t    // properly applied.\n\t    // Don't change the message. React DevTools relies on it. Also make sure\n\t    // this message doesn't occur elsewhere in this function, or it will cause\n\t    // a false positive.\n\t    throw new Error('^_^');\n\t  }\n\t  try {\n\t    // Verify that the code above has been dead code eliminated (DCE'd).\n\t    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n\t  } catch (err) {\n\t    // DevTools shouldn't crash React, no matter what.\n\t    // We should still report in case we break this code.\n\t    console.error(err);\n\t  }\n\t}\n\t\n\tif (true) {\n\t  // DCE check should happen before ReactDOM bundle executes so that\n\t  // DevTools can report bad minification during injection.\n\t  checkDCE();\n\t  module.exports = __webpack_require__(18);\n\t} else {\n\t  module.exports = require('./cjs/react-dom.development.js');\n\t}\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/** @license React v16.8.6\n\t * react.production.min.js\n\t *\n\t * Copyright (c) Facebook, Inc. and its affiliates.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';var k=__webpack_require__(4),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.concurrent_mode\"):60111,y=n?Symbol.for(\"react.forward_ref\"):60112,z=n?Symbol.for(\"react.suspense\"):60113,aa=n?Symbol.for(\"react.memo\"):\n\t60115,ba=n?Symbol.for(\"react.lazy\"):60116,A=\"function\"===typeof Symbol&&Symbol.iterator;function ca(a,b,d,c,e,g,h,f){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[d,c,e,g,h,f],m=0;a=Error(b.replace(/%s/g,function(){return l[m++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\n\tfunction B(a){for(var b=arguments.length-1,d=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)d+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);ca(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",d)}var C={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},D={};\n\tfunction E(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}E.prototype.isReactComponent={};E.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?B(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}var H=G.prototype=new F;\n\tH.constructor=G;k(H,E.prototype);H.isPureReactComponent=!0;var I={current:null},J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\n\tfunction M(a,b,d){var c=void 0,e={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=b[c]);var f=arguments.length-2;if(1===f)e.children=d;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];e.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===e[c]&&(e[c]=f[c]);return{$$typeof:p,type:a,key:g,ref:h,props:e,_owner:J.current}}\n\tfunction da(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,d,c){if(P.length){var e=P.pop();e.result=a;e.keyPrefix=b;e.func=d;e.context=c;e.count=0;return e}return{result:a,keyPrefix:b,func:d,context:c,count:0}}\n\tfunction R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\n\tfunction S(a,b,d,c){var e=typeof a;if(\"undefined\"===e||\"boolean\"===e)a=null;var g=!1;if(null===a)g=!0;else switch(e){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return d(c,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){e=a[h];var f=b+T(e,h);g+=S(e,f,d,c)}else if(null===a||\"object\"!==typeof a?f=null:(f=A&&a[A]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),h=\n\t0;!(e=a.next()).done;)e=e.value,f=b+T(e,h++),g+=S(e,f,d,c);else\"object\"===e&&(d=\"\"+a,B(\"31\",\"[object Object]\"===d?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":d,\"\"));return g}function U(a,b,d){return null==a?0:S(a,\"\",b,d)}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ea(a,b){a.func.call(a.context,b,a.count++)}\n\tfunction fa(a,b,d){var c=a.result,e=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?V(a,c,d,function(a){return a}):null!=a&&(N(a)&&(a=da(a,e+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+d)),c.push(a))}function V(a,b,d,c,e){var g=\"\";null!=d&&(g=(\"\"+d).replace(O,\"$&/\")+\"/\");b=Q(b,g,c,e);U(a,fa,b);R(b)}function W(){var a=I.current;null===a?B(\"321\"):void 0;return a}\n\tvar X={Children:{map:function(a,b,d){if(null==a)return a;var c=[];V(a,c,null,b,d);return c},forEach:function(a,b,d){if(null==a)return a;b=Q(null,null,b,d);U(a,ea,b);R(b)},count:function(a){return U(a,function(){return null},null)},toArray:function(a){var b=[];V(a,b,null,function(a){return a});return b},only:function(a){N(a)?void 0:B(\"143\");return a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n\t_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:y,render:a}},lazy:function(a){return{$$typeof:ba,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:aa,type:a,compare:void 0===b?null:b}},useCallback:function(a,b){return W().useCallback(a,b)},useContext:function(a,b){return W().useContext(a,b)},useEffect:function(a,b){return W().useEffect(a,b)},useImperativeHandle:function(a,\n\tb,d){return W().useImperativeHandle(a,b,d)},useDebugValue:function(){},useLayoutEffect:function(a,b){return W().useLayoutEffect(a,b)},useMemo:function(a,b){return W().useMemo(a,b)},useReducer:function(a,b,d){return W().useReducer(a,b,d)},useRef:function(a){return W().useRef(a)},useState:function(a){return W().useState(a)},Fragment:r,StrictMode:t,Suspense:z,createElement:M,cloneElement:function(a,b,d){null===a||void 0===a?B(\"267\",a):void 0;var c=void 0,e=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=\n\tb){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==b.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)e.children=d;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];e.children=l}return{$$typeof:p,type:a.type,key:g,ref:h,props:e,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.8.6\",\n\tunstable_ConcurrentMode:x,unstable_Profiler:u,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:I,ReactCurrentOwner:J,assign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/** @license React v0.13.6\n\t * scheduler.production.min.js\n\t *\n\t * Copyright (c) Facebook, Inc. and its affiliates.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var d=null,e=!1,g=3,k=-1,l=-1,m=!1,n=!1;function p(){if(!m){var a=d.expirationTime;n?q():n=!0;r(t,a)}}\n\tfunction u(){var a=d,b=d.next;if(d===b)d=null;else{var c=d.previous;d=c.next=b;b.previous=c}a.next=a.previous=null;c=a.callback;b=a.expirationTime;a=a.priorityLevel;var f=g,Q=l;g=a;l=b;try{var h=c()}finally{g=f,l=Q}if(\"function\"===typeof h)if(h={callback:h,priorityLevel:a,expirationTime:b,next:null,previous:null},null===d)d=h.next=h.previous=h;else{c=null;a=d;do{if(a.expirationTime>=b){c=a;break}a=a.next}while(a!==d);null===c?c=d:c===d&&(d=h,p());b=c.previous;b.next=c.previous=h;h.next=c;h.previous=\n\tb}}function v(){if(-1===k&&null!==d&&1===d.priorityLevel){m=!0;try{do u();while(null!==d&&1===d.priorityLevel)}finally{m=!1,null!==d?p():n=!1}}}function t(a){m=!0;var b=e;e=a;try{if(a)for(;null!==d;){var c=exports.unstable_now();if(d.expirationTime<=c){do u();while(null!==d&&d.expirationTime<=c)}else break}else if(null!==d){do u();while(null!==d&&!w())}}finally{m=!1,e=b,null!==d?p():n=!1,v()}}\n\tvar x=Date,y=\"function\"===typeof setTimeout?setTimeout:void 0,z=\"function\"===typeof clearTimeout?clearTimeout:void 0,A=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,B=\"function\"===typeof cancelAnimationFrame?cancelAnimationFrame:void 0,C,D;function E(a){C=A(function(b){z(D);a(b)});D=y(function(){B(C);a(exports.unstable_now())},100)}\n\tif(\"object\"===typeof performance&&\"function\"===typeof performance.now){var F=performance;exports.unstable_now=function(){return F.now()}}else exports.unstable_now=function(){return x.now()};var r,q,w,G=null;\"undefined\"!==typeof window?G=window:\"undefined\"!==typeof global&&(G=global);\n\tif(G&&G._schedMock){var H=G._schedMock;r=H[0];q=H[1];w=H[2];exports.unstable_now=H[3]}else if(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var I=null,J=function(a){if(null!==I)try{I(a)}finally{I=null}};r=function(a){null!==I?setTimeout(r,0,a):(I=a,setTimeout(J,0,!1))};q=function(){I=null};w=function(){return!1}}else{\"undefined\"!==typeof console&&(\"function\"!==typeof A&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"),\n\t\"function\"!==typeof B&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));var K=null,L=!1,M=-1,N=!1,O=!1,P=0,R=33,S=33;w=function(){return P<=exports.unstable_now()};var T=new MessageChannel,U=T.port2;T.port1.onmessage=function(){L=!1;var a=K,b=M;K=null;M=-1;var c=exports.unstable_now(),f=!1;if(0>=P-c)if(-1!==b&&b<=c)f=!0;else{N||(N=!0,E(V));K=a;M=b;return}if(null!==a){O=!0;try{a(f)}finally{O=!1}}};\n\tvar V=function(a){if(null!==K){E(V);var b=a-P+S;b<S&&R<S?(8>b&&(b=8),S=b<R?R:b):R=b;P=a+S;L||(L=!0,U.postMessage(void 0))}else N=!1};r=function(a,b){K=a;M=b;O||0>b?U.postMessage(void 0):N||(N=!0,E(V))};q=function(){K=null;L=!1;M=-1}}exports.unstable_ImmediatePriority=1;exports.unstable_UserBlockingPriority=2;exports.unstable_NormalPriority=3;exports.unstable_IdlePriority=5;exports.unstable_LowPriority=4;\n\texports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=g,f=k;g=a;k=exports.unstable_now();try{return b()}finally{g=c,k=f,v()}};exports.unstable_next=function(a){switch(g){case 1:case 2:case 3:var b=3;break;default:b=g}var c=g,f=k;g=b;k=exports.unstable_now();try{return a()}finally{g=c,k=f,v()}};\n\texports.unstable_scheduleCallback=function(a,b){var c=-1!==k?k:exports.unstable_now();if(\"object\"===typeof b&&null!==b&&\"number\"===typeof b.timeout)b=c+b.timeout;else switch(g){case 1:b=c+-1;break;case 2:b=c+250;break;case 5:b=c+1073741823;break;case 4:b=c+1E4;break;default:b=c+5E3}a={callback:a,priorityLevel:g,expirationTime:b,next:null,previous:null};if(null===d)d=a.next=a.previous=a,p();else{c=null;var f=d;do{if(f.expirationTime>b){c=f;break}f=f.next}while(f!==d);null===c?c=d:c===d&&(d=a,p());\n\tb=c.previous;b.next=c.previous=a;a.next=c;a.previous=b}return a};exports.unstable_cancelCallback=function(a){var b=a.next;if(null!==b){if(b===a)d=null;else{a===d&&(d=b);var c=a.previous;c.next=b;b.previous=c}a.next=a.previous=null}};exports.unstable_wrapCallback=function(a){var b=g;return function(){var c=g,f=k;g=b;k=exports.unstable_now();try{return a.apply(this,arguments)}finally{g=c,k=f,v()}}};exports.unstable_getCurrentPriorityLevel=function(){return g};\n\texports.unstable_shouldYield=function(){return!e&&(null!==d&&d.expirationTime<l||w())};exports.unstable_continueExecution=function(){null!==d&&p()};exports.unstable_pauseExecution=function(){};exports.unstable_getFirstCallbackNode=function(){return d};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tif (true) {\n\t  module.exports = __webpack_require__(21);\n\t} else {\n\t  module.exports = require('./cjs/scheduler.development.js');\n\t}\n\n\n/***/ }\n/******/ ])));\n\n\n// WEBPACK FOOTER //\n// static/js/main.c696ca7e.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/red-ball/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 864bfa6365cc8011fd52","/**\n* matter-js 0.14.2 by @liabru 2018-06-11\n* http://brm.io/matter-js/\n* License MIT\n*/\n\n/**\n * The MIT License (MIT)\n * \n * Copyright (c) Liam Brummitt and contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Matter = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(_dereq_,module,exports){\n/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Render = _dereq_('../render/Render');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\n\n(function() {\n\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                },\n                lineWidth: 0\n            }\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n    var _initProperties = function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#2e2b44' : Common.choose(['#006BA6', '#0496FF', '#FFBC42', '#D81159', '#8F2D56'])),\n            defaultStrokeStyle = '#000';\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            value = settings[property];\n\n            if (!settings.hasOwnProperty(property))\n                continue;\n\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part._original = {\n                    restitution: part.restitution,\n                    friction: part.friction,\n                    mass: part.mass,\n                    inertia: part.inertia,\n                    density: part.density,\n                    inverseMass: part.inverseMass,\n                    inverseInertia: part.inverseInertia\n                };\n\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            } else if (part._original) {\n                part.restitution = part._original.restitution;\n                part.friction = part._original.friction;\n                part.mass = part._original.mass;\n                part.inertia = part._original.inertia;\n                part.density = part._original.density;\n                part.inverseMass = part._original.inverseMass;\n                part.inverseInertia = part._original.inverseInertia;\n\n                delete part._original;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        var moment = body.inertia / (body.mass / 6);\n        body.inertia = moment * (mass / 6);\n        body.inverseInertia = 1 / body.inertia;\n\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia (i.e. second moment of area) of the body of the body. \n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = Body._totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n    Body.setPosition = function(body, position) {\n        var delta = Vector.sub(position, body.position);\n        body.positionPrev.x += delta.x;\n        body.positionPrev.y += delta.y;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n    Body.setAngle = function(body, angle) {\n        var delta = angle - body.angle;\n        body.anglePrev += delta;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        body.positionPrev.x = body.position.x - velocity.x;\n        body.positionPrev.y = body.position.y - velocity.y;\n        body.velocity.x = velocity.x;\n        body.velocity.y = velocity.y;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        body.anglePrev = body.angle - velocity;\n        body.angularVelocity = velocity;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n    Body.translate = function(body, translation) {\n        Body.setPosition(body, Vector.add(body.position, translation));\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     */\n    Body.rotate = function(body, rotation, point) {\n        if (!point) {\n            Body.setAngle(body, body.angle + rotation);\n        } else {\n            var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.setAngle(body, body.angle + rotation);\n        }\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        var totalArea = 0,\n            totalInertia = 0;\n\n        point = point || body.position;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, point);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n            part.area = Vertices.area(part.vertices);\n            Body.setMass(part, body.density * part.area);\n\n            // update inertia (requires vertices to be at origin)\n            Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n            Body.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass));\n            Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n\n            if (i > 0) {\n                totalArea += part.area;\n                totalInertia += part.inertia;\n            }\n\n            // scale position\n            part.position.x = point.x + (part.position.x - point.x) * scaleX;\n            part.position.y = point.y + (part.position.y - point.y) * scaleY;\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle parent body\n        if (body.parts.length > 1) {\n            body.area = totalArea;\n\n            if (!body.isStatic) {\n                Body.setMass(body, body.density * totalArea);\n                Body.setInertia(body, totalInertia);\n            }\n        }\n\n        // handle circles\n        if (body.circleRadius) { \n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n    };\n\n    /**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n    Body.update = function(body, deltaTime, timeScale, correction) {\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n            velocityPrevX = body.position.x - body.positionPrev.x,\n            velocityPrevY = body.position.y - body.positionPrev.y;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // track speed and acceleration\n        body.speed = Vector.magnitude(body.velocity);\n        body.angularSpeed = Math.abs(body.angularVelocity);\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n            \n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        body.force.x += force.x;\n        body.force.y += force.y;\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    Body._totalProperties = function(body) {\n        // from equations at:\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i],\n                mass = part.mass !== Infinity ? part.mass : 1;\n\n            properties.mass += mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));\n        }\n\n        properties.centre = Vector.div(properties.centre, properties.mass);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * An array of bodies that make up this body. \n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear. \n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance). \n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear. \n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n     \n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n     /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n     /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n     \n    /**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default \n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31}],2:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\n* A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\n* It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\n* Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = _dereq_('../core/Events');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Body = _dereq_('./Body');\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({ \n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [], \n            constraints: [], \n            composites: [],\n            label: 'Composite',\n            plugin: {}\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag. \n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for(var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {} object\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n            Composite.setModified(compositeA, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            Composite.setModified(composite, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n        \n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) { \n            return object.id.toString() === id.toString(); \n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n                        .concat(Composite.allConstraints(composite))\n                        .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions, \n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n    Composite.bounds = function(composite) {\n        var bodies = Composite.allBodies(composite),\n            vertices = [];\n\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i];\n            vertices.push(body.bounds.min, body.bounds.max);\n        }\n\n        return Bounds.create(vertices);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n     * If you need to change it manually, you should use the `Composite.setModified` method.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"./Body\":1}],3:[function(_dereq_,module,exports){\n/**\n* The `Matter.World` module contains methods for creating and manipulating the world composite.\n* A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\n* A `Matter.World` has a few additional properties including `gravity` and `bounds`.\n* It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\n* There are also a few methods here that alias those in `Matter.Composite` for easier readability.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class World\n* @extends Composite\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = _dereq_('./Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @constructor\n     * @param {} options\n     * @return {world} A new world\n     */\n    World.create = function(options) {\n        var composite = Composite.create();\n\n        var defaults = {\n            label: 'World',\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            bounds: { \n                min: { x: -Infinity, y: -Infinity }, \n                max: { x: Infinity, y: Infinity } \n            }\n        };\n        \n        return Common.extend(composite, defaults, options);\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * The gravity to apply on the world.\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n    /**\n     * A `Bounds` object that defines the world bounds for collision detection.\n     *\n     * @property bounds\n     * @type bounds\n     * @default { min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }\n     */\n\n    // World is a Composite body\n    // see src/module/Outro.js for these aliases:\n    \n    /**\n     * An alias for Composite.add\n     * @method add\n     * @param {world} world\n     * @param {} object\n     * @return {composite} The original world with the objects added\n     */\n\n    /**\n     * An alias for Composite.remove\n     * @method remove\n     * @param {world} world\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original world with the objects removed\n     */\n\n    /**\n     * An alias for Composite.clear\n     * @method clear\n     * @param {world} world\n     * @param {boolean} keepStatic\n     */\n\n    /**\n     * An alias for Composite.addComposite\n     * @method addComposite\n     * @param {world} world\n     * @param {composite} composite\n     * @return {world} The original world with the objects from composite added\n     */\n    \n     /**\n      * An alias for Composite.addBody\n      * @method addBody\n      * @param {world} world\n      * @param {body} body\n      * @return {world} The original world with the body added\n      */\n\n     /**\n      * An alias for Composite.addConstraint\n      * @method addConstraint\n      * @param {world} world\n      * @param {constraint} constraint\n      * @return {world} The original world with the constraint added\n      */\n\n})();\n\n},{\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Composite\":2}],4:[function(_dereq_,module,exports){\n/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            id: Contact.id(vertex),\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n    \n    /**\n     * Generates a contact id.\n     * @method id\n     * @param {vertex} vertex\n     * @return {string} Unique contactID\n     */\n    Contact.id = function(vertex) {\n        return vertex.body.id + '_' + vertex.index;\n    };\n\n})();\n\n},{}],5:[function(_dereq_,module,exports){\n/**\n* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n*\n* @class Detector\n*/\n\n// TODO: speculative contacts\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar SAT = _dereq_('./SAT');\nvar Pair = _dereq_('./Pair');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Finds all collisions given a list of pairs.\n     * @method collisions\n     * @param {pair[]} broadphasePairs\n     * @param {engine} engine\n     * @return {array} collisions\n     */\n    Detector.collisions = function(broadphasePairs, engine) {\n        var collisions = [],\n            pairsTable = engine.pairs.table;\n\n        \n        for (var i = 0; i < broadphasePairs.length; i++) {\n            var bodyA = broadphasePairs[i][0], \n                bodyB = broadphasePairs[i][1];\n\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\n                continue;\n            \n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\n                continue;\n\n\n            // mid phase\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n                    var partA = bodyA.parts[j];\n\n                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n                        var partB = bodyB.parts[k];\n\n                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\n                            // find a previous collision we could reuse\n                            var pairId = Pair.id(partA, partB),\n                                pair = pairsTable[pairId],\n                                previousCollision;\n\n                            if (pair && pair.isActive) {\n                                previousCollision = pair.collision;\n                            } else {\n                                previousCollision = null;\n                            }\n\n                            // narrow phase\n                            var collision = SAT.collides(partA, partB, previousCollision);\n\n\n                            if (collision.collided) {\n                                collisions.push(collision);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n})();\n\n},{\"../geometry/Bounds\":26,\"./Pair\":7,\"./SAT\":11}],6:[function(_dereq_,module,exports){\n/**\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = _dereq_('./Pair');\nvar Detector = _dereq_('./Detector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            controller: Grid,\n            detector: Detector.collisions,\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // don't update out of world bodies\n            if (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)\n                continue;\n\n            var newRegion = Grid._getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = Grid._regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = Grid._getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    Grid._bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = Grid._createBucket(buckets, bucketId);\n                            Grid._bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = Grid._createActivePairsList(grid);\n    };\n\n    /**\n     * Clears the grid.\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    Grid._regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    Grid._getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    Grid._createRegion = function(startCol, endCol, startRow, endRow) {\n        return { \n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol, \n            endCol: endCol, \n            startRow: startRow, \n            endRow: endRow \n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    Grid._getBucketId = function(column, row) {\n        return 'C' + column + 'R' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    Grid._createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketAddBody = function(grid, bucket, body) {\n        // add new pairs\n        for (var i = 0; i < bucket.length; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                grid.pairs[pairId] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketRemoveBody = function(grid, bucket, body) {\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        // update pair counts\n        for (var i = 0; i < bucket.length; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var bodyB = bucket[i],\n                pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    Grid._createActivePairsList = function(grid) {\n        var pairKeys,\n            pair,\n            pairs = [];\n\n        // grid.pairs is used as a hashmap\n        pairKeys = Common.keys(grid.pairs);\n\n        // iterate over grid.pairs\n        for (var k = 0; k < pairKeys.length; k++) {\n            pair = grid.pairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete grid.pairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n    \n})();\n\n},{\"../core/Common\":14,\"./Detector\":5,\"./Pair\":7}],7:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = _dereq_('./Contact');\n\n(function() {\n    \n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            contacts: {},\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\n            friction: Math.min(parentA.friction, parentB.friction),\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n            restitution: Math.max(parentA.restitution, parentB.restitution),\n            slop: Math.max(parentA.slop, parentB.slop)\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n        \n        pair.collision = collision;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = Math.min(parentA.friction, parentB.friction);\n        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n        pair.slop = Math.max(parentA.slop, parentB.slop);\n        activeContacts.length = 0;\n        \n        if (collision.collided) {\n            for (var i = 0; i < supports.length; i++) {\n                var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                if (contact) {\n                    activeContacts.push(contact);\n                } else {\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\n                }\n            }\n\n            pair.separation = collision.depth;\n            Pair.setActive(pair, true, timestamp);\n        } else {\n            if (pair.isActive === true)\n                Pair.setActive(pair, false, timestamp);\n        }\n    };\n    \n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return 'A' + bodyA.id + 'B' + bodyB.id;\n        } else {\n            return 'A' + bodyB.id + 'B' + bodyA.id;\n        }\n    };\n\n})();\n\n},{\"./Contact\":4}],8:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = _dereq_('./Pair');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n    \n    Pairs._pairMaxIdleLife = 1000;\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({ \n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            activePairIds = [],\n            collision,\n            pairId,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < collisions.length; i++) {\n            collision = collisions[i];\n\n            if (collision.collided) {\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\n                activePairIds.push(pairId);\n\n                pair = pairsTable[pairId];\n                \n                if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                        // pair exists and is active\n                        collisionActive.push(pair);\n                    } else {\n                        // pair exists but was inactive, so a collision has just started again\n                        collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                }\n            }\n        }\n\n        // deactivate previously active pairs that are now inactive\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            if (pair.isActive && Common.indexOf(activePairIds, pair.id) === -1) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n            }\n        }\n    };\n    \n    /**\n     * Finds and removes pairs that have been inactive for a set amount of time.\n     * @method removeOld\n     * @param {object} pairs\n     * @param {number} timestamp\n     */\n    Pairs.removeOld = function(pairs, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            indexesToRemove = [],\n            pair,\n            collision,\n            pairIndex,\n            i;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            collision = pair.collision;\n            \n            // never remove sleeping pairs\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                pair.timeUpdated = timestamp;\n                continue;\n            }\n\n            // if pair is inactive for too long, mark it to be removed\n            if (timestamp - pair.timeUpdated > Pairs._pairMaxIdleLife) {\n                indexesToRemove.push(i);\n            }\n        }\n\n        // remove marked pairs\n        for (i = 0; i < indexesToRemove.length; i++) {\n            pairIndex = indexesToRemove[i] - i;\n            pair = pairsList[pairIndex];\n            delete pairsTable[pair.id];\n            pairsList.splice(pairIndex, 1);\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n},{\"../core/Common\":14,\"./Pair\":7}],9:[function(_dereq_,module,exports){\n/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar SAT = _dereq_('./SAT');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Bodies = _dereq_('../factory/Bodies');\nvar Vertices = _dereq_('../geometry/Vertices');\n\n(function() {\n\n    /**\n     * Returns a list of collisions between `body` and `bodies`.\n     * @method collides\n     * @param {body} body\n     * @param {body[]} bodies\n     * @return {object[]} Collisions\n     */\n    Query.collides = function(body, bodies) {\n        var collisions = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var bodyA = bodies[i];\n            \n            if (Bounds.overlaps(bodyA.bounds, body.bounds)) {\n                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, body.bounds)) {\n                        var collision = SAT.collides(part, body);\n\n                        if (collision.collided) {\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {object[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = Query.collides(ray, bodies);\n\n        for (var i = 0; i < collisions.length; i += 1) {\n            var collision = collisions[i];\n            collision.body = collision.bodyB = collision.bodyA;            \n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            \n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n},{\"../factory/Bodies\":23,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"./SAT\":11}],10:[function(_dereq_,module,exports){\n/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    Resolver._restingThresh = 4;\n    Resolver._restingThreshTangent = 6;\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount;\n\n        // find total contacts on each body\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive)\n                continue;\n            \n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solvePosition = function(pairs, timeScale) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            bodyBtoA,\n            contactShare,\n            positionImpulse,\n            contactCount = {},\n            tempA = Vector._temp[0],\n            tempB = Vector._temp[1],\n            tempC = Vector._temp[2],\n            tempD = Vector._temp[3];\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA), \n                                    Vector.add(bodyA.positionImpulse, \n                                        Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n\n            pair.separation = Vector.dot(normal, bodyBtoA);\n        }\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n            \n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += body.positionImpulse.x;\n                body.positionPrev.y += body.positionImpulse.y;\n\n                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var i,\n            j,\n            pair,\n            contacts,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            tangent,\n            contact,\n            contactVertex,\n            normalImpulse,\n            tangentImpulse,\n            offset,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1];\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            contacts = pair.activeContacts;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            tangent = collision.tangent;\n\n            // resolve each contact\n            for (j = 0; j < contacts.length; j++) {\n                contact = contacts[j];\n                contactVertex = contact.vertex;\n                normalImpulse = contact.normalImpulse;\n                tangentImpulse = contact.tangentImpulse;\n\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                    \n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solveVelocity = function(pairs, timeScale) {\n        var timeScaleSquared = timeScale * timeScale,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1],\n            tempB = Vector._temp[2],\n            tempC = Vector._temp[3],\n            tempD = Vector._temp[4],\n            tempE = Vector._temp[5];\n        \n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent,\n                contacts = pair.activeContacts,\n                contactShare = 1 / contacts.length;\n\n            // update body velocities\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (var j = 0; j < contacts.length; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD), \n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\n\n                // coulomb friction\n                var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                        pair.friction * tangentVelocityDirection * timeScaleSquared,\n                        -maxFriction, maxFriction\n                    );\n                }\n\n                // modify impulses accounting for mass, inertia and offset\n                var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\n\n                normalImpulse *= share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                \n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],11:[function(_dereq_,module,exports){\n/**\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n*/\n\n// TODO: true circles and curves\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {collision} previousCollision\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\n        var overlapAB,\n            overlapBA, \n            minOverlap,\n            collision,\n            canReusePrevCol = false;\n\n        if (previousCollision) {\n            // estimate total motion\n            var parentA = bodyA.parent,\n                parentB = bodyB.parent,\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\n                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\n\n            // we may be able to (partially) reuse collision result \n            // but only safe if collision was resting\n            canReusePrevCol = previousCollision && previousCollision.collided && motion < 0.2;\n\n            // reuse collision object\n            collision = previousCollision;\n        } else {\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n        }\n\n        if (previousCollision && canReusePrevCol) {\n            // if we can reuse the collision result\n            // we only need to test the previously found axis\n            var axisBodyA = collision.axisBody,\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                axes = [axisBodyA.axes[previousCollision.axisNumber]];\n\n            minOverlap = SAT._overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n            collision.reused = true;\n\n            if (minOverlap.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n        } else {\n            // if we can't reuse a result, perform a full SAT test\n\n            overlapAB = SAT._overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n            if (overlapAB.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            overlapBA = SAT._overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n            if (overlapBA.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            if (overlapAB.overlap < overlapBA.overlap) {\n                minOverlap = overlapAB;\n                collision.axisBody = bodyA;\n            } else {\n                minOverlap = overlapBA;\n                collision.axisBody = bodyB;\n            }\n\n            // important for reuse later\n            collision.axisNumber = minOverlap.axisNumber;\n        }\n\n        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n        collision.collided = true;\n        collision.depth = minOverlap.overlap;\n        collision.parentA = collision.bodyA.parent;\n        collision.parentB = collision.bodyB.parent;\n        \n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        // ensure normal is facing away from bodyA\n        if (Vector.dot(minOverlap.axis, Vector.sub(bodyB.position, bodyA.position)) < 0) {\n            collision.normal = {\n                x: minOverlap.axis.x,\n                y: minOverlap.axis.y\n            };\n        } else {\n            collision.normal = {\n                x: -minOverlap.axis.x,\n                y: -minOverlap.axis.y\n            };\n        }\n\n        collision.tangent = Vector.perp(collision.normal);\n\n        collision.penetration = collision.penetration || {};\n        collision.penetration.x = collision.normal.x * collision.depth;\n        collision.penetration.y = collision.normal.y * collision.depth; \n\n        // find support points, there is always either exactly one or two\n        var verticesB = SAT._findSupports(bodyA, bodyB, collision.normal),\n            supports = [];\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\n            supports.push(verticesB[0]);\n\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\n            supports.push(verticesB[1]);\n\n        // find the supports from bodyA that are inside bodyB\n        if (supports.length < 2) {\n            var verticesA = SAT._findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n                \n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                supports.push(verticesA[0]);\n\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\n                supports.push(verticesA[1]);\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supports.length < 1)\n            supports = [verticesB[0]];\n        \n        collision.supports = supports;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {} verticesA\n     * @param {} verticesB\n     * @param {} axes\n     * @return result\n     */\n    SAT._overlapAxes = function(verticesA, verticesB, axes) {\n        var projectionA = Vector._temp[0], \n            projectionB = Vector._temp[1],\n            result = { overlap: Number.MAX_VALUE },\n            overlap,\n            axis;\n\n        for (var i = 0; i < axes.length; i++) {\n            axis = axes[i];\n\n            SAT._projectToAxis(projectionA, verticesA, axis);\n            SAT._projectToAxis(projectionB, verticesB, axis);\n\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\n            if (overlap <= 0) {\n                result.overlap = overlap;\n                return result;\n            }\n\n            if (overlap < result.overlap) {\n                result.overlap = overlap;\n                result.axis = axis;\n                result.axisNumber = i;\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    SAT._projectToAxis = function(projection, vertices, axis) {\n        var min = Vector.dot(vertices[0], axis),\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = Vector.dot(vertices[i], axis);\n\n            if (dot > max) { \n                max = dot; \n            } else if (dot < min) { \n                min = dot; \n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n    \n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {} bodyA\n     * @param {} bodyB\n     * @param {} normal\n     * @return [vector]\n     */\n    SAT._findSupports = function(bodyA, bodyB, normal) {\n        var nearestDistance = Number.MAX_VALUE,\n            vertexToBody = Vector._temp[0],\n            vertices = bodyB.vertices,\n            bodyAPosition = bodyA.position,\n            distance,\n            vertex,\n            vertexA,\n            vertexB;\n\n        // find closest vertex on bodyB\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            vertexToBody.x = vertex.x - bodyAPosition.x;\n            vertexToBody.y = vertex.y - bodyAPosition.y;\n            distance = -Vector.dot(normal, vertexToBody);\n\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertex;\n            }\n        }\n\n        // find next closest vertex using the two connected to it\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n        vertex = vertices[prevIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        nearestDistance = -Vector.dot(normal, vertexToBody);\n        vertexB = vertex;\n\n        var nextIndex = (vertexA.index + 1) % vertices.length;\n        vertex = vertices[nextIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        distance = -Vector.dot(normal, vertexToBody);\n        if (distance < nearestDistance) {\n            vertexB = vertex;\n        }\n\n        return [vertexA, vertexB];\n    };\n\n})();\n\n},{\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],12:[function(_dereq_,module,exports){\n/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    Constraint._warming = 0.4;\n    Constraint._torqueDampen = 1;\n    Constraint._minLength = 0.000001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n    \n        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n        constraint.damping = constraint.damping || 0;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n        constraint.plugin = {};\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#ffffff',\n            type: 'line',\n            anchors: true\n        };\n\n        if (constraint.length === 0 && constraint.stiffness > 0.1) {\n            render.type = 'pin';\n            render.anchors = false;\n        } else if (constraint.stiffness < 0.9) {\n            render.type = 'spring';\n        }\n\n        constraint.render = Common.extend(render, constraint.render);\n\n        return constraint;\n    };\n\n    /**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.preSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            body.position.x += impulse.x;\n            body.position.y += impulse.y;\n            body.angle += impulse.angle;\n        }\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n    Constraint.solveAll = function(constraints, timeScale) {\n        // Solve fixed constraints first.\n        for (var i = 0; i < constraints.length; i += 1) {\n            var constraint = constraints[i],\n                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (fixedA || fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n\n        // Solve free constraints last.\n        for (i = 0; i < constraints.length; i += 1) {\n            constraint = constraints[i];\n            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\n            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (!fixedA && !fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        if (!bodyA && !bodyB)\n            return;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n            constraint.angleA = bodyA.angle;\n        }\n        \n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength < Constraint._minLength) {\n            currentLength = Constraint._minLength;\n        }\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            stiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n            force = Vector.mult(delta, difference * stiffness),\n            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n            resistanceTotal = massTotal + inertiaTotal,\n            torque,\n            share,\n            normal,\n            normalVelocity,\n            relativeVelocity;\n\n        if (constraint.damping) {\n            var zero = Vector.create();\n            normal = Vector.div(delta, currentLength);\n\n            relativeVelocity = Vector.sub(\n                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n            );\n\n            normalVelocity = Vector.dot(normal, relativeVelocity);\n        }\n\n        if (bodyA && !bodyA.isStatic) {\n            share = bodyA.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x * share;\n            bodyA.constraintImpulse.y -= force.y * share;\n\n            // apply forces\n            bodyA.position.x -= force.x * share;\n            bodyA.position.y -= force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share;\n                bodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n            bodyA.constraintImpulse.angle -= torque;\n            bodyA.angle -= torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            share = bodyB.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x * share;\n            bodyB.constraintImpulse.y += force.y * share;\n            \n            // apply forces\n            bodyB.position.x += force.x * share;\n            bodyB.position.y += force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share;\n                bodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n            bodyB.constraintImpulse.angle += torque;\n            bodyB.angle += torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n                \n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            // dampen the cached impulse for warming next step\n            impulse.angle *= Constraint._warming;\n            impulse.x *= Constraint._warming;\n            impulse.y *= Constraint._warming;\n        }\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the constraint rendering type. \n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n    /**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the damping of the constraint, \n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint. \n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],13:[function(_dereq_,module,exports){\n/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Mouse = _dereq_('../core/Mouse');\nvar Events = _dereq_('../core/Events');\nvar Detector = _dereq_('../collision/Detector');\nvar Constraint = _dereq_('./Constraint');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n            }\n        }\n\n        var constraint = Constraint.create({ \n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01, \n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'beforeUpdate', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            MouseConstraint._triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position) \n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    MouseConstraint._triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Detector\":5,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../core/Sleeping\":22,\"../geometry/Bounds\":26,\"../geometry/Vertices\":29,\"./Constraint\":12}],14:[function(_dereq_,module,exports){\n(function (global){\n/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._nextId = 0;\n    Common._seed = 0;\n    Common._nowStartTime = +(new Date());\n\n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        for (var i = argsStart; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n        \n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n        \n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n        \n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n    Common.get = function(obj, path, begin, end) {\n        path = path.split('.').slice(begin, end);\n\n        for (var i = 0; i < path.length; i += 1) {\n            obj = obj[path[i]];\n        }\n\n        return obj;\n    };\n\n    /**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n    Common.set = function(obj, path, val, begin, end) {\n        var parts = path.split('.').slice(begin, end);\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n        return val;\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        if (typeof HTMLElement !== 'undefined') {\n            return obj instanceof HTMLElement;\n        }\n\n        return !!(obj && obj.nodeType && obj.nodeName);\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    /**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n    Common.isFunction = function(obj) {\n        return typeof obj === \"function\";\n    };\n\n    /**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n    Common.isPlainObject = function(obj) {\n        return typeof obj === 'object' && obj.constructor === Object;\n    };\n\n    /**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n    Common.isString = function(obj) {\n        return toString.call(obj) === '[object String]';\n    };\n    \n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n    \n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n    \n    /**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result will be high-resolution including decimal places if available.\n     * @method now\n     * @return {number} the current timestamp\n     */\n    Common.now = function() {\n        if (window.performance) {\n            if (window.performance.now) {\n                return window.performance.now();\n            } else if (window.performance.webkitNow) {\n                return window.performance.webkitNow();\n            }\n        }\n\n        return (new Date()) - Common._nowStartTime;\n    };\n    \n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    var _seededRandom = function() {\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.  \n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @property Common.logLevel\n     * @type {Number}\n     * @default 1\n     */\n    Common.logLevel = 1;\n\n    /**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n    Common.log = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n    Common.info = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n    Common.warn = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    /**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n    Common.map = function(list, func) {\n        if (list.map) {\n            return list.map(func);\n        }\n\n        var mapped = [];\n\n        for (var i = 0; i < list.length; i += 1) {\n            mapped.push(func(list[i]));\n        }\n\n        return mapped;\n    };\n\n    /**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n    Common.topologicalSort = function(graph) {\n        // https://github.com/mgechev/javascript-algorithms\n        // Copyright (c) Minko Gechev (MIT license)\n        // Modifications: tidy formatting and naming\n        var result = [],\n            visited = [],\n            temp = [];\n\n        for (var node in graph) {\n            if (!visited[node] && !temp[node]) {\n                Common._topologicalSort(node, visited, temp, graph, result);\n            }\n        }\n\n        return result;\n    };\n\n    Common._topologicalSort = function(node, visited, temp, graph, result) {\n        var neighbors = graph[node] || [];\n        temp[node] = true;\n\n        for (var i = 0; i < neighbors.length; i += 1) {\n            var neighbor = neighbors[i];\n\n            if (temp[neighbor]) {\n                // skip circular dependencies\n                continue;\n            }\n\n            if (!visited[neighbor]) {\n                Common._topologicalSort(neighbor, visited, temp, graph, result);\n            }\n        }\n\n        temp[node] = false;\n        visited[node] = true;\n\n        result.push(node);\n    };\n\n    /**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n    Common.chain = function() {\n        var funcs = [];\n\n        for (var i = 0; i < arguments.length; i += 1) {\n            var func = arguments[i];\n\n            if (func._chained) {\n                // flatten already chained functions\n                funcs.push.apply(funcs, func._chained);\n            } else {\n                funcs.push(func);\n            }\n        }\n\n        var chain = function() {\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n            var lastResult,\n                args = new Array(arguments.length);\n\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                args[i] = arguments[i];\n            }\n\n            for (i = 0; i < funcs.length; i += 1) {\n                var result = funcs[i].apply(lastResult, args);\n\n                if (typeof result !== 'undefined') {\n                    lastResult = result;\n                }\n            }\n\n            return lastResult;\n        };\n\n        chain._chained = funcs;\n\n        return chain;\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathBefore = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            func,\n            Common.get(base, path)\n        ));\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathAfter = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            Common.get(base, path),\n            func\n        ));\n    };\n\n    /**\n     * Used to require external libraries outside of the bundle.\n     * It first looks for the `globalName` on the environment's global namespace.\n     * If the global is not found, it will fall back to using the standard `require` using the `moduleName`.\n     * @private\n     * @method _requireGlobal\n     * @param {string} globalName The global module name\n     * @param {string} moduleName The fallback CommonJS module name\n     * @return {} The loaded module\n     */\n    Common._requireGlobal = function(globalName, moduleName) {\n        var obj = (typeof window !== 'undefined' ? window[globalName] : typeof global !== 'undefined' ? global[globalName] : null);\n        return obj || _dereq_(moduleName);\n    };\n})();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],15:[function(_dereq_,module,exports){\n/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar World = _dereq_('../body/World');\nvar Sleeping = _dereq_('./Sleeping');\nvar Resolver = _dereq_('../collision/Resolver');\nvar Render = _dereq_('../render/Render');\nvar Pairs = _dereq_('../collision/Pairs');\nvar Metrics = _dereq_('./Metrics');\nvar Grid = _dereq_('../collision/Grid');\nvar Events = _dereq_('./Events');\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('./Common');\nvar Body = _dereq_('../body/Body');\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(element, options) {\n        // options may be passed as the first (and only) argument\n        options = Common.isElement(element) ? options : element;\n        element = Common.isElement(element) ? element : null;\n        options = options || {};\n\n        if (element || options.render) {\n            Common.warn('Engine.create: engine.render is deprecated (see docs)');\n        }\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            plugin: {},\n            timing: {\n                timestamp: 0,\n                timeScale: 1\n            },\n            broadphase: {\n                controller: Grid\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        // @deprecated\n        if (element || engine.render) {\n            var renderDefaults = {\n                element: element,\n                controller: Render\n            };\n            \n            engine.render = Common.extend(renderDefaults, engine.render);\n        }\n\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            engine.render = engine.render.controller.create(engine.render);\n        }\n\n        // @deprecated\n        if (engine.render) {\n            engine.render.engine = engine;\n        }\n\n        engine.world = options.world || World.create(engine.world);\n        engine.pairs = Pairs.create();\n        engine.broadphase = engine.broadphase.controller.create(engine.broadphase);\n        engine.metrics = engine.metrics || { extended: false };\n\n\n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n    Engine.update = function(engine, delta, correction) {\n        delta = delta || 1000 / 60;\n        correction = correction || 1;\n\n        var world = engine.world,\n            timing = engine.timing,\n            broadphase = engine.broadphase,\n            broadphasePairs = [],\n            i;\n\n        // increment timestamp\n        timing.timestamp += delta * timing.timeScale;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get lists of all bodies and constraints, no matter what composites they are in\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n\n        // if sleeping enabled, call the sleeping controller\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, timing.timeScale);\n\n        // applies gravity to all bodies\n        Engine._bodiesApplyGravity(allBodies, world.gravity);\n\n        // update all body position and rotation by integration\n        Engine._bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n        // update all constraints (first pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // broadphase pass: find potential collision pairs\n        if (broadphase.controller) {\n            // if world is dirty, we must flush the whole grid\n            if (world.isModified)\n                broadphase.controller.clear(broadphase);\n\n            // update the grid buckets based on current bodies\n            broadphase.controller.update(broadphase, allBodies, engine, world.isModified);\n            broadphasePairs = broadphase.pairsList;\n        } else {\n            // if no broadphase set, we just pass all bodies\n            broadphasePairs = allBodies;\n        }\n\n        // clear all composite modified flags\n        if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n        }\n\n        // narrowphase pass: find actual collisions, then create or update collision pairs\n        var collisions = broadphase.detector(broadphasePairs, engine);\n\n        // update collision pairs\n        var pairs = engine.pairs,\n            timestamp = timing.timestamp;\n        Pairs.update(pairs, collisions, timestamp);\n        Pairs.removeOld(pairs, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // update all constraints (second pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n        }\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n\n        // clear force buffers\n        Engine._bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        return engine;\n    };\n    \n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n        \n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine including the world, pairs and broadphase.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        var world = engine.world;\n        \n        Pairs.clear(engine.pairs);\n\n        var broadphase = engine.broadphase;\n        if (broadphase.controller) {\n            var bodies = Composite.allBodies(world);\n            broadphase.controller.clear(broadphase);\n            broadphase.controller.update(broadphase, bodies, engine, true);\n        }\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method _bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    Engine._bodiesClearForces = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applys a mass dependant force to all given bodies.\n     * @method _bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    Engine._bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n        \n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // apply gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applys `Body.update` to all given `bodies`.\n     * @method _bodiesUpdate\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime \n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction \n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n    Engine._bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, deltaTime, timeScale, correction);\n        }\n    };\n\n    /**\n     * An alias for `Runner.run`, see `Matter.Runner` for more information.\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine. \n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \n     * It is incremented on every `Engine.update` by the given `delta` argument. \n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\n     * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\n     *\n     * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\n     * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\n     *\n     * @property render\n     * @type render\n     * @deprecated see Demo.js for an example of creating a renderer\n     * @default a Matter.Render instance\n     */\n\n    /**\n     * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\n     *\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * A `World` composite object that will contain all simulated bodies and constraints.\n     *\n     * @property world\n     * @type world\n     * @default a Matter.World instance\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Grid\":6,\"../collision/Pairs\":8,\"../collision/Resolver\":10,\"../constraint/Constraint\":12,\"../render/Render\":31,\"./Common\":14,\"./Events\":16,\"./Metrics\":18,\"./Sleeping\":22}],16:[function(_dereq_,module,exports){\n/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        if (object.events) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = object.events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"./Common\":14}],17:[function(_dereq_,module,exports){\n/**\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\n*\n* @class Matter\n*/\n\nvar Matter = {};\n\nmodule.exports = Matter;\n\nvar Plugin = _dereq_('./Plugin');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * The library name.\n     * @property name\n     * @readOnly\n     * @type {String}\n     */\n    Matter.name = 'matter-js';\n\n    /**\n     * The library version.\n     * @property version\n     * @readOnly\n     * @type {String}\n     */\n    Matter.version = '0.14.2';\n\n    /**\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\n     * @property uses\n     * @type {Array}\n     */\n    Matter.uses = [];\n\n    /**\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\n     * @property used\n     * @readOnly\n     * @type {Array}\n     */\n    Matter.used = [];\n\n    /**\n     * Installs the given plugins on the `Matter` namespace.\n     * This is a short-hand for `Plugin.use`, see it for more information.\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\n     * @method use\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\n     */\n    Matter.use = function() {\n        Plugin.use(Matter, Array.prototype.slice.call(arguments));\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method before\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.before = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathBefore(Matter, path, func);\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method after\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.after = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathAfter(Matter, path, func);\n    };\n\n})();\n\n},{\"./Common\":14,\"./Plugin\":20}],18:[function(_dereq_,module,exports){\n\n},{\"../body/Composite\":2,\"./Common\":14}],19:[function(_dereq_,module,exports){\n/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n        \n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = mouse.element.getAttribute('data-pixel-ratio') || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n        \n        mouse.mousemove = function(event) { \n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n        \n        mouse.mousedown = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n        \n        mouse.mouseup = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n            \n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n        \n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n    \n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    Mouse._getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n        \n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return { \n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n        };\n    };\n\n})();\n\n},{\"../core/Common\":14}],20:[function(_dereq_,module,exports){\n/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\nvar Plugin = {};\n\nmodule.exports = Plugin;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    Plugin._registry = {};\n\n    /**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n    Plugin.register = function(plugin) {\n        if (!Plugin.isPlugin(plugin)) {\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n        }\n\n        if (plugin.name in Plugin._registry) {\n            var registered = Plugin._registry[plugin.name],\n                pluginVersion = Plugin.versionParse(plugin.version).number,\n                registeredVersion = Plugin.versionParse(registered.version).number;\n\n            if (pluginVersion > registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n                Plugin._registry[plugin.name] = plugin;\n            } else if (pluginVersion < registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n            } else if (plugin !== registered) {\n                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n            }\n        } else {\n            Plugin._registry[plugin.name] = plugin;\n        }\n\n        return plugin;\n    };\n\n    /**\n     * Resolves a dependency to a plugin object from the registry if it exists. \n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n    Plugin.resolve = function(dependency) {\n        return Plugin._registry[Plugin.dependencyParse(dependency).name];\n    };\n\n    /**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n    Plugin.toString = function(plugin) {\n        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n    };\n\n    /**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n    Plugin.isPlugin = function(obj) {\n        return obj && obj.name && obj.version && obj.install;\n    };\n\n    /**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n    Plugin.isUsed = function(module, name) {\n        return module.used.indexOf(name) > -1;\n    };\n\n    /**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n    Plugin.isFor = function(plugin, module) {\n        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\n    };\n\n    /**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick ✅ indicates a dependency was resolved and installed.\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross ❌ indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n    Plugin.use = function(module, plugins) {\n        module.uses = (module.uses || []).concat(plugins || []);\n\n        if (module.uses.length === 0) {\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n            return;\n        }\n\n        var dependencies = Plugin.dependencies(module),\n            sortedDependencies = Common.topologicalSort(dependencies),\n            status = [];\n\n        for (var i = 0; i < sortedDependencies.length; i += 1) {\n            if (sortedDependencies[i] === module.name) {\n                continue;\n            }\n\n            var plugin = Plugin.resolve(sortedDependencies[i]);\n\n            if (!plugin) {\n                status.push('❌ ' + sortedDependencies[i]);\n                continue;\n            }\n\n            if (Plugin.isUsed(module, plugin.name)) {\n                continue;\n            }\n\n            if (!Plugin.isFor(plugin, module)) {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\n                plugin._warned = true;\n            }\n\n            if (plugin.install) {\n                plugin.install(module);\n            } else {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n                plugin._warned = true;\n            }\n\n            if (plugin._warned) {\n                status.push('🔶 ' + Plugin.toString(plugin));\n                delete plugin._warned;\n            } else {\n                status.push('✅ ' + Plugin.toString(plugin));\n            }\n\n            module.used.push(plugin.name);\n        }\n\n        if (status.length > 0) {\n            Common.info(status.join('  '));\n        }\n    };\n\n    /**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n    Plugin.dependencies = function(module, tracked) {\n        var parsedBase = Plugin.dependencyParse(module),\n            name = parsedBase.name;\n\n        tracked = tracked || {};\n\n        if (name in tracked) {\n            return;\n        }\n\n        module = Plugin.resolve(module) || module;\n\n        tracked[name] = Common.map(module.uses || [], function(dependency) {\n            if (Plugin.isPlugin(dependency)) {\n                Plugin.register(dependency);\n            }\n\n            var parsed = Plugin.dependencyParse(dependency),\n                resolved = Plugin.resolve(dependency);\n\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\n                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\n                );\n\n                resolved._warned = true;\n                module._warned = true;\n            } else if (!resolved) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\n                    Plugin.toString(parsedBase), 'could not be resolved.'\n                );\n\n                module._warned = true;\n            }\n\n            return parsed.name;\n        });\n\n        for (var i = 0; i < tracked[name].length; i += 1) {\n            Plugin.dependencies(tracked[name][i], tracked);\n        }\n\n        return tracked;\n    };\n\n    /**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n    Plugin.dependencyParse = function(dependency) {\n        if (Common.isString(dependency)) {\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\n\n            if (!pattern.test(dependency)) {\n                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n            }\n\n            return {\n                name: dependency.split('@')[0],\n                range: dependency.split('@')[1] || '*'\n            };\n        }\n\n        return {\n            name: dependency.name,\n            range: dependency.range || dependency.version\n        };\n    };\n\n    /**\n     * Parses a version string into its components.  \n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n    Plugin.versionParse = function(range) {\n        var pattern = /^\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?$/;\n\n        if (!pattern.test(range)) {\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n        }\n\n        var identifiers = range.split('-');\n        range = identifiers[0];\n\n        var isRange = isNaN(Number(range[0])),\n            version = isRange ? range.substr(1) : range,\n            parts = Common.map(version.split('.'), function(part) {\n                return Number(part);\n            });\n\n        return {\n            isRange: isRange,\n            version: version,\n            range: range,\n            operator: isRange ? range[0] : '',\n            parts: parts,\n            prerelease: identifiers[1],\n            number: parts[0] * 1e8 + parts[1] * 1e4 + parts[2]\n        };\n    };\n\n    /**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n    Plugin.versionSatisfies = function(version, range) {\n        range = range || '*';\n\n        var rangeParsed = Plugin.versionParse(range),\n            rangeParts = rangeParsed.parts,\n            versionParsed = Plugin.versionParse(version),\n            versionParts = versionParsed.parts;\n\n        if (rangeParsed.isRange) {\n            if (rangeParsed.operator === '*' || version === '*') {\n                return true;\n            }\n\n            if (rangeParsed.operator === '~') {\n                return versionParts[0] === rangeParts[0] && versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n            }\n\n            if (rangeParsed.operator === '^') {\n                if (rangeParts[0] > 0) {\n                    return versionParts[0] === rangeParts[0] && versionParsed.number >= rangeParsed.number;\n                }\n\n                if (rangeParts[1] > 0) {\n                    return versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n                }\n\n                return versionParts[2] === rangeParts[2];\n            }\n        }\n\n        return version === range || version === '*';\n    };\n\n})();\n\n},{\"./Common\":14}],21:[function(_dereq_,module,exports){\n/**\n* The `Matter.Runner` module is an optional utility which provides a game loop, \n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = _dereq_('./Events');\nvar Engine = _dereq_('./Engine');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    if (!_requestAnimationFrame) {\n        var _frameTimeout;\n\n        _requestAnimationFrame = function(callback){ \n            _frameTimeout = setTimeout(function() { \n                callback(Common.now()); \n            }, 1000 / 60);\n        };\n\n        _cancelAnimationFrame = function() {\n            clearTimeout(_frameTimeout);\n        };\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function render(time){\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Triggers `beforeTick`, `tick` and `afterTick` events on the engine.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            correction = 1,\n            delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n        Events.trigger(engine, 'beforeTick', event); // @deprecated\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n            \n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // correction for delta\n            correction = delta / runner.delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // time correction for time scaling\n        if (runner.timeScalePrev !== 0)\n            correction *= timing.timeScale / runner.timeScalePrev;\n\n        if (timing.timeScale === 0)\n            correction = 0;\n\n        runner.timeScalePrev = timing.timeScale;\n        runner.correction = correction;\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n        Events.trigger(engine, 'tick', event); // @deprecated\n\n        // if world has been modified, clear the render scene graph\n        if (engine.world.isModified \n            && engine.render\n            && engine.render.controller\n            && engine.render.controller.clear) {\n            engine.render.controller.clear(engine.render); // @deprecated\n        }\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n        Engine.update(engine, delta, correction);\n        Events.trigger(runner, 'afterUpdate', event);\n\n        // render\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            Events.trigger(runner, 'beforeRender', event);\n            Events.trigger(engine, 'beforeRender', event); // @deprecated\n\n            engine.render.controller.world(engine.render);\n\n            Events.trigger(runner, 'afterRender', event);\n            Events.trigger(engine, 'afterRender', event); // @deprecated\n        }\n\n        Events.trigger(runner, 'afterTick', event);\n        Events.trigger(engine, 'afterTick', event); // @deprecated\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n\n},{\"./Common\":14,\"./Engine\":15,\"./Events\":16}],22:[function(_dereq_,module,exports){\n/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Events = _dereq_('./Events');\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n    Sleeping.update = function(bodies, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n        \n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n            \n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n                body.sleepCounter += 1;\n                \n                if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Sleeping.afterCollisions = function(pairs, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent, \n                bodyB = collision.bodyB.parent;\n        \n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n        \n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n  \n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n},{\"./Events\":16}],23:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models \n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Vector = _dereq_('../geometry/Vector');\nvar decomp;\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = { \n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n    \n    /**\n     * Creates a new rigid body model with a trapezoid hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n        \n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = { \n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n        \n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = { \n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Creates a body using the supplied vertices (or an array containing multiple sets of vertices).\n     * If the vertices are convex, they will pass through as supplied.\n     * Otherwise if the vertices are concave, they will be decomposed if [poly-decomp.js](https://github.com/schteppe/poly-decomp.js) is available.\n     * Note that this process is not guaranteed to support complex sets of vertices (e.g. those with holes may fail).\n     * By default the decomposition will discard collinear edges (to improve performance).\n     * It can also optionally discard any parts that have an area less than `minimumArea`.\n     * If the vertices can not be decomposed, the result will fall back to using the convex hull.\n     * The options parameter is an object that specifies any `Matter.Body` properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param [[vector]] vertexSets\n     * @param {object} [options]\n     * @param {bool} [flagInternal=false]\n     * @param {number} [removeCollinear=0.01]\n     * @param {number} [minimumArea=10]\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea) {\n        if (!decomp) {\n            decomp = Common._requireGlobal('decomp', 'poly-decomp');\n        }\n\n        var body,\n            parts,\n            isConvex,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n\n        if (!decomp) {\n            Common.warn('Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull.');\n        }\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n\n            if (isConvex || !decomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                });\n\n                // vertices are concave and simple, we can decompose into parts\n                decomp.makeCCW(concave);\n                if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = decomp.quickDecomp(concave);\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                        return {\n                            x: vertices[0],\n                            y: vertices[1]\n                        };\n                    });\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],24:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bodies = _dereq_('./Bodies');\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n            \n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n                    \n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n                    \n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n                    \n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n            \n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n    \n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n        \n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n        \n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n            \n            var constraint = Common.extend(defaults, options);\n        \n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n        \n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n        \n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n        \n        return composite;\n    };\n    \n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n            \n            if (row > actualRows)\n                return;\n            \n            // reverse row order\n            row = actualRows - row;\n            \n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n            \n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n            \n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * Creates a composite with a Newton's Cradle setup of bodies and constraints.\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, \n                            { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n    \n    /**\n     * Creates a composite with simple car setup of bodies and constraints.\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = 20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n    \n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.rectangle(xx, yy, width, height, { \n                collisionFilter: {\n                    group: group\n                },\n                chamfer: {\n                    radius: height * 0.5\n                },\n                density: 0.0002\n            });\n    \n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var axelA = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelAOffset, y: wheelYOffset },\n            bodyA: wheelA,\n            stiffness: 1,\n            length: 0\n        });\n                        \n        var axelB = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelBOffset, y: wheelYOffset },\n            bodyA: wheelB,\n            stiffness: 1,\n            length: 0\n        });\n        \n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    /**\n     * Creates a simple soft body like object.\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Bodies\":23}],25:[function(_dereq_,module,exports){\n/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length, \n                normal = Vector.normalise({ \n                    x: vertices[j].y - vertices[i].y, \n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n            \n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n        \n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],26:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = { \n            min: { x: 0, y: 0 }, \n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n        \n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n        \n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n            \n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x \n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n            \n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n    \n})();\n\n},{}],27:[function(_dereq_,module,exports){\n/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * You must load the `pathseg.js` polyfill on newer browsers.\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        if (typeof window !== 'undefined' && !('SVGPathSeg' in window)) {\n            Common.warn('Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.');\n        }\n\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments, \n            segmentsQueue, lastSegment, \n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z') \n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        Svg._svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    Svg._svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        // Copyright (c) Gavin Kistner\n        // http://phrogz.net/js/_ReuseLicense.txt\n        // Modifications: tidy formatting and naming\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n},{\"../core/Common\":14,\"../geometry/Bounds\":26}],28:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = vector.x * cos - vector.y * sin;\n        output.y = vector.x * sin + vector.y * cos;\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [\n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create()\n    ];\n\n})();\n},{}],29:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        var i;\n        if (scalar) {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x * scalar;\n                vertices[i].y += vector.y * scalar;\n            }\n        } else {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x;\n                vertices[i].y += vector.y;\n            }\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                dx = vertice.x - point.x,\n                dy = vertice.y - point.y;\n                \n            vertice.x = point.x + (dx * cos - dy * sin);\n            vertice.y = point.y + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                nextVertice = vertices[(i + 1) % vertices.length];\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        if (typeof radius === 'number') {\n            radius = [radius];\n        } else {\n            radius = radius || [8];\n        }\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({ \n                x: vertex.y - prevVertex.y, \n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({ \n                x: nextVertex.y - vertex.y, \n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n        // Copyright (c) Paul Bourke (use permitted)\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://geomalgorithms.com/a10-_hull-1.html\n\n        var upper = [],\n            lower = [], \n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i += 1) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2 \n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2 \n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],30:[function(_dereq_,module,exports){\nvar Matter = module.exports = _dereq_('../core/Matter');\n\nMatter.Body = _dereq_('../body/Body');\nMatter.Composite = _dereq_('../body/Composite');\nMatter.World = _dereq_('../body/World');\n\nMatter.Contact = _dereq_('../collision/Contact');\nMatter.Detector = _dereq_('../collision/Detector');\nMatter.Grid = _dereq_('../collision/Grid');\nMatter.Pairs = _dereq_('../collision/Pairs');\nMatter.Pair = _dereq_('../collision/Pair');\nMatter.Query = _dereq_('../collision/Query');\nMatter.Resolver = _dereq_('../collision/Resolver');\nMatter.SAT = _dereq_('../collision/SAT');\n\nMatter.Constraint = _dereq_('../constraint/Constraint');\nMatter.MouseConstraint = _dereq_('../constraint/MouseConstraint');\n\nMatter.Common = _dereq_('../core/Common');\nMatter.Engine = _dereq_('../core/Engine');\nMatter.Events = _dereq_('../core/Events');\nMatter.Mouse = _dereq_('../core/Mouse');\nMatter.Runner = _dereq_('../core/Runner');\nMatter.Sleeping = _dereq_('../core/Sleeping');\nMatter.Plugin = _dereq_('../core/Plugin');\n\n\nMatter.Bodies = _dereq_('../factory/Bodies');\nMatter.Composites = _dereq_('../factory/Composites');\n\nMatter.Axes = _dereq_('../geometry/Axes');\nMatter.Bounds = _dereq_('../geometry/Bounds');\nMatter.Svg = _dereq_('../geometry/Svg');\nMatter.Vector = _dereq_('../geometry/Vector');\nMatter.Vertices = _dereq_('../geometry/Vertices');\n\nMatter.Render = _dereq_('../render/Render');\nMatter.RenderPixi = _dereq_('../render/RenderPixi');\n\n// aliases\n\nMatter.World.add = Matter.Composite.add;\nMatter.World.remove = Matter.Composite.remove;\nMatter.World.addComposite = Matter.Composite.addComposite;\nMatter.World.addBody = Matter.Composite.addBody;\nMatter.World.addConstraint = Matter.Composite.addConstraint;\nMatter.World.clear = Matter.Composite.clear;\nMatter.Engine.run = Matter.Runner.run;\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Contact\":4,\"../collision/Detector\":5,\"../collision/Grid\":6,\"../collision/Pair\":7,\"../collision/Pairs\":8,\"../collision/Query\":9,\"../collision/Resolver\":10,\"../collision/SAT\":11,\"../constraint/Constraint\":12,\"../constraint/MouseConstraint\":13,\"../core/Common\":14,\"../core/Engine\":15,\"../core/Events\":16,\"../core/Matter\":17,\"../core/Metrics\":18,\"../core/Mouse\":19,\"../core/Plugin\":20,\"../core/Runner\":21,\"../core/Sleeping\":22,\"../factory/Bodies\":23,\"../factory/Composites\":24,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Svg\":27,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31,\"../render/RenderPixi\":32}],31:[function(_dereq_,module,exports){\n/**\n* The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Common = _dereq_('../core/Common');\nvar Composite = _dereq_('../body/Composite');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Events = _dereq_('../core/Events');\nvar Grid = _dereq_('../collision/Grid');\nvar Vector = _dereq_('../geometry/Vector');\nvar Mouse = _dereq_('../core/Mouse');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#18181d',\n                wireframeBackground: '#0f0f13',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else if (!render.canvas.parentNode) {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            Render.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n        render.context.scale(pixelRatio, pixelRatio);\n    };\n\n    /**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n    Render.lookAt = function(render, objects, padding, center) {\n        center = typeof center !== 'undefined' ? center : true;\n        objects = Common.isArray(objects) ? objects : [objects];\n        padding = padding || {\n            x: 0,\n            y: 0\n        };\n\n        // find bounds of all objects\n        var bounds = {\n            min: { x: Infinity, y: Infinity },\n            max: { x: -Infinity, y: -Infinity }\n        };\n\n        for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\n            if (min && max) {\n                if (min.x < bounds.min.x)\n                    bounds.min.x = min.x;\n\n                if (max.x > bounds.max.x)\n                    bounds.max.x = max.x;\n\n                if (min.y < bounds.min.y)\n                    bounds.min.y = min.y;\n\n                if (max.y > bounds.max.y)\n                    bounds.max.y = max.y;\n            }\n        }\n\n        // find ratios\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n            viewHeight = render.canvas.height,\n            viewWidth = render.canvas.width,\n            outerRatio = viewWidth / viewHeight,\n            innerRatio = width / height,\n            scaleX = 1,\n            scaleY = 1;\n\n        // find scale factor\n        if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n        } else {\n            scaleX = outerRatio / innerRatio;\n        }\n\n        // enable bounds\n        render.options.hasBounds = true;\n\n        // position and size\n        render.bounds.min.x = bounds.min.x;\n        render.bounds.max.x = bounds.min.x + width * scaleX;\n        render.bounds.min.y = bounds.min.y;\n        render.bounds.max.y = bounds.min.y + height * scaleY;\n\n        // center\n        if (center) {\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n        }\n\n        // padding\n        render.bounds.min.x -= padding.x;\n        render.bounds.max.x -= padding.x;\n        render.bounds.min.y -= padding.y;\n        render.bounds.max.y -= padding.y;\n\n        // update mouse\n        if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n\n            Mouse.setOffset(render.mouse, render.bounds.min);\n        }\n    };\n\n    /**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n    Render.startViewTransform = function(render) {\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        render.context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n    };\n\n    /**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n    Render.endViewTransform = function(render) {\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            Render.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.showBroadphase && engine.broadphase.controller === Grid)\n            Render.grid(render, engine.broadphase, context);\n\n        if (options.showDebug)\n            Render.debug(render, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            Render.endViewTransform(render);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method debug\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.debug = function(render, context) {\n        var c = context,\n            engine = render.engine,\n            world = engine.world,\n            metrics = engine.metrics,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            space = \"    \";\n\n        if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\n            var text = \"\";\n\n            if (metrics.timing) {\n                text += \"fps: \" + Math.round(metrics.timing.fps) + space;\n            }\n\n\n            render.debugString = text;\n            render.debugTimestamp = engine.timing.timestamp;\n        }\n\n        if (render.debugString) {\n            c.font = \"12px Arial\";\n\n            if (options.wireframes) {\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n            } else {\n                c.fillStyle = 'rgba(0,0,0,0.5)';\n            }\n\n            var split = render.debugString.split('\\n');\n\n            for (var i = 0; i < split.length; i++) {\n                c.fillText(split[i], 50, 50 + i * 18);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n                start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n                start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                } else {\n                    end = constraint.pointB;\n                }\n\n                c.beginPath();\n                c.moveTo(start.x, start.y);\n\n                if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                        normal = Vector.perp(Vector.normalise(delta)),\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                        offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                        offset = j % 2 === 0 ? 1 : -1;\n\n                        c.lineTo(\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n                        );\n                    }\n                }\n\n                c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n                c.lineWidth = constraint.render.lineWidth;\n                c.strokeStyle = constraint.render.strokeStyle;\n                c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n                c.fillStyle = constraint.render.strokeStyle;\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n                c.fill();\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodyShadows\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyShadows = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            if (body.circleRadius) {\n                c.beginPath();\n                c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                c.beginPath();\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\n                for (var j = 1; j < body.vertices.length; j++) {\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                }\n                c.closePath();\n            }\n\n            var distanceX = body.position.x - render.options.width * 0.5,\n                distanceY = body.position.y - render.options.height * 0.2,\n                distance = Math.abs(distanceX) + Math.abs(distanceY);\n\n            c.shadowColor = 'rgba(0,0,0,0.15)';\n            c.shadowOffsetX = 0.05 * distanceX;\n            c.shadowOffsetY = 0.05 * distanceY;\n            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\n            c.fill();\n\n            c.shadowColor = null;\n            c.shadowOffsetX = null;\n            c.shadowOffsetY = null;\n            c.shadowBlur = null;\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale,\n                        texture.height * -sprite.yOffset * sprite.yScale,\n                        texture.width * sprite.xScale,\n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n\n                        if (part.render.lineWidth) {\n                            c.lineWidth = part.render.lineWidth;\n                            c.strokeStyle = part.render.strokeStyle;\n                            c.stroke();\n                        }\n\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                        c.stroke();\n                    }\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n                                 (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n        } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n        }\n\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method grid\n     * @param {render} render\n     * @param {grid} grid\n     * @param {RenderingContext} context\n     */\n    Render.grid = function(render, grid, context) {\n        var c = context,\n            options = render.options;\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n        } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n        }\n\n        c.beginPath();\n\n        var bucketKeys = Common.keys(grid.buckets);\n\n        for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n\n            if (grid.buckets[bucketId].length < 2)\n                continue;\n\n            var region = bucketId.split(/C|R/);\n            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth,\n                    0.5 + parseInt(region[2], 10) * grid.bucketHeight,\n                    grid.bucketWidth,\n                    grid.bucketHeight);\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n                             Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n                         Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Description\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Grid\":6,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}],32:[function(_dereq_,module,exports){\n/**\n* The `Matter.RenderPixi` module is an example renderer using pixi.js.\n* See also `Matter.Render` for a canvas based renderer.\n*\n* @class RenderPixi\n* @deprecated the Matter.RenderPixi module will soon be removed from the Matter.js core.\n* It will likely be moved to its own repository (but maintenance will be limited).\n*/\n\nvar RenderPixi = {};\n\nmodule.exports = RenderPixi;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Events = _dereq_('../core/Events');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame \n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n    \n    /**\n     * Creates a new Pixi.js WebGL renderer\n     * @method create\n     * @param {object} options\n     * @return {RenderPixi} A new renderer\n     * @deprecated\n     */\n    RenderPixi.create = function(options) {\n        Common.warn('RenderPixi.create: Matter.RenderPixi is deprecated (see docs)');\n\n        var defaults = {\n            controller: RenderPixi,\n            engine: null,\n            element: null,\n            frameRequestId: null,\n            canvas: null,\n            renderer: null,\n            container: null,\n            spriteContainer: null,\n            pixiOptions: null,\n            options: {\n                width: 800,\n                height: 600,\n                background: '#fafafa',\n                wireframeBackground: '#222',\n                hasBounds: false,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false\n            }\n        };\n\n        var render = Common.extend(defaults, options),\n            transparent = !render.options.wireframes && render.options.background === 'transparent';\n\n        // init pixi\n        render.pixiOptions = render.pixiOptions || {\n            view: render.canvas,\n            transparent: transparent,\n            antialias: true,\n            backgroundColor: options.background\n        };\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.renderer = render.renderer || new PIXI.WebGLRenderer(render.options.width, render.options.height, render.pixiOptions);\n        render.container = render.container || new PIXI.Container();\n        render.spriteContainer = render.spriteContainer || new PIXI.Container();\n        render.canvas = render.canvas || render.renderer.view;\n        render.bounds = render.bounds || { \n            min: {\n                x: 0,\n                y: 0\n            }, \n            max: { \n                x: render.options.width,\n                y: render.options.height\n            }\n        };\n\n        // event listeners\n        Events.on(render.engine, 'beforeUpdate', function() {\n            RenderPixi.clear(render);\n        });\n\n        // caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // use a sprite batch for performance\n        render.container.addChild(render.spriteContainer);\n\n        // insert canvas\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.warn('No \"render.element\" passed, \"render.canvas\" was not inserted into document.');\n        }\n\n        // prevent menus on canvas\n        render.canvas.oncontextmenu = function() { return false; };\n        render.canvas.onselectstart = function() { return false; };\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            RenderPixi.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Clears the scene graph\n     * @method clear\n     * @param {RenderPixi} render\n     * @deprecated\n     */\n    RenderPixi.clear = function(render) {\n        var container = render.container,\n            spriteContainer = render.spriteContainer;\n\n        // clear stage container\n        while (container.children[0]) { \n            container.removeChild(container.children[0]); \n        }\n\n        // clear sprite batch\n        while (spriteContainer.children[0]) { \n            spriteContainer.removeChild(spriteContainer.children[0]); \n        }\n\n        var bgSprite = render.sprites['bg-0'];\n\n        // clear caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // set background sprite\n        render.sprites['bg-0'] = bgSprite;\n        if (bgSprite)\n            container.addChildAt(bgSprite, 0);\n\n        // add sprite batch back into container\n        render.container.addChild(render.spriteContainer);\n\n        // reset background state\n        render.currentBackground = null;\n\n        // reset bounds transforms\n        container.scale.set(1, 1);\n        container.position.set(0, 0);\n    };\n\n    /**\n     * Sets the background of the canvas \n     * @method setBackground\n     * @param {RenderPixi} render\n     * @param {string} background\n     * @deprecated\n     */\n    RenderPixi.setBackground = function(render, background) {\n        if (render.currentBackground !== background) {\n            var isColor = background.indexOf && background.indexOf('#') !== -1,\n                bgSprite = render.sprites['bg-0'];\n\n            if (isColor) {\n                // if solid background color\n                var color = Common.colorToNumber(background);\n                render.renderer.backgroundColor = color;\n\n                // remove background sprite if existing\n                if (bgSprite)\n                    render.container.removeChild(bgSprite); \n            } else {\n                // initialise background sprite if needed\n                if (!bgSprite) {\n                    var texture = _getTexture(render, background);\n\n                    bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(texture);\n                    bgSprite.position.x = 0;\n                    bgSprite.position.y = 0;\n                    render.container.addChildAt(bgSprite, 0);\n                }\n            }\n\n            render.currentBackground = background;\n        }\n    };\n\n    /**\n     * Description\n     * @method world\n     * @param {engine} engine\n     * @deprecated\n     */\n    RenderPixi.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            renderer = render.renderer,\n            container = render.container,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            constraints = [],\n            i;\n\n        if (options.wireframes) {\n            RenderPixi.setBackground(render, options.wireframeBackground);\n        } else {\n            RenderPixi.setBackground(render, options.background);\n        }\n\n        // handle bounds\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        if (options.hasBounds) {\n            // Hide bodies that are not in view\n            for (i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                body.render.sprite.visible = Bounds.overlaps(body.bounds, render.bounds);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\n            container.position.set(-render.bounds.min.x * (1 / boundsScaleX), -render.bounds.min.y * (1 / boundsScaleY));\n        } else {\n            constraints = allConstraints;\n        }\n\n        for (i = 0; i < bodies.length; i++)\n            RenderPixi.body(render, bodies[i]);\n\n        for (i = 0; i < constraints.length; i++)\n            RenderPixi.constraint(render, constraints[i]);\n\n        renderer.render(container);\n    };\n\n\n    /**\n     * Description\n     * @method constraint\n     * @param {engine} engine\n     * @param {constraint} constraint\n     * @deprecated\n     */\n    RenderPixi.constraint = function(render, constraint) {\n        var engine = render.engine,\n            bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB,\n            container = render.container,\n            constraintRender = constraint.render,\n            primitiveId = 'c-' + constraint.id,\n            primitive = render.primitives[primitiveId];\n\n        // initialise constraint primitive if not existing\n        if (!primitive)\n            primitive = render.primitives[primitiveId] = new PIXI.Graphics();\n\n        // don't render if constraint does not have two end points\n        if (!constraintRender.visible || !constraint.pointA || !constraint.pointB) {\n            primitive.clear();\n            return;\n        }\n\n        // add to scene graph if not already there\n        if (Common.indexOf(container.children, primitive) === -1)\n            container.addChild(primitive);\n\n        // render the constraint on every update, since they can change dynamically\n        primitive.clear();\n        primitive.beginFill(0, 0);\n        primitive.lineStyle(constraintRender.lineWidth, Common.colorToNumber(constraintRender.strokeStyle), 1);\n        \n        if (bodyA) {\n            primitive.moveTo(bodyA.position.x + pointA.x, bodyA.position.y + pointA.y);\n        } else {\n            primitive.moveTo(pointA.x, pointA.y);\n        }\n\n        if (bodyB) {\n            primitive.lineTo(bodyB.position.x + pointB.x, bodyB.position.y + pointB.y);\n        } else {\n            primitive.lineTo(pointB.x, pointB.y);\n        }\n\n        primitive.endFill();\n    };\n    \n    /**\n     * Description\n     * @method body\n     * @param {engine} engine\n     * @param {body} body\n     * @deprecated\n     */\n    RenderPixi.body = function(render, body) {\n        var engine = render.engine,\n            bodyRender = body.render;\n\n        if (!bodyRender.visible)\n            return;\n\n        if (bodyRender.sprite && bodyRender.sprite.texture) {\n            var spriteId = 'b-' + body.id,\n                sprite = render.sprites[spriteId],\n                spriteContainer = render.spriteContainer;\n\n            // initialise body sprite if not existing\n            if (!sprite)\n                sprite = render.sprites[spriteId] = _createBodySprite(render, body);\n\n            // add to scene graph if not already there\n            if (Common.indexOf(spriteContainer.children, sprite) === -1)\n                spriteContainer.addChild(sprite);\n\n            // update body sprite\n            sprite.position.x = body.position.x;\n            sprite.position.y = body.position.y;\n            sprite.rotation = body.angle;\n            sprite.scale.x = bodyRender.sprite.xScale || 1;\n            sprite.scale.y = bodyRender.sprite.yScale || 1;\n        } else {\n            var primitiveId = 'b-' + body.id,\n                primitive = render.primitives[primitiveId],\n                container = render.container;\n\n            // initialise body primitive if not existing\n            if (!primitive) {\n                primitive = render.primitives[primitiveId] = _createBodyPrimitive(render, body);\n                primitive.initialAngle = body.angle;\n            }\n\n            // add to scene graph if not already there\n            if (Common.indexOf(container.children, primitive) === -1)\n                container.addChild(primitive);\n\n            // update body primitive\n            primitive.position.x = body.position.x;\n            primitive.position.y = body.position.y;\n            primitive.rotation = body.angle - primitive.initialAngle;\n        }\n    };\n\n    /**\n     * Creates a body sprite\n     * @method _createBodySprite\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Sprite} sprite\n     * @deprecated\n     */\n    var _createBodySprite = function(render, body) {\n        var bodyRender = body.render,\n            texturePath = bodyRender.sprite.texture,\n            texture = _getTexture(render, texturePath),\n            sprite = new PIXI.Sprite(texture);\n\n        sprite.anchor.x = body.render.sprite.xOffset;\n        sprite.anchor.y = body.render.sprite.yOffset;\n\n        return sprite;\n    };\n\n    /**\n     * Creates a body primitive\n     * @method _createBodyPrimitive\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Graphics} graphics\n     * @deprecated\n     */\n    var _createBodyPrimitive = function(render, body) {\n        var bodyRender = body.render,\n            options = render.options,\n            primitive = new PIXI.Graphics(),\n            fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n            strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleIndicator = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleWireframe = Common.colorToNumber('#bbb'),\n            strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n            part;\n\n        primitive.clear();\n\n        // handle compound parts\n        for (var k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n            part = body.parts[k];\n\n            if (!options.wireframes) {\n                primitive.beginFill(fillStyle, 1);\n                primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n            } else {\n                primitive.beginFill(0, 0);\n                primitive.lineStyle(1, strokeStyleWireframe, 1);\n            }\n\n            primitive.moveTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            for (var j = 1; j < part.vertices.length; j++) {\n                primitive.lineTo(part.vertices[j].x - body.position.x, part.vertices[j].y - body.position.y);\n            }\n\n            primitive.lineTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            primitive.endFill();\n\n            // angle indicator\n            if (options.showAngleIndicator || options.showAxes) {\n                primitive.beginFill(0, 0);\n\n                if (options.wireframes) {\n                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n                } else {\n                    primitive.lineStyle(1, strokeStyleIndicator);\n                }\n\n                primitive.moveTo(part.position.x - body.position.x, part.position.y - body.position.y);\n                primitive.lineTo(((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2 - body.position.x), \n                                 ((part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2 - body.position.y));\n\n                primitive.endFill();\n            }\n        }\n\n        return primitive;\n    };\n\n    /**\n     * Gets the requested texture (a PIXI.Texture) via its path\n     * @method _getTexture\n     * @private\n     * @param {RenderPixi} render\n     * @param {string} imagePath\n     * @return {PIXI.Texture} texture\n     * @deprecated\n     */\n    var _getTexture = function(render, imagePath) {\n        var texture = render.textures[imagePath];\n\n        if (!texture)\n            texture = render.textures[imagePath] = PIXI.Texture.fromImage(imagePath);\n\n        return texture;\n    };\n\n})();\n\n},{\"../body/Composite\":2,\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}]},{},[30])(30)\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/matter-js/build/matter.js\n// module id = 1\n// module chunks = 0","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/index.js\n// module id = 2\n// module chunks = 0","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._45 = 0;\n  this._81 = 0;\n  this._65 = null;\n  this._54 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._10 = null;\nPromise._97 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._81 === 3) {\n    self = self._65;\n  }\n  if (Promise._10) {\n    Promise._10(self);\n  }\n  if (self._81 === 0) {\n    if (self._45 === 0) {\n      self._45 = 1;\n      self._54 = deferred;\n      return;\n    }\n    if (self._45 === 1) {\n      self._45 = 2;\n      self._54 = [self._54, deferred];\n      return;\n    }\n    self._54.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._81 === 1) {\n        resolve(deferred.promise, self._65);\n      } else {\n        reject(deferred.promise, self._65);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._65);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._81 = 3;\n      self._65 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._81 = 1;\n  self._65 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._81 = 2;\n  self._65 = newValue;\n  if (Promise._97) {\n    Promise._97(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._45 === 1) {\n    handle(self, self._54);\n    self._54 = null;\n  }\n  if (self._45 === 2) {\n    for (var i = 0; i < self._54.length; i++) {\n      handle(self, self._54[i]);\n    }\n    self._54 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Puzzles/RedBall/react/red-ball/~/promise/lib/core.js\n// module id = 3\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/object-assign/index.js\n// module id = 4\n// module chunks = 0","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Puzzles/RedBall/react/red-ball/~/asap/browser-raw.js\n// module id = 5\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._81 = 1;\n  p._65 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._81 === 3) {\n            val = val._65;\n          }\n          if (val._81 === 1) return res(i, val._65);\n          if (val._81 === 2) reject(val._65);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Puzzles/RedBall/react/red-ball/~/promise/lib/es6-extensions.js\n// module id = 9\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._10 = null;\n  Promise._97 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._10 = function (promise) {\n    if (\n      promise._81 === 2 && // IS REJECTED\n      rejections[promise._72]\n    ) {\n      if (rejections[promise._72].logged) {\n        onHandled(promise._72);\n      } else {\n        clearTimeout(rejections[promise._72].timeout);\n      }\n      delete rejections[promise._72];\n    }\n  };\n  Promise._97 = function (promise, err) {\n    if (promise._45 === 0) { // not yet handled\n      promise._72 = id++;\n      rejections[promise._72] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._72),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Puzzles/RedBall/react/red-ball/~/promise/lib/rejection-tracking.js\n// module id = 10\n// module chunks = 0","// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n// @remove-on-eject-end\n'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch');\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Puzzles/RedBall/react/red-ball/~/react-scripts/config/polyfills.js\n// module id = 11\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Puzzles/RedBall/react/red-ball/~/whatwg-fetch/fetch.js\n// module id = 12\n// module chunks = 0","import React, { Component } from 'react';\r\nimport Matter from 'matter-js';\r\nimport Ball from '../../matter/bodies/ball';\r\nimport Drag from '../../matter/constraints/drag';\r\nimport createRender from '../../matter/renderers/render';\r\nimport './app.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      engine: Matter.Engine.create()\r\n    }\r\n  }\r\n\r\n  setupWorld(canvas) {\r\n    //create ball\r\n    var ball = new Ball(canvas.width / 2, canvas.height / 2);\r\n    //create ground\r\n    var ground = Matter.Bodies.rectangle(0, 495, canvas.width * 2, 20, { isStatic: true, render: { fillStyle: '#222' } });\r\n    //create drag constraint\r\n    var dragConstraint = Drag(canvas, this.state.engine);\r\n\r\n    Matter.World.add(this.state.engine.world, [ball, ground, dragConstraint]);\r\n  }\r\n\r\n  run(renderer) {\r\n    Matter.Engine.run(this.state.engine);\r\n    Matter.Render.run(renderer);\r\n  }\r\n\r\n  componentDidMount() {\r\n    var canvas = document.getElementById(\"canvas\");\r\n    this.setupWorld(canvas);\r\n    var renderer = createRender(canvas, this.state.engine);\r\n    this.run(renderer);\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div>\r\n          <h2>Red Ball</h2>\r\n          <p>A small experiment with React and <a href=\"http://brm.io/matter-js/\">Matter.js</a></p>\r\n        </div>\r\n        <canvas id=\"canvas\" className=\"canvas\" width=\"500\" height=\"500\"></canvas>\r\n        <div>\r\n          <a href=\"\">refresh</a><br /><br />\r\n          <a href=\"../\">back</a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/app/app.js","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/app';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import Matter from 'matter-js';\r\n\r\nexport default function Ball(x, y){\r\n    this.body = Matter.Bodies.circle(x, y, 25, {\r\n        friction: 0.0025,\r\n        restitution: 0.8,\r\n        render: {\r\n            fillStyle: 'red',\r\n        }\r\n    });\r\n\r\n    return this.body;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/matter/bodies/ball.js","import Matter from 'matter-js';\r\n\r\nexport default function createMouseDragConstraint(canvas, engine) {\r\n    var mouse = Matter.Mouse.create(canvas),\r\n        mouseConstraint = Matter.MouseConstraint.create(engine, {\r\n            mouse: mouse,\r\n            constraint: {\r\n                stiffness: 0.2,\r\n                render: {\r\n                    visible: false\r\n                }\r\n            }\r\n        });\r\n\r\n    return mouseConstraint;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/matter/constraints/drag.js","import Matter from 'matter-js';\r\n\r\nexport default function createRender(canvas, engine) {\r\n    return Matter.Render.create({\r\n        canvas: canvas,\r\n        options: {\r\n            width: canvas.width,\r\n            height: canvas.height,\r\n            wireframes: false,\r\n            background: '#ffffff'\r\n        },\r\n        engine: engine\r\n    });\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/matter/renderers/render.js","/** @license React v16.8.6\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),n=require(\"object-assign\"),r=require(\"scheduler\");function ba(a,b,c,d,e,f,g,h){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[c,d,e,f,g,h],k=0;a=Error(b.replace(/%s/g,function(){return l[k++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction x(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);ba(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}aa?void 0:x(\"227\");function ca(a,b,c,d,e,f,g,h,l){var k=Array.prototype.slice.call(arguments,3);try{b.apply(c,k)}catch(m){this.onError(m)}}\nvar da=!1,ea=null,fa=!1,ha=null,ia={onError:function(a){da=!0;ea=a}};function ja(a,b,c,d,e,f,g,h,l){da=!1;ea=null;ca.apply(ia,arguments)}function ka(a,b,c,d,e,f,g,h,l){ja.apply(this,arguments);if(da){if(da){var k=ea;da=!1;ea=null}else x(\"198\"),k=void 0;fa||(fa=!0,ha=k)}}var la=null,ma={};\nfunction na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:x(\"96\",a);if(!oa[c]){b.extractEvents?void 0:x(\"97\",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?x(\"99\",h):void 0;pa[h]=f;var l=f.phasedRegistrationNames;if(l){for(e in l)l.hasOwnProperty(e)&&qa(l[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:x(\"98\",d,a)}}}}\nfunction qa(a,b,c){ra[a]?x(\"100\",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={},ta=null,ua=null,va=null;function wa(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=va(c);ka(d,b,void 0,a);a.currentTarget=null}function xa(a,b){null==b?x(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}\nfunction ya(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var za=null;function Aa(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)wa(a,b[d],c[d]);else b&&wa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}\nvar Ba={injectEventPluginOrder:function(a){la?x(\"101\"):void 0;la=Array.prototype.slice.call(a);na()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?x(\"102\",c):void 0,ma[c]=d,b=!0)}b&&na()}};\nfunction Ca(a,b){var c=a.stateNode;if(!c)return null;var d=ta(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?x(\"231\",b,typeof c):void 0;\nreturn c}function Da(a){null!==a&&(za=xa(za,a));a=za;za=null;if(a&&(ya(a,Aa),za?x(\"95\"):void 0,fa))throw a=ha,fa=!1,ha=null,a;}var Ea=Math.random().toString(36).slice(2),Fa=\"__reactInternalInstance$\"+Ea,Ga=\"__reactEventHandlers$\"+Ea;function Ha(a){if(a[Fa])return a[Fa];for(;!a[Fa];)if(a.parentNode)a=a.parentNode;else return null;a=a[Fa];return 5===a.tag||6===a.tag?a:null}function Ia(a){a=a[Fa];return!a||5!==a.tag&&6!==a.tag?null:a}\nfunction Ja(a){if(5===a.tag||6===a.tag)return a.stateNode;x(\"33\")}function Ka(a){return a[Ga]||null}function La(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ma(a,b,c){if(b=Ca(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a)}\nfunction Na(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=La(b);for(b=c.length;0<b--;)Ma(c[b],\"captured\",a);for(b=0;b<c.length;b++)Ma(c[b],\"bubbled\",a)}}function Oa(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ca(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a))}function Pa(a){a&&a.dispatchConfig.registrationName&&Oa(a._targetInst,null,a)}\nfunction Qa(a){ya(a,Na)}var Ra=!(\"undefined\"===typeof window||!window.document||!window.document.createElement);function Sa(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ta={animationend:Sa(\"Animation\",\"AnimationEnd\"),animationiteration:Sa(\"Animation\",\"AnimationIteration\"),animationstart:Sa(\"Animation\",\"AnimationStart\"),transitionend:Sa(\"Transition\",\"TransitionEnd\")},Ua={},Va={};\nRa&&(Va=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ta.animationend.animation,delete Ta.animationiteration.animation,delete Ta.animationstart.animation),\"TransitionEvent\"in window||delete Ta.transitionend.transition);function Wa(a){if(Ua[a])return Ua[a];if(!Ta[a])return a;var b=Ta[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Va)return Ua[a]=b[c];return a}\nvar Xa=Wa(\"animationend\"),Ya=Wa(\"animationiteration\"),Za=Wa(\"animationstart\"),$a=Wa(\"transitionend\"),ab=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),bb=null,cb=null,db=null;\nfunction eb(){if(db)return db;var a,b=cb,c=b.length,d,e=\"value\"in bb?bb.value:bb.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return db=e.slice(a,1<d?1-d:void 0)}function fb(){return!0}function gb(){return!1}\nfunction y(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?fb:gb;this.isPropagationStopped=gb;return this}\nn(y.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=fb)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=fb)},persist:function(){this.isPersistent=fb},isPersistent:gb,destructor:function(){var a=this.constructor.Interface,\nb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=gb;this._dispatchInstances=this._dispatchListeners=null}});y.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\ny.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;hb(c);return c};hb(y);function ib(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function jb(a){a instanceof this?void 0:x(\"279\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}\nfunction hb(a){a.eventPool=[];a.getPooled=ib;a.release=jb}var kb=y.extend({data:null}),lb=y.extend({data:null}),mb=[9,13,27,32],nb=Ra&&\"CompositionEvent\"in window,ob=null;Ra&&\"documentMode\"in document&&(ob=document.documentMode);\nvar pb=Ra&&\"TextEvent\"in window&&!ob,qb=Ra&&(!nb||ob&&8<ob&&11>=ob),rb=String.fromCharCode(32),sb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},tb=!1;\nfunction ub(a,b){switch(a){case \"keyup\":return-1!==mb.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function vb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var wb=!1;function xb(a,b){switch(a){case \"compositionend\":return vb(b);case \"keypress\":if(32!==b.which)return null;tb=!0;return rb;case \"textInput\":return a=b.data,a===rb&&tb?null:a;default:return null}}\nfunction yb(a,b){if(wb)return\"compositionend\"===a||!nb&&ub(a,b)?(a=eb(),db=cb=bb=null,wb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return qb&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar zb={eventTypes:sb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(nb)b:{switch(a){case \"compositionstart\":e=sb.compositionStart;break b;case \"compositionend\":e=sb.compositionEnd;break b;case \"compositionupdate\":e=sb.compositionUpdate;break b}e=void 0}else wb?ub(a,c)&&(e=sb.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=sb.compositionStart);e?(qb&&\"ko\"!==c.locale&&(wb||e!==sb.compositionStart?e===sb.compositionEnd&&wb&&(f=eb()):(bb=d,cb=\"value\"in bb?bb.value:bb.textContent,wb=\n!0)),e=kb.getPooled(e,b,c,d),f?e.data=f:(f=vb(c),null!==f&&(e.data=f)),Qa(e),f=e):f=null;(a=pb?xb(a,c):yb(a,c))?(b=lb.getPooled(sb.beforeInput,b,c,d),b.data=a,Qa(b)):b=null;return null===f?b:null===b?f:[f,b]}},Ab=null,Bb=null,Cb=null;function Db(a){if(a=ua(a)){\"function\"!==typeof Ab?x(\"280\"):void 0;var b=ta(a.stateNode);Ab(a.stateNode,a.type,b)}}function Eb(a){Bb?Cb?Cb.push(a):Cb=[a]:Bb=a}function Fb(){if(Bb){var a=Bb,b=Cb;Cb=Bb=null;Db(a);if(b)for(a=0;a<b.length;a++)Db(b[a])}}\nfunction Gb(a,b){return a(b)}function Hb(a,b,c){return a(b,c)}function Ib(){}var Jb=!1;function Kb(a,b){if(Jb)return a(b);Jb=!0;try{return Gb(a,b)}finally{if(Jb=!1,null!==Bb||null!==Cb)Ib(),Fb()}}var Lb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Mb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Lb[a.type]:\"textarea\"===b?!0:!1}\nfunction Nb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Ob(a){if(!Ra)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function Pb(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Qb(a){var b=Pb(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Rb(a){a._valueTracker||(a._valueTracker=Qb(a))}function Sb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Pb(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}var Tb=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Tb.hasOwnProperty(\"ReactCurrentDispatcher\")||(Tb.ReactCurrentDispatcher={current:null});\nvar Ub=/^(.*)[\\\\\\/]/,z=\"function\"===typeof Symbol&&Symbol.for,Vb=z?Symbol.for(\"react.element\"):60103,Wb=z?Symbol.for(\"react.portal\"):60106,Xb=z?Symbol.for(\"react.fragment\"):60107,Yb=z?Symbol.for(\"react.strict_mode\"):60108,Zb=z?Symbol.for(\"react.profiler\"):60114,$b=z?Symbol.for(\"react.provider\"):60109,ac=z?Symbol.for(\"react.context\"):60110,bc=z?Symbol.for(\"react.concurrent_mode\"):60111,cc=z?Symbol.for(\"react.forward_ref\"):60112,dc=z?Symbol.for(\"react.suspense\"):60113,ec=z?Symbol.for(\"react.memo\"):\n60115,fc=z?Symbol.for(\"react.lazy\"):60116,gc=\"function\"===typeof Symbol&&Symbol.iterator;function hc(a){if(null===a||\"object\"!==typeof a)return null;a=gc&&a[gc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction ic(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case bc:return\"ConcurrentMode\";case Xb:return\"Fragment\";case Wb:return\"Portal\";case Zb:return\"Profiler\";case Yb:return\"StrictMode\";case dc:return\"Suspense\"}if(\"object\"===typeof a)switch(a.$$typeof){case ac:return\"Context.Consumer\";case $b:return\"Context.Provider\";case cc:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\n\")\":\"ForwardRef\");case ec:return ic(a.type);case fc:if(a=1===a._status?a._result:null)return ic(a)}return null}function jc(a){var b=\"\";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c=\"\";break a;default:var d=a._debugOwner,e=a._debugSource,f=ic(a.type);c=null;d&&(c=ic(d.type));d=f;f=\"\";e?f=\" (at \"+e.fileName.replace(Ub,\"\")+\":\"+e.lineNumber+\")\":c&&(f=\" (created by \"+c+\")\");c=\"\\n    in \"+(d||\"Unknown\")+f}b+=c;a=a.return}while(a);return b}\nvar kc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,lc=Object.prototype.hasOwnProperty,mc={},nc={};\nfunction oc(a){if(lc.call(nc,a))return!0;if(lc.call(mc,a))return!1;if(kc.test(a))return nc[a]=!0;mc[a]=!0;return!1}function pc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qc(a,b,c,d){if(null===b||\"undefined\"===typeof b||pc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function C(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var D={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new C(a,0,!1,a,null)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new C(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new C(a,2,!1,a.toLowerCase(),null)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new C(a,2,!1,a,null)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new C(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new C(a,3,!0,a,null)});\n[\"capture\",\"download\"].forEach(function(a){D[a]=new C(a,4,!1,a,null)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new C(a,6,!1,a,null)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new C(a,5,!1,a.toLowerCase(),null)});var rc=/[\\-:]([a-z])/g;function sc(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(rc,\nsc);D[b]=new C(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(rc,sc);D[b]=new C(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(rc,sc);D[b]=new C(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new C(a,1,!1,a.toLowerCase(),null)});\nfunction tc(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(qc(b,c,e,d)&&(c=null),d||null===e?oc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction uc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function vc(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\nfunction wc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=uc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function xc(a,b){b=b.checked;null!=b&&tc(a,\"checked\",b,!1)}\nfunction yc(a,b){xc(a,b);var c=uc(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?zc(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&zc(a,b.type,uc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Ac(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction zc(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var Bc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Cc(a,b,c){a=y.getPooled(Bc.change,a,b,c);a.type=\"change\";Eb(c);Qa(a);return a}var Dc=null,Ec=null;function Fc(a){Da(a)}\nfunction Gc(a){var b=Ja(a);if(Sb(b))return a}function Hc(a,b){if(\"change\"===a)return b}var Ic=!1;Ra&&(Ic=Ob(\"input\")&&(!document.documentMode||9<document.documentMode));function Jc(){Dc&&(Dc.detachEvent(\"onpropertychange\",Kc),Ec=Dc=null)}function Kc(a){\"value\"===a.propertyName&&Gc(Ec)&&(a=Cc(Ec,a,Nb(a)),Kb(Fc,a))}function Lc(a,b,c){\"focus\"===a?(Jc(),Dc=b,Ec=c,Dc.attachEvent(\"onpropertychange\",Kc)):\"blur\"===a&&Jc()}function Mc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Gc(Ec)}\nfunction Nc(a,b){if(\"click\"===a)return Gc(b)}function Oc(a,b){if(\"input\"===a||\"change\"===a)return Gc(b)}\nvar Pc={eventTypes:Bc,_isInputEventSupported:Ic,extractEvents:function(a,b,c,d){var e=b?Ja(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Hc:Mb(e)?Ic?f=Oc:(f=Mc,g=Lc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Nc);if(f&&(f=f(a,b)))return Cc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&zc(e,\"number\",e.value)}},Qc=y.extend({view:null,detail:null}),Rc={Alt:\"altKey\",\nControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Sc(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Rc[a])?!!b[a]:!1}function Tc(){return Sc}\nvar Uc=0,Vc=0,Wc=!1,Xc=!1,Yc=Qc.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Tc,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=Uc;Uc=a.screenX;return Wc?\"mousemove\"===a.type?a.screenX-b:0:(Wc=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;\nvar b=Vc;Vc=a.screenY;return Xc?\"mousemove\"===a.type?a.screenY-b:0:(Xc=!0,0)}}),Zc=Yc.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),$c={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",\ndependencies:[\"pointerout\",\"pointerover\"]}},ad={eventTypes:$c,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Ha(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,l=void 0,k=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=Yc,h=$c.mouseLeave,l=$c.mouseEnter,k=\"mouse\";\nelse if(\"pointerout\"===a||\"pointerover\"===a)g=Zc,h=$c.pointerLeave,l=$c.pointerEnter,k=\"pointer\";var m=null==f?e:Ja(f);e=null==b?e:Ja(b);a=g.getPooled(h,f,c,d);a.type=k+\"leave\";a.target=m;a.relatedTarget=e;c=g.getPooled(l,b,c,d);c.type=k+\"enter\";c.target=e;c.relatedTarget=m;d=b;if(f&&d)a:{b=f;e=d;k=0;for(g=b;g;g=La(g))k++;g=0;for(l=e;l;l=La(l))g++;for(;0<k-g;)b=La(b),k--;for(;0<g-k;)e=La(e),g--;for(;k--;){if(b===e||b===e.alternate)break a;b=La(b);e=La(e)}b=null}else b=null;e=b;for(b=[];f&&f!==e;){k=\nf.alternate;if(null!==k&&k===e)break;b.push(f);f=La(f)}for(f=[];d&&d!==e;){k=d.alternate;if(null!==k&&k===e)break;f.push(d);d=La(d)}for(d=0;d<b.length;d++)Oa(b[d],\"bubbled\",a);for(d=f.length;0<d--;)Oa(f[d],\"captured\",c);return[a,c]}};function bd(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var cd=Object.prototype.hasOwnProperty;\nfunction dd(a,b){if(bd(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!cd.call(b,c[d])||!bd(a[c[d]],b[c[d]]))return!1;return!0}function ed(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function fd(a){2!==ed(a)?x(\"188\"):void 0}\nfunction gd(a){var b=a.alternate;if(!b)return b=ed(a),3===b?x(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return fd(e),a;if(g===d)return fd(e),b;g=g.sibling}x(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:x(\"189\")}}c.alternate!==d?x(\"190\"):void 0}3!==c.tag?x(\"188\"):void 0;return c.stateNode.current===c?a:b}function hd(a){a=gd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nvar id=y.extend({animationName:null,elapsedTime:null,pseudoElement:null}),jd=y.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),kd=Qc.extend({relatedTarget:null});function ld(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar md={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},od=Qc.extend({key:function(a){if(a.key){var b=md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=ld(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?nd[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Tc,charCode:function(a){return\"keypress\"===\na.type?ld(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?ld(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),pd=Yc.extend({dataTransfer:null}),qd=Qc.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Tc}),rd=y.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),sd=Yc.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),td=[[\"abort\",\"abort\"],[Xa,\"animationEnd\"],[Ya,\"animationIteration\"],[Za,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[$a,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],ud={},vd={};function wd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};ud[a]=b;vd[c]=b}\n[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"auxclick\",\"auxClick\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],\n[\"pointerdown\",\"pointerDown\"],[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){wd(a,!0)});td.forEach(function(a){wd(a,!1)});\nvar xd={eventTypes:ud,isInteractiveTopLevelEventType:function(a){a=vd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=vd[a];if(!e)return null;switch(a){case \"keypress\":if(0===ld(c))return null;case \"keydown\":case \"keyup\":a=od;break;case \"blur\":case \"focus\":a=kd;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=Yc;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\npd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=qd;break;case Xa:case Ya:case Za:a=id;break;case $a:a=rd;break;case \"scroll\":a=Qc;break;case \"wheel\":a=sd;break;case \"copy\":case \"cut\":case \"paste\":a=jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=Zc;break;default:a=y}b=a.getPooled(e,b,c,d);Qa(b);return b}},yd=xd.isInteractiveTopLevelEventType,\nzd=[];function Ad(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d;for(d=c;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo;if(!d)break;a.ancestors.push(c);c=Ha(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Nb(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=null,h=0;h<oa.length;h++){var l=oa[h];l&&(l=l.extractEvents(d,b,f,e))&&(g=xa(g,l))}Da(g)}}var Bd=!0;\nfunction E(a,b){if(!b)return null;var c=(yd(a)?Cd:Dd).bind(null,a);b.addEventListener(a,c,!1)}function Ed(a,b){if(!b)return null;var c=(yd(a)?Cd:Dd).bind(null,a);b.addEventListener(a,c,!0)}function Cd(a,b){Hb(Dd,a,b)}\nfunction Dd(a,b){if(Bd){var c=Nb(b);c=Ha(c);null===c||\"number\"!==typeof c.tag||2===ed(c)||(c=null);if(zd.length){var d=zd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Kb(Ad,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>zd.length&&zd.push(a)}}}var Fd={},Gd=0,Hd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);\nfunction Id(a){Object.prototype.hasOwnProperty.call(a,Hd)||(a[Hd]=Gd++,Fd[a[Hd]]={});return Fd[a[Hd]]}function Jd(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function Kd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ld(a,b){var c=Kd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Kd(c)}}function Md(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Md(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Nd(){for(var a=window,b=Jd();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Jd(a.document)}return b}function Od(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Pd(){var a=Nd();if(Od(a)){if(\"selectionStart\"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{b=(b=a.ownerDocument)&&b.defaultView||window;var c=b.getSelection&&b.getSelection();if(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(A){b=null;break a}var f=0,g=-1,h=-1,l=0,k=0,m=a,p=null;b:for(;;){for(var t;;){m!==b||0!==d&&3!==m.nodeType||(g=f+d);m!==e||0!==c&&3!==m.nodeType||(h=f+c);3===m.nodeType&&(f+=m.nodeValue.length);\nif(null===(t=m.firstChild))break;p=m;m=t}for(;;){if(m===a)break b;p===b&&++l===d&&(g=f);p===e&&++k===c&&(h=f);if(null!==(t=m.nextSibling))break;m=p;p=m.parentNode}m=t}b=-1===g||-1===h?null:{start:g,end:h}}else b=null}b=b||{start:0,end:0}}else b=null;return{focusedElem:a,selectionRange:b}}\nfunction Qd(a){var b=Nd(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Md(c.ownerDocument.documentElement,c)){if(null!==d&&Od(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ld(c,f);var g=Ld(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Rd=Ra&&\"documentMode\"in document&&11>=document.documentMode,Sd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Td=null,Ud=null,Vd=null,Wd=!1;\nfunction Xd(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if(Wd||null==Td||Td!==Jd(c))return null;c=Td;\"selectionStart\"in c&&Od(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return Vd&&dd(Vd,c)?null:(Vd=c,a=y.getPooled(Sd.select,Ud,a,b),a.type=\"select\",a.target=Td,Qa(a),a)}\nvar Yd={eventTypes:Sd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Id(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Ja(b):window;switch(a){case \"focus\":if(Mb(e)||\"true\"===e.contentEditable)Td=e,Ud=b,Vd=null;break;case \"blur\":Vd=Ud=Td=null;break;case \"mousedown\":Wd=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return Wd=!1,Xd(c,d);case \"selectionchange\":if(Rd)break;\ncase \"keydown\":case \"keyup\":return Xd(c,d)}return null}};Ba.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));ta=Ka;ua=Ia;va=Ja;Ba.injectEventPluginsByName({SimpleEventPlugin:xd,EnterLeaveEventPlugin:ad,ChangeEventPlugin:Pc,SelectEventPlugin:Yd,BeforeInputEventPlugin:zb});function Zd(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}\nfunction $d(a,b){a=n({children:void 0},b);if(b=Zd(b.children))a.children=b;return a}function ae(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+uc(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction be(a,b){null!=b.dangerouslySetInnerHTML?x(\"91\"):void 0;return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function ce(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?x(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:x(\"93\"),b=b[0]),c=b),null==c&&(c=\"\"));a._wrapperState={initialValue:uc(c)}}\nfunction de(a,b){var c=uc(b.value),d=uc(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function ee(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var fe={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction ge(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function he(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?ge(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar ie=void 0,je=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==fe.svg||\"innerHTML\"in a)a.innerHTML=b;else{ie=ie||document.createElement(\"div\");ie.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=ie.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ke(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar le={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},me=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(le).forEach(function(a){me.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);le[b]=le[a]})});function ne(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||le.hasOwnProperty(a)&&le[a]?(\"\"+b).trim():b+\"px\"}\nfunction oe(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=ne(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var pe=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction qe(a,b){b&&(pe[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?x(\"137\",a,\"\"):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?x(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:x(\"61\")),null!=b.style&&\"object\"!==typeof b.style?x(\"62\",\"\"):void 0)}\nfunction re(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}\nfunction se(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Id(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Ed(\"scroll\",a);break;case \"focus\":case \"blur\":Ed(\"focus\",a);Ed(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":Ob(e)&&Ed(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===ab.indexOf(e)&&E(e,a)}c[e]=!0}}}function te(){}var ue=null,ve=null;\nfunction we(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}function xe(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar ye=\"function\"===typeof setTimeout?setTimeout:void 0,ze=\"function\"===typeof clearTimeout?clearTimeout:void 0,Ae=r.unstable_scheduleCallback,Be=r.unstable_cancelCallback;\nfunction Ce(a,b,c,d,e){a[Ga]=e;\"input\"===c&&\"radio\"===e.type&&null!=e.name&&xc(a,e);re(c,d);d=re(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?oe(a,h):\"dangerouslySetInnerHTML\"===g?je(a,h):\"children\"===g?ke(a,h):tc(a,g,h,d)}switch(c){case \"input\":yc(a,e);break;case \"textarea\":de(a,e);break;case \"select\":b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?ae(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?ae(a,!!e.multiple,e.defaultValue,\n!0):ae(a,!!e.multiple,e.multiple?[]:\"\",!1))}}function De(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function Ee(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var Fe=[],Ge=-1;function F(a){0>Ge||(a.current=Fe[Ge],Fe[Ge]=null,Ge--)}function G(a,b){Ge++;Fe[Ge]=a.current;a.current=b}var He={},H={current:He},I={current:!1},Ie=He;\nfunction Je(a,b){var c=a.type.contextTypes;if(!c)return He;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function J(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Ke(a){F(I,a);F(H,a)}function Le(a){F(I,a);F(H,a)}\nfunction Me(a,b,c){H.current!==He?x(\"168\"):void 0;G(H,b,a);G(I,c,a)}function Ne(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)e in a?void 0:x(\"108\",ic(b)||\"Unknown\",e);return n({},c,d)}function Oe(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||He;Ie=H.current;G(H,b,a);G(I,I.current,a);return!0}\nfunction Pe(a,b,c){var d=a.stateNode;d?void 0:x(\"169\");c?(b=Ne(a,b,Ie),d.__reactInternalMemoizedMergedChildContext=b,F(I,a),F(H,a),G(H,b,a)):F(I,a);G(I,c,a)}var Qe=null,Re=null;function Se(a){return function(b){try{return a(b)}catch(c){}}}\nfunction Te(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Qe=Se(function(a){return b.onCommitFiberRoot(c,a)});Re=Se(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}\nfunction Ue(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function K(a,b,c,d){return new Ue(a,b,c,d)}\nfunction Ve(a){a=a.prototype;return!(!a||!a.isReactComponent)}function We(a){if(\"function\"===typeof a)return Ve(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===cc)return 11;if(a===ec)return 14}return 2}\nfunction Xe(a,b){var c=a.alternate;null===c?(c=K(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;c.contextDependencies=a.contextDependencies;c.sibling=a.sibling;\nc.index=a.index;c.ref=a.ref;return c}\nfunction Ye(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)Ve(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case Xb:return Ze(c.children,e,f,b);case bc:return $e(c,e|3,f,b);case Yb:return $e(c,e|2,f,b);case Zb:return a=K(12,c,b,e|4),a.elementType=Zb,a.type=Zb,a.expirationTime=f,a;case dc:return a=K(13,c,b,e),a.elementType=dc,a.type=dc,a.expirationTime=f,a;default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case $b:g=10;break a;case ac:g=9;break a;case cc:g=11;break a;case ec:g=\n14;break a;case fc:g=16;d=null;break a}x(\"130\",null==a?a:typeof a,\"\")}b=K(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function Ze(a,b,c,d){a=K(7,a,d,b);a.expirationTime=c;return a}function $e(a,b,c,d){a=K(8,a,d,b);b=0===(b&1)?Yb:bc;a.elementType=b;a.type=b;a.expirationTime=c;return a}function af(a,b,c){a=K(6,a,null,b);a.expirationTime=c;return a}\nfunction bf(a,b,c){b=K(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}function cf(a,b){a.didError=!1;var c=a.earliestPendingTime;0===c?a.earliestPendingTime=a.latestPendingTime=b:c<b?a.earliestPendingTime=b:a.latestPendingTime>b&&(a.latestPendingTime=b);df(b,a)}\nfunction ef(a,b){a.didError=!1;if(0===b)a.earliestPendingTime=0,a.latestPendingTime=0,a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0;else{b<a.latestPingedTime&&(a.latestPingedTime=0);var c=a.latestPendingTime;0!==c&&(c>b?a.earliestPendingTime=a.latestPendingTime=0:a.earliestPendingTime>b&&(a.earliestPendingTime=a.latestPendingTime));c=a.earliestSuspendedTime;0===c?cf(a,b):b<a.latestSuspendedTime?(a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0,cf(a,b)):\nb>c&&cf(a,b)}df(0,a)}function ff(a,b){a.didError=!1;a.latestPingedTime>=b&&(a.latestPingedTime=0);var c=a.earliestPendingTime,d=a.latestPendingTime;c===b?a.earliestPendingTime=d===b?a.latestPendingTime=0:d:d===b&&(a.latestPendingTime=c);c=a.earliestSuspendedTime;d=a.latestSuspendedTime;0===c?a.earliestSuspendedTime=a.latestSuspendedTime=b:c<b?a.earliestSuspendedTime=b:d>b&&(a.latestSuspendedTime=b);df(b,a)}\nfunction gf(a,b){var c=a.earliestPendingTime;a=a.earliestSuspendedTime;c>b&&(b=c);a>b&&(b=a);return b}function df(a,b){var c=b.earliestSuspendedTime,d=b.latestSuspendedTime,e=b.earliestPendingTime,f=b.latestPingedTime;e=0!==e?e:f;0===e&&(0===a||d<a)&&(e=d);a=e;0!==a&&c>a&&(a=c);b.nextExpirationTimeToWorkOn=e;b.expirationTime=a}function L(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}\nfunction hf(a){var b=a._result;switch(a._status){case 1:return b;case 2:throw b;case 0:throw b;default:a._status=0;b=a._ctor;b=b();b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)});switch(a._status){case 1:return a._result;case 2:throw a._result;}a._result=b;throw b;}}var jf=(new aa.Component).refs;\nfunction kf(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}\nvar tf={isMounted:function(a){return(a=a._reactInternalFiber)?2===ed(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=lf();d=mf(d,a);var e=nf(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);of();pf(a,e);qf(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=lf();d=mf(d,a);var e=nf(d);e.tag=rf;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);of();pf(a,e);qf(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=lf();c=mf(c,a);var d=nf(c);d.tag=\nsf;void 0!==b&&null!==b&&(d.callback=b);of();pf(a,d);qf(a,c)}};function uf(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!dd(c,d)||!dd(e,f):!0}\nfunction vf(a,b,c){var d=!1,e=He;var f=b.contextType;\"object\"===typeof f&&null!==f?f=M(f):(e=J(b)?Ie:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Je(a,e):He);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=tf;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction wf(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&tf.enqueueReplaceState(b,b.state,null)}\nfunction xf(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jf;var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=M(f):(f=J(b)?Ie:H.current,e.context=Je(a,f));f=a.updateQueue;null!==f&&(yf(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kf(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==\ntypeof e.componentWillMount||(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&tf.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(yf(a,f,c,e,d),e.state=a.memoizedState));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var zf=Array.isArray;\nfunction Af(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(1!==c.tag?x(\"309\"):void 0,d=c.stateNode);d?void 0:x(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===jf&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?x(\"284\"):void 0;c._owner?void 0:x(\"290\",a)}return a}\nfunction Bf(a,b){\"textarea\"!==a.type&&x(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction Cf(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=Xe(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=af(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function l(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props,d),d.ref=Af(a,b,c),d.return=a,d;d=Ye(c.type,c.key,c.props,null,a.mode,d);d.ref=Af(a,b,c);d.return=a;return d}function k(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==\nc.implementation)return b=bf(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ze(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function p(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=af(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Vb:return c=Ye(b.type,b.key,b.props,null,a.mode,c),c.ref=Af(a,null,b),c.return=a,c;case Wb:return b=bf(b,a.mode,c),b.return=a,b}if(zf(b)||\nhc(b))return b=Ze(b,a.mode,c,null),b.return=a,b;Bf(a,b)}return null}function t(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Vb:return c.key===e?c.type===Xb?m(a,b,c.props.children,d,e):l(a,b,c,d):null;case Wb:return c.key===e?k(a,b,c,d):null}if(zf(c)||hc(c))return null!==e?null:m(a,b,c,d,null);Bf(a,c)}return null}function A(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=\na.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Vb:return a=a.get(null===d.key?c:d.key)||null,d.type===Xb?m(b,a,d.props.children,e,d.key):l(b,a,d,e);case Wb:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e)}if(zf(d)||hc(d))return a=a.get(c)||null,m(b,a,d,e,null);Bf(b,d)}return null}function v(e,g,h,k){for(var l=null,m=null,q=g,u=g=0,B=null;null!==q&&u<h.length;u++){q.index>u?(B=q,q=null):B=q.sibling;var w=t(e,q,h[u],k);if(null===w){null===q&&(q=B);break}a&&\nq&&null===w.alternate&&b(e,q);g=f(w,g,u);null===m?l=w:m.sibling=w;m=w;q=B}if(u===h.length)return c(e,q),l;if(null===q){for(;u<h.length;u++)if(q=p(e,h[u],k))g=f(q,g,u),null===m?l=q:m.sibling=q,m=q;return l}for(q=d(e,q);u<h.length;u++)if(B=A(q,e,u,h[u],k))a&&null!==B.alternate&&q.delete(null===B.key?u:B.key),g=f(B,g,u),null===m?l=B:m.sibling=B,m=B;a&&q.forEach(function(a){return b(e,a)});return l}function R(e,g,h,k){var l=hc(h);\"function\"!==typeof l?x(\"150\"):void 0;h=l.call(h);null==h?x(\"151\"):void 0;\nfor(var m=l=null,q=g,u=g=0,B=null,w=h.next();null!==q&&!w.done;u++,w=h.next()){q.index>u?(B=q,q=null):B=q.sibling;var v=t(e,q,w.value,k);if(null===v){q||(q=B);break}a&&q&&null===v.alternate&&b(e,q);g=f(v,g,u);null===m?l=v:m.sibling=v;m=v;q=B}if(w.done)return c(e,q),l;if(null===q){for(;!w.done;u++,w=h.next())w=p(e,w.value,k),null!==w&&(g=f(w,g,u),null===m?l=w:m.sibling=w,m=w);return l}for(q=d(e,q);!w.done;u++,w=h.next())w=A(q,e,u,w.value,k),null!==w&&(a&&null!==w.alternate&&q.delete(null===w.key?u:\nw.key),g=f(w,g,u),null===m?l=w:m.sibling=w,m=w);a&&q.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===Xb&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Vb:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(7===k.tag?f.type===Xb:k.elementType===f.type){c(a,k.sibling);d=e(k,f.type===Xb?f.props.children:f.props,h);d.ref=Af(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=\nk.sibling}f.type===Xb?(d=Ze(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Ye(f.type,f.key,f.props,null,a.mode,h),h.ref=Af(a,d,f),h.return=a,a=h)}return g(a);case Wb:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=bf(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\n\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=a,a=d):(c(a,d),d=af(f,a.mode,h),d.return=a,a=d),g(a);if(zf(f))return v(a,d,f,h);if(hc(f))return R(a,d,f,h);l&&Bf(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 0:h=a.type,x(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var Df=Cf(!0),Ef=Cf(!1),Ff={},N={current:Ff},Gf={current:Ff},Hf={current:Ff};function If(a){a===Ff?x(\"174\"):void 0;return a}\nfunction Jf(a,b){G(Hf,b,a);G(Gf,a,a);G(N,Ff,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:he(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=he(b,c)}F(N,a);G(N,b,a)}function Kf(a){F(N,a);F(Gf,a);F(Hf,a)}function Lf(a){If(Hf.current);var b=If(N.current);var c=he(b,a.type);b!==c&&(G(Gf,a,a),G(N,c,a))}function Mf(a){Gf.current===a&&(F(N,a),F(Gf,a))}\nvar Nf=0,Of=2,Pf=4,Qf=8,Rf=16,Sf=32,Tf=64,Uf=128,Vf=Tb.ReactCurrentDispatcher,Wf=0,Xf=null,O=null,P=null,Yf=null,Q=null,Zf=null,$f=0,ag=null,bg=0,cg=!1,dg=null,eg=0;function fg(){x(\"321\")}function gg(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!bd(a[c],b[c]))return!1;return!0}\nfunction hg(a,b,c,d,e,f){Wf=f;Xf=b;P=null!==a?a.memoizedState:null;Vf.current=null===P?ig:jg;b=c(d,e);if(cg){do cg=!1,eg+=1,P=null!==a?a.memoizedState:null,Zf=Yf,ag=Q=O=null,Vf.current=jg,b=c(d,e);while(cg);dg=null;eg=0}Vf.current=kg;a=Xf;a.memoizedState=Yf;a.expirationTime=$f;a.updateQueue=ag;a.effectTag|=bg;a=null!==O&&null!==O.next;Wf=0;Zf=Q=Yf=P=O=Xf=null;$f=0;ag=null;bg=0;a?x(\"300\"):void 0;return b}function lg(){Vf.current=kg;Wf=0;Zf=Q=Yf=P=O=Xf=null;$f=0;ag=null;bg=0;cg=!1;dg=null;eg=0}\nfunction mg(){var a={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};null===Q?Yf=Q=a:Q=Q.next=a;return Q}function ng(){if(null!==Zf)Q=Zf,Zf=Q.next,O=P,P=null!==O?O.next:null;else{null===P?x(\"310\"):void 0;O=P;var a={memoizedState:O.memoizedState,baseState:O.baseState,queue:O.queue,baseUpdate:O.baseUpdate,next:null};Q=null===Q?Yf=a:Q.next=a;P=O.next}return Q}function og(a,b){return\"function\"===typeof b?b(a):b}\nfunction pg(a){var b=ng(),c=b.queue;null===c?x(\"311\"):void 0;c.lastRenderedReducer=a;if(0<eg){var d=c.dispatch;if(null!==dg){var e=dg.get(c);if(void 0!==e){dg.delete(c);var f=b.memoizedState;do f=a(f,e.action),e=e.next;while(null!==e);bd(f,b.memoizedState)||(qg=!0);b.memoizedState=f;b.baseUpdate===c.last&&(b.baseState=f);c.lastRenderedState=f;return[f,d]}}return[b.memoizedState,d]}d=c.last;var g=b.baseUpdate;f=b.baseState;null!==g?(null!==d&&(d.next=null),d=g.next):d=null!==d?d.next:null;if(null!==\nd){var h=e=null,l=d,k=!1;do{var m=l.expirationTime;m<Wf?(k||(k=!0,h=g,e=f),m>$f&&($f=m)):f=l.eagerReducer===a?l.eagerState:a(f,l.action);g=l;l=l.next}while(null!==l&&l!==d);k||(h=g,e=f);bd(f,b.memoizedState)||(qg=!0);b.memoizedState=f;b.baseUpdate=h;b.baseState=e;c.lastRenderedState=f}return[b.memoizedState,c.dispatch]}\nfunction rg(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};null===ag?(ag={lastEffect:null},ag.lastEffect=a.next=a):(b=ag.lastEffect,null===b?ag.lastEffect=a.next=a:(c=b.next,b.next=a,a.next=c,ag.lastEffect=a));return a}function sg(a,b,c,d){var e=mg();bg|=a;e.memoizedState=rg(b,c,void 0,void 0===d?null:d)}\nfunction tg(a,b,c,d){var e=ng();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&gg(d,g.deps)){rg(Nf,c,f,d);return}}bg|=a;e.memoizedState=rg(b,c,f,d)}function ug(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function vg(){}\nfunction wg(a,b,c){25>eg?void 0:x(\"301\");var d=a.alternate;if(a===Xf||null!==d&&d===Xf)if(cg=!0,a={expirationTime:Wf,action:c,eagerReducer:null,eagerState:null,next:null},null===dg&&(dg=new Map),c=dg.get(b),void 0===c)dg.set(b,a);else{for(b=c;null!==b.next;)b=b.next;b.next=a}else{of();var e=lf();e=mf(e,a);var f={expirationTime:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.last;if(null===g)f.next=f;else{var h=g.next;null!==h&&(f.next=h);g.next=f}b.last=f;if(0===a.expirationTime&&(null===\nd||0===d.expirationTime)&&(d=b.lastRenderedReducer,null!==d))try{var l=b.lastRenderedState,k=d(l,c);f.eagerReducer=d;f.eagerState=k;if(bd(k,l))return}catch(m){}finally{}qf(a,e)}}\nvar kg={readContext:M,useCallback:fg,useContext:fg,useEffect:fg,useImperativeHandle:fg,useLayoutEffect:fg,useMemo:fg,useReducer:fg,useRef:fg,useState:fg,useDebugValue:fg},ig={readContext:M,useCallback:function(a,b){mg().memoizedState=[a,void 0===b?null:b];return a},useContext:M,useEffect:function(a,b){return sg(516,Uf|Tf,a,b)},useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return sg(4,Pf|Sf,ug.bind(null,b,a),c)},useLayoutEffect:function(a,b){return sg(4,Pf|Sf,a,b)},\nuseMemo:function(a,b){var c=mg();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=mg();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={last:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=wg.bind(null,Xf,a);return[d.memoizedState,a]},useRef:function(a){var b=mg();a={current:a};return b.memoizedState=a},useState:function(a){var b=mg();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={last:null,dispatch:null,\nlastRenderedReducer:og,lastRenderedState:a};a=a.dispatch=wg.bind(null,Xf,a);return[b.memoizedState,a]},useDebugValue:vg},jg={readContext:M,useCallback:function(a,b){var c=ng();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&gg(b,d[1]))return d[0];c.memoizedState=[a,b];return a},useContext:M,useEffect:function(a,b){return tg(516,Uf|Tf,a,b)},useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return tg(4,Pf|Sf,ug.bind(null,b,a),c)},useLayoutEffect:function(a,\nb){return tg(4,Pf|Sf,a,b)},useMemo:function(a,b){var c=ng();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&gg(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a},useReducer:pg,useRef:function(){return ng().memoizedState},useState:function(a){return pg(og,a)},useDebugValue:vg},xg=null,yg=null,zg=!1;\nfunction Ag(a,b){var c=K(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function Bg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction Cg(a){if(zg){var b=yg;if(b){var c=b;if(!Bg(a,b)){b=De(c);if(!b||!Bg(a,b)){a.effectTag|=2;zg=!1;xg=a;return}Ag(xg,c)}xg=a;yg=Ee(b)}else a.effectTag|=2,zg=!1,xg=a}}function Dg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&18!==a.tag;)a=a.return;xg=a}function Eg(a){if(a!==xg)return!1;if(!zg)return Dg(a),zg=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!xe(b,a.memoizedProps))for(b=yg;b;)Ag(a,b),b=De(b);Dg(a);yg=xg?De(a.stateNode):null;return!0}function Fg(){yg=xg=null;zg=!1}\nvar Gg=Tb.ReactCurrentOwner,qg=!1;function S(a,b,c,d){b.child=null===a?Ef(b,null,c,d):Df(b,a.child,c,d)}function Hg(a,b,c,d,e){c=c.render;var f=b.ref;Ig(b,e);d=hg(a,b,c,d,f,e);if(null!==a&&!qg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),Jg(a,b,e);b.effectTag|=1;S(a,b,d,e);return b.child}\nfunction Kg(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!Ve(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,Lg(a,b,g,d,e,f);a=Ye(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:dd,c(e,d)&&a.ref===b.ref))return Jg(a,b,f);b.effectTag|=1;a=Xe(g,d,f);a.ref=b.ref;a.return=b;return b.child=a}\nfunction Lg(a,b,c,d,e,f){return null!==a&&dd(a.memoizedProps,d)&&a.ref===b.ref&&(qg=!1,e<f)?Jg(a,b,f):Mg(a,b,c,d,f)}function Ng(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Mg(a,b,c,d,e){var f=J(c)?Ie:H.current;f=Je(b,f);Ig(b,e);c=hg(a,b,c,d,f,e);if(null!==a&&!qg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),Jg(a,b,e);b.effectTag|=1;S(a,b,c,e);return b.child}\nfunction Og(a,b,c,d,e){if(J(c)){var f=!0;Oe(b)}else f=!1;Ig(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),vf(b,c,d,e),xf(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var l=g.context,k=c.contextType;\"object\"===typeof k&&null!==k?k=M(k):(k=J(c)?Ie:H.current,k=Je(b,k));var m=c.getDerivedStateFromProps,p=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;p||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||l!==k)&&wf(b,g,d,k);Pg=!1;var t=b.memoizedState;l=g.state=t;var A=b.updateQueue;null!==A&&(yf(b,A,d,g,e),l=b.memoizedState);h!==d||t!==l||I.current||Pg?(\"function\"===typeof m&&(kf(b,c,m,d),l=b.memoizedState),(h=Pg||uf(b,c,h,d,t,l,k))?(p||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&\ng.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=l),g.props=d,g.state=l,g.context=k,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=b.memoizedProps,g.props=b.type===b.elementType?h:L(b.type,h),l=g.context,k=c.contextType,\"object\"===typeof k&&null!==k?k=M(k):(k=J(c)?Ie:H.current,k=Je(b,k)),m=c.getDerivedStateFromProps,(p=\"function\"===\ntypeof m||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||l!==k)&&wf(b,g,d,k),Pg=!1,l=b.memoizedState,t=g.state=l,A=b.updateQueue,null!==A&&(yf(b,A,d,g,e),t=b.memoizedState),h!==d||l!==t||I.current||Pg?(\"function\"===typeof m&&(kf(b,c,m,d),t=b.memoizedState),(m=Pg||uf(b,c,h,d,l,t,k))?(p||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===\ntypeof g.componentWillUpdate&&g.componentWillUpdate(d,t,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,t,k)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=256),b.memoizedProps=d,b.memoizedState=\nt),g.props=d,g.state=t,g.context=k,d=m):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=256),d=!1);return Qg(a,b,c,d,f,e)}\nfunction Qg(a,b,c,d,e,f){Ng(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Pe(b,c,!1),Jg(a,b,f);d=b.stateNode;Gg.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=Df(b,a.child,null,f),b.child=Df(b,null,h,f)):S(a,b,h,f);b.memoizedState=d.state;e&&Pe(b,c,!0);return b.child}function Rg(a){var b=a.stateNode;b.pendingContext?Me(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Me(a,b.context,!1);Jf(a,b.containerInfo)}\nfunction Sg(a,b,c){var d=b.mode,e=b.pendingProps,f=b.memoizedState;if(0===(b.effectTag&64)){f=null;var g=!1}else f={timedOutAt:null!==f?f.timedOutAt:0},g=!0,b.effectTag&=-65;if(null===a)if(g){var h=e.fallback;a=Ze(null,d,0,null);0===(b.mode&1)&&(a.child=null!==b.memoizedState?b.child.child:b.child);d=Ze(h,d,c,null);a.sibling=d;c=a;c.return=d.return=b}else c=d=Ef(b,null,e.children,c);else null!==a.memoizedState?(d=a.child,h=d.sibling,g?(c=e.fallback,e=Xe(d,d.pendingProps,0),0===(b.mode&1)&&(g=null!==\nb.memoizedState?b.child.child:b.child,g!==d.child&&(e.child=g)),d=e.sibling=Xe(h,c,h.expirationTime),c=e,e.childExpirationTime=0,c.return=d.return=b):c=d=Df(b,d.child,e.children,c)):(h=a.child,g?(g=e.fallback,e=Ze(null,d,0,null),e.child=h,0===(b.mode&1)&&(e.child=null!==b.memoizedState?b.child.child:b.child),d=e.sibling=Ze(g,d,c,null),d.effectTag|=2,c=e,e.childExpirationTime=0,c.return=d.return=b):d=c=Df(b,h,e.children,c)),b.stateNode=a.stateNode;b.memoizedState=f;b.child=c;return d}\nfunction Jg(a,b,c){null!==a&&(b.contextDependencies=a.contextDependencies);if(b.childExpirationTime<c)return null;null!==a&&b.child!==a.child?x(\"153\"):void 0;if(null!==b.child){a=b.child;c=Xe(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Xe(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\nfunction Tg(a,b,c){var d=b.expirationTime;if(null!==a)if(a.memoizedProps!==b.pendingProps||I.current)qg=!0;else{if(d<c){qg=!1;switch(b.tag){case 3:Rg(b);Fg();break;case 5:Lf(b);break;case 1:J(b.type)&&Oe(b);break;case 4:Jf(b,b.stateNode.containerInfo);break;case 10:Ug(b,b.memoizedProps.value);break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;if(0!==d&&d>=c)return Sg(a,b,c);b=Jg(a,b,c);return null!==b?b.sibling:null}}return Jg(a,b,c)}}else qg=!1;b.expirationTime=0;switch(b.tag){case 2:d=\nb.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;var e=Je(b,H.current);Ig(b,c);e=hg(null,b,d,a,e,c);b.effectTag|=1;if(\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;lg();if(J(d)){var f=!0;Oe(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;var g=d.getDerivedStateFromProps;\"function\"===typeof g&&kf(b,d,g,a);e.updater=tf;b.stateNode=e;e._reactInternalFiber=b;xf(b,d,a,c);b=Qg(null,b,d,!0,f,\nc)}else b.tag=0,S(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);f=b.pendingProps;a=hf(e);b.type=a;e=b.tag=We(a);f=L(a,f);g=void 0;switch(e){case 0:g=Mg(null,b,a,f,c);break;case 1:g=Og(null,b,a,f,c);break;case 11:g=Hg(null,b,a,f,c);break;case 14:g=Kg(null,b,a,L(a.type,f),d,c);break;default:x(\"306\",a,\"\")}return g;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:L(d,e),Mg(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,\ne=b.elementType===d?e:L(d,e),Og(a,b,d,e,c);case 3:Rg(b);d=b.updateQueue;null===d?x(\"282\"):void 0;e=b.memoizedState;e=null!==e?e.element:null;yf(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)Fg(),b=Jg(a,b,c);else{e=b.stateNode;if(e=(null===a||null===a.child)&&e.hydrate)yg=Ee(b.stateNode.containerInfo),xg=b,e=zg=!0;e?(b.effectTag|=2,b.child=Ef(b,null,d,c)):(S(a,b,d,c),Fg());b=b.child}return b;case 5:return Lf(b),null===a&&Cg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,\ng=e.children,xe(d,e)?g=null:null!==f&&xe(d,f)&&(b.effectTag|=16),Ng(a,b),1!==c&&b.mode&1&&e.hidden?(b.expirationTime=b.childExpirationTime=1,b=null):(S(a,b,g,c),b=b.child),b;case 6:return null===a&&Cg(b),null;case 13:return Sg(a,b,c);case 4:return Jf(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Df(b,null,d,c):S(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:L(d,e),Hg(a,b,d,e,c);case 7:return S(a,b,b.pendingProps,c),b.child;case 8:return S(a,b,b.pendingProps.children,\nc),b.child;case 12:return S(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;Ug(b,f);if(null!==g){var h=g.value;f=bd(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!I.current){b=Jg(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var l=h.contextDependencies;if(null!==l){g=h.child;for(var k=l.first;null!==k;){if(k.context===d&&0!==\n(k.observedBits&f)){1===h.tag&&(k=nf(c),k.tag=sf,pf(h,k));h.expirationTime<c&&(h.expirationTime=c);k=h.alternate;null!==k&&k.expirationTime<c&&(k.expirationTime=c);k=c;for(var m=h.return;null!==m;){var p=m.alternate;if(m.childExpirationTime<k)m.childExpirationTime=k,null!==p&&p.childExpirationTime<k&&(p.childExpirationTime=k);else if(null!==p&&p.childExpirationTime<k)p.childExpirationTime=k;else break;m=m.return}l.expirationTime<c&&(l.expirationTime=c);break}k=k.next}}else g=10===h.tag?h.type===b.type?\nnull:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}}S(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,Ig(b,c),e=M(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,S(a,b,d,c),b.child;case 14:return e=b.type,f=L(e,b.pendingProps),f=L(e.type,f),Kg(a,b,e,f,d,c);case 15:return Lg(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===\nd?e:L(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,J(d)?(a=!0,Oe(b)):a=!1,Ig(b,c),vf(b,d,e,c),xf(b,d,e,c),Qg(null,b,d,!0,a,c)}x(\"156\")}var Vg={current:null},Wg=null,Xg=null,Yg=null;function Ug(a,b){var c=a.type._context;G(Vg,c._currentValue,a);c._currentValue=b}function Zg(a){var b=Vg.current;F(Vg,a);a.type._context._currentValue=b}function Ig(a,b){Wg=a;Yg=Xg=null;var c=a.contextDependencies;null!==c&&c.expirationTime>=b&&(qg=!0);a.contextDependencies=null}\nfunction M(a,b){if(Yg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)Yg=a,b=1073741823;b={context:a,observedBits:b,next:null};null===Xg?(null===Wg?x(\"308\"):void 0,Xg=b,Wg.contextDependencies={first:b,expirationTime:0}):Xg=Xg.next=b}return a._currentValue}var $g=0,rf=1,sf=2,ah=3,Pg=!1;function bh(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction ch(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function nf(a){return{expirationTime:a,tag:$g,payload:null,callback:null,next:null,nextEffect:null}}function dh(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}\nfunction pf(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=bh(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=bh(a.memoizedState),e=c.updateQueue=bh(c.memoizedState)):d=a.updateQueue=ch(e):null===e&&(e=c.updateQueue=ch(d));null===e||d===e?dh(d,b):null===d.lastUpdate||null===e.lastUpdate?(dh(d,b),dh(e,b)):(dh(d,b),e.lastUpdate=b)}\nfunction eh(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=bh(a.memoizedState):fh(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function fh(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=ch(b));return b}\nfunction gh(a,b,c,d,e,f){switch(c.tag){case rf:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case ah:a.effectTag=a.effectTag&-2049|64;case $g:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case sf:Pg=!0}return d}\nfunction yf(a,b,c,d,e){Pg=!1;b=fh(a,b);for(var f=b.baseState,g=null,h=0,l=b.firstUpdate,k=f;null!==l;){var m=l.expirationTime;m<e?(null===g&&(g=l,f=k),h<m&&(h=m)):(k=gh(a,b,l,k,c,d),null!==l.callback&&(a.effectTag|=32,l.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=l:(b.lastEffect.nextEffect=l,b.lastEffect=l)));l=l.next}m=null;for(l=b.firstCapturedUpdate;null!==l;){var p=l.expirationTime;p<e?(null===m&&(m=l,null===g&&(f=k)),h<p&&(h=p)):(k=gh(a,b,l,k,c,d),null!==l.callback&&(a.effectTag|=\n32,l.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=l:(b.lastCapturedEffect.nextEffect=l,b.lastCapturedEffect=l)));l=l.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=k);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;a.expirationTime=h;a.memoizedState=k}\nfunction hh(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);ih(b.firstEffect,c);b.firstEffect=b.lastEffect=null;ih(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function ih(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;\"function\"!==typeof c?x(\"191\",c):void 0;c.call(d)}a=a.nextEffect}}\nfunction jh(a,b){return{value:a,source:b,stack:jc(b)}}function kh(a){a.effectTag|=4}var lh=void 0,mh=void 0,nh=void 0,oh=void 0;lh=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};mh=function(){};\nnh=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;If(N.current);a=null;switch(c){case \"input\":f=vc(g,f);d=vc(g,d);a=[];break;case \"option\":f=$d(g,f);d=$d(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=be(g,f);d=be(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=te)}qe(c,d);g=c=void 0;var h=null;for(c in f)if(!d.hasOwnProperty(c)&&f.hasOwnProperty(c)&&null!=f[c])if(\"style\"===\nc){var l=f[c];for(g in l)l.hasOwnProperty(g)&&(h||(h={}),h[g]=\"\")}else\"dangerouslySetInnerHTML\"!==c&&\"children\"!==c&&\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&\"autoFocus\"!==c&&(ra.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in d){var k=d[c];l=null!=f?f[c]:void 0;if(d.hasOwnProperty(c)&&k!==l&&(null!=k||null!=l))if(\"style\"===c)if(l){for(g in l)!l.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(h||(h={}),h[g]=\"\");for(g in k)k.hasOwnProperty(g)&&l[g]!==k[g]&&(h||\n(h={}),h[g]=k[g])}else h||(a||(a=[]),a.push(c,h)),h=k;else\"dangerouslySetInnerHTML\"===c?(k=k?k.__html:void 0,l=l?l.__html:void 0,null!=k&&l!==k&&(a=a||[]).push(c,\"\"+k)):\"children\"===c?l===k||\"string\"!==typeof k&&\"number\"!==typeof k||(a=a||[]).push(c,\"\"+k):\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&(ra.hasOwnProperty(c)?(null!=k&&se(e,c),a||l===k||(a=[])):(a=a||[]).push(c,k))}h&&(a=a||[]).push(\"style\",h);e=a;(b.updateQueue=e)&&kh(b)}};oh=function(a,b,c,d){c!==d&&kh(b)};\nvar ph=\"function\"===typeof WeakSet?WeakSet:Set;function qh(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=jc(c));null!==c&&ic(c.type);b=b.value;null!==a&&1===a.tag&&ic(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function rh(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){sh(a,c)}else b.current=null}\nfunction th(a,b,c){c=c.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do{if((d.tag&a)!==Nf){var e=d.destroy;d.destroy=void 0;void 0!==e&&e()}(d.tag&b)!==Nf&&(e=d.create,d.destroy=e());d=d.next}while(d!==c)}}\nfunction uh(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d.style.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=ne(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if(13===c.tag&&null!==c.memoizedState){d=c.child.sibling;d.return=c;c=d;continue}else if(null!==c.child){c.child.return=c;c=c.child;continue}if(c===a)break;for(;null===c.sibling;){if(null===c.return||\nc.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction vh(a){\"function\"===typeof Re&&Re(a);switch(a.tag){case 0:case 11:case 14:case 15:var b=a.updateQueue;if(null!==b&&(b=b.lastEffect,null!==b)){var c=b=b.next;do{var d=c.destroy;if(void 0!==d){var e=a;try{d()}catch(f){sh(e,f)}}c=c.next}while(c!==b)}break;case 1:rh(a);b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(f){sh(a,f)}break;case 5:rh(a);break;case 4:wh(a)}}\nfunction xh(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction yh(a){a:{for(var b=a.return;null!==b;){if(xh(b)){var c=b;break a}b=b.return}x(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:x(\"161\")}c.effectTag&16&&(ke(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||xh(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.effectTag&\n2)continue b;if(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(g=b,h=e.stateNode,8===g.nodeType?(f=g.parentNode,f.insertBefore(h,g)):(f=g,f.appendChild(h)),g=g._reactRootContainer,null!==g&&void 0!==g||null!==f.onclick||(f.onclick=te)):b.appendChild(e.stateNode);\nelse if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction wh(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?x(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if(vh(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag){if(null!==b.child){d=b.stateNode.containerInfo;e=!0;b.child.return=b;b=b.child;continue}}else if(vh(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\nfunction zh(a,b){switch(b.tag){case 0:case 11:case 14:case 15:th(Pf,Qf,b);break;case 1:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&Ce(c,f,e,a,d,b)}break;case 6:null===b.stateNode?x(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 12:break;case 13:c=b.memoizedState;d=void 0;a=b;null===c?d=!1:(d=!0,a=b.child,0===c.timedOutAt&&(c.timedOutAt=lf()));null!==a&&uh(a,d);c=\nb.updateQueue;if(null!==c){b.updateQueue=null;var g=b.stateNode;null===g&&(g=b.stateNode=new ph);c.forEach(function(a){var c=Ah.bind(null,b,a);g.has(a)||(g.add(a),a.then(c,c))})}break;case 17:break;default:x(\"163\")}}var Bh=\"function\"===typeof WeakMap?WeakMap:Map;function Ch(a,b,c){c=nf(c);c.tag=ah;c.payload={element:null};var d=b.value;c.callback=function(){Dh(d);qh(a,b)};return c}\nfunction Eh(a,b,c){c=nf(c);c.tag=ah;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Fh?Fh=new Set([this]):Fh.add(this));var c=b.value,e=b.stack;qh(a,b);this.componentDidCatch(c,{componentStack:null!==e?e:\"\"})});return c}\nfunction Gh(a){switch(a.tag){case 1:J(a.type)&&Ke(a);var b=a.effectTag;return b&2048?(a.effectTag=b&-2049|64,a):null;case 3:return Kf(a),Le(a),b=a.effectTag,0!==(b&64)?x(\"285\"):void 0,a.effectTag=b&-2049|64,a;case 5:return Mf(a),null;case 13:return b=a.effectTag,b&2048?(a.effectTag=b&-2049|64,a):null;case 18:return null;case 4:return Kf(a),null;case 10:return Zg(a),null;default:return null}}\nvar Hh=Tb.ReactCurrentDispatcher,Ih=Tb.ReactCurrentOwner,Jh=1073741822,Kh=!1,T=null,Lh=null,U=0,Mh=-1,Nh=!1,V=null,Oh=!1,Ph=null,Qh=null,Rh=null,Fh=null;function Sh(){if(null!==T)for(var a=T.return;null!==a;){var b=a;switch(b.tag){case 1:var c=b.type.childContextTypes;null!==c&&void 0!==c&&Ke(b);break;case 3:Kf(b);Le(b);break;case 5:Mf(b);break;case 4:Kf(b);break;case 10:Zg(b)}a=a.return}Lh=null;U=0;Mh=-1;Nh=!1;T=null}\nfunction Th(){for(;null!==V;){var a=V.effectTag;a&16&&ke(V.stateNode,\"\");if(a&128){var b=V.alternate;null!==b&&(b=b.ref,null!==b&&(\"function\"===typeof b?b(null):b.current=null))}switch(a&14){case 2:yh(V);V.effectTag&=-3;break;case 6:yh(V);V.effectTag&=-3;zh(V.alternate,V);break;case 4:zh(V.alternate,V);break;case 8:a=V,wh(a),a.return=null,a.child=null,a.memoizedState=null,a.updateQueue=null,a=a.alternate,null!==a&&(a.return=null,a.child=null,a.memoizedState=null,a.updateQueue=null)}V=V.nextEffect}}\nfunction Uh(){for(;null!==V;){if(V.effectTag&256)a:{var a=V.alternate,b=V;switch(b.tag){case 0:case 11:case 15:th(Of,Nf,b);break a;case 1:if(b.effectTag&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:L(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}break a;case 3:case 5:case 6:case 4:case 17:break a;default:x(\"163\")}}V=V.nextEffect}}\nfunction Vh(a,b){for(;null!==V;){var c=V.effectTag;if(c&36){var d=V.alternate,e=V,f=b;switch(e.tag){case 0:case 11:case 15:th(Rf,Sf,e);break;case 1:var g=e.stateNode;if(e.effectTag&4)if(null===d)g.componentDidMount();else{var h=e.elementType===e.type?d.memoizedProps:L(e.type,d.memoizedProps);g.componentDidUpdate(h,d.memoizedState,g.__reactInternalSnapshotBeforeUpdate)}d=e.updateQueue;null!==d&&hh(e,d,g,f);break;case 3:d=e.updateQueue;if(null!==d){g=null;if(null!==e.child)switch(e.child.tag){case 5:g=\ne.child.stateNode;break;case 1:g=e.child.stateNode}hh(e,d,g,f)}break;case 5:f=e.stateNode;null===d&&e.effectTag&4&&we(e.type,e.memoizedProps)&&f.focus();break;case 6:break;case 4:break;case 12:break;case 13:break;case 17:break;default:x(\"163\")}}c&128&&(e=V.ref,null!==e&&(f=V.stateNode,\"function\"===typeof e?e(f):e.current=f));c&512&&(Ph=a);V=V.nextEffect}}\nfunction Wh(a,b){Rh=Qh=Ph=null;var c=W;W=!0;do{if(b.effectTag&512){var d=!1,e=void 0;try{var f=b;th(Uf,Nf,f);th(Nf,Tf,f)}catch(g){d=!0,e=g}d&&sh(b,e)}b=b.nextEffect}while(null!==b);W=c;c=a.expirationTime;0!==c&&Xh(a,c);X||W||Yh(1073741823,!1)}function of(){null!==Qh&&Be(Qh);null!==Rh&&Rh()}\nfunction Zh(a,b){Oh=Kh=!0;a.current===b?x(\"177\"):void 0;var c=a.pendingCommitExpirationTime;0===c?x(\"261\"):void 0;a.pendingCommitExpirationTime=0;var d=b.expirationTime,e=b.childExpirationTime;ef(a,e>d?e:d);Ih.current=null;d=void 0;1<b.effectTag?null!==b.lastEffect?(b.lastEffect.nextEffect=b,d=b.firstEffect):d=b:d=b.firstEffect;ue=Bd;ve=Pd();Bd=!1;for(V=d;null!==V;){e=!1;var f=void 0;try{Uh()}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}for(V=d;null!==V;){e=!1;\nf=void 0;try{Th()}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}Qd(ve);ve=null;Bd=!!ue;ue=null;a.current=b;for(V=d;null!==V;){e=!1;f=void 0;try{Vh(a,c)}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}if(null!==d&&null!==Ph){var g=Wh.bind(null,a,d);Qh=r.unstable_runWithPriority(r.unstable_NormalPriority,function(){return Ae(g)});Rh=g}Kh=Oh=!1;\"function\"===typeof Qe&&Qe(b.stateNode);c=b.expirationTime;b=b.childExpirationTime;b=\nb>c?b:c;0===b&&(Fh=null);$h(a,b)}\nfunction ai(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&1024)){T=a;a:{var e=b;b=a;var f=U;var g=b.pendingProps;switch(b.tag){case 2:break;case 16:break;case 15:case 0:break;case 1:J(b.type)&&Ke(b);break;case 3:Kf(b);Le(b);g=b.stateNode;g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null);if(null===e||null===e.child)Eg(b),b.effectTag&=-3;mh(b);break;case 5:Mf(b);var h=If(Hf.current);f=b.type;if(null!==e&&null!=b.stateNode)nh(e,b,f,g,h),e.ref!==b.ref&&(b.effectTag|=\n128);else if(g){var l=If(N.current);if(Eg(b)){g=b;e=g.stateNode;var k=g.type,m=g.memoizedProps,p=h;e[Fa]=g;e[Ga]=m;f=void 0;h=k;switch(h){case \"iframe\":case \"object\":E(\"load\",e);break;case \"video\":case \"audio\":for(k=0;k<ab.length;k++)E(ab[k],e);break;case \"source\":E(\"error\",e);break;case \"img\":case \"image\":case \"link\":E(\"error\",e);E(\"load\",e);break;case \"form\":E(\"reset\",e);E(\"submit\",e);break;case \"details\":E(\"toggle\",e);break;case \"input\":wc(e,m);E(\"invalid\",e);se(p,\"onChange\");break;case \"select\":e._wrapperState=\n{wasMultiple:!!m.multiple};E(\"invalid\",e);se(p,\"onChange\");break;case \"textarea\":ce(e,m),E(\"invalid\",e),se(p,\"onChange\")}qe(h,m);k=null;for(f in m)m.hasOwnProperty(f)&&(l=m[f],\"children\"===f?\"string\"===typeof l?e.textContent!==l&&(k=[\"children\",l]):\"number\"===typeof l&&e.textContent!==\"\"+l&&(k=[\"children\",\"\"+l]):ra.hasOwnProperty(f)&&null!=l&&se(p,f));switch(h){case \"input\":Rb(e);Ac(e,m,!0);break;case \"textarea\":Rb(e);ee(e,m);break;case \"select\":case \"option\":break;default:\"function\"===typeof m.onClick&&\n(e.onclick=te)}f=k;g.updateQueue=f;g=null!==f?!0:!1;g&&kh(b)}else{m=b;p=f;e=g;k=9===h.nodeType?h:h.ownerDocument;l===fe.html&&(l=ge(p));l===fe.html?\"script\"===p?(e=k.createElement(\"div\"),e.innerHTML=\"<script>\\x3c/script>\",k=e.removeChild(e.firstChild)):\"string\"===typeof e.is?k=k.createElement(p,{is:e.is}):(k=k.createElement(p),\"select\"===p&&(p=k,e.multiple?p.multiple=!0:e.size&&(p.size=e.size))):k=k.createElementNS(l,p);e=k;e[Fa]=m;e[Ga]=g;lh(e,b,!1,!1);p=e;k=f;m=g;var t=h,A=re(k,m);switch(k){case \"iframe\":case \"object\":E(\"load\",\np);h=m;break;case \"video\":case \"audio\":for(h=0;h<ab.length;h++)E(ab[h],p);h=m;break;case \"source\":E(\"error\",p);h=m;break;case \"img\":case \"image\":case \"link\":E(\"error\",p);E(\"load\",p);h=m;break;case \"form\":E(\"reset\",p);E(\"submit\",p);h=m;break;case \"details\":E(\"toggle\",p);h=m;break;case \"input\":wc(p,m);h=vc(p,m);E(\"invalid\",p);se(t,\"onChange\");break;case \"option\":h=$d(p,m);break;case \"select\":p._wrapperState={wasMultiple:!!m.multiple};h=n({},m,{value:void 0});E(\"invalid\",p);se(t,\"onChange\");break;case \"textarea\":ce(p,\nm);h=be(p,m);E(\"invalid\",p);se(t,\"onChange\");break;default:h=m}qe(k,h);l=void 0;var v=k,R=p,u=h;for(l in u)if(u.hasOwnProperty(l)){var q=u[l];\"style\"===l?oe(R,q):\"dangerouslySetInnerHTML\"===l?(q=q?q.__html:void 0,null!=q&&je(R,q)):\"children\"===l?\"string\"===typeof q?(\"textarea\"!==v||\"\"!==q)&&ke(R,q):\"number\"===typeof q&&ke(R,\"\"+q):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ra.hasOwnProperty(l)?null!=q&&se(t,l):null!=q&&tc(R,l,q,A))}switch(k){case \"input\":Rb(p);\nAc(p,m,!1);break;case \"textarea\":Rb(p);ee(p,m);break;case \"option\":null!=m.value&&p.setAttribute(\"value\",\"\"+uc(m.value));break;case \"select\":h=p;h.multiple=!!m.multiple;p=m.value;null!=p?ae(h,!!m.multiple,p,!1):null!=m.defaultValue&&ae(h,!!m.multiple,m.defaultValue,!0);break;default:\"function\"===typeof h.onClick&&(p.onclick=te)}(g=we(f,g))&&kh(b);b.stateNode=e}null!==b.ref&&(b.effectTag|=128)}else null===b.stateNode?x(\"166\"):void 0;break;case 6:e&&null!=b.stateNode?oh(e,b,e.memoizedProps,g):(\"string\"!==\ntypeof g&&(null===b.stateNode?x(\"166\"):void 0),e=If(Hf.current),If(N.current),Eg(b)?(g=b,f=g.stateNode,e=g.memoizedProps,f[Fa]=g,(g=f.nodeValue!==e)&&kh(b)):(f=b,g=(9===e.nodeType?e:e.ownerDocument).createTextNode(g),g[Fa]=b,f.stateNode=g));break;case 11:break;case 13:g=b.memoizedState;if(0!==(b.effectTag&64)){b.expirationTime=f;T=b;break a}g=null!==g;f=null!==e&&null!==e.memoizedState;null!==e&&!g&&f&&(e=e.child.sibling,null!==e&&(h=b.firstEffect,null!==h?(b.firstEffect=e,e.nextEffect=h):(b.firstEffect=\nb.lastEffect=e,e.nextEffect=null),e.effectTag=8));if(g||f)b.effectTag|=4;break;case 7:break;case 8:break;case 12:break;case 4:Kf(b);mh(b);break;case 10:Zg(b);break;case 9:break;case 14:break;case 17:J(b.type)&&Ke(b);break;case 18:break;default:x(\"156\")}T=null}b=a;if(1===U||1!==b.childExpirationTime){g=0;for(f=b.child;null!==f;)e=f.expirationTime,h=f.childExpirationTime,e>g&&(g=e),h>g&&(g=h),f=f.sibling;b.childExpirationTime=g}if(null!==T)return T;null!==c&&0===(c.effectTag&1024)&&(null===c.firstEffect&&\n(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a))}else{a=Gh(a,U);if(null!==a)return a.effectTag&=1023,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=1024)}if(null!==d)return d;if(null!==c)a=c;else break}return null}\nfunction bi(a){var b=Tg(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=ai(a));Ih.current=null;return b}\nfunction ci(a,b){Kh?x(\"243\"):void 0;of();Kh=!0;var c=Hh.current;Hh.current=kg;var d=a.nextExpirationTimeToWorkOn;if(d!==U||a!==Lh||null===T)Sh(),Lh=a,U=d,T=Xe(Lh.current,null,U),a.pendingCommitExpirationTime=0;var e=!1;do{try{if(b)for(;null!==T&&!di();)T=bi(T);else for(;null!==T;)T=bi(T)}catch(u){if(Yg=Xg=Wg=null,lg(),null===T)e=!0,Dh(u);else{null===T?x(\"271\"):void 0;var f=T,g=f.return;if(null===g)e=!0,Dh(u);else{a:{var h=a,l=g,k=f,m=u;g=U;k.effectTag|=1024;k.firstEffect=k.lastEffect=null;if(null!==\nm&&\"object\"===typeof m&&\"function\"===typeof m.then){var p=m;m=l;var t=-1,A=-1;do{if(13===m.tag){var v=m.alternate;if(null!==v&&(v=v.memoizedState,null!==v)){A=10*(1073741822-v.timedOutAt);break}v=m.pendingProps.maxDuration;if(\"number\"===typeof v)if(0>=v)t=0;else if(-1===t||v<t)t=v}m=m.return}while(null!==m);m=l;do{if(v=13===m.tag)v=void 0===m.memoizedProps.fallback?!1:null===m.memoizedState;if(v){l=m.updateQueue;null===l?(l=new Set,l.add(p),m.updateQueue=l):l.add(p);if(0===(m.mode&1)){m.effectTag|=\n64;k.effectTag&=-1957;1===k.tag&&(null===k.alternate?k.tag=17:(g=nf(1073741823),g.tag=sf,pf(k,g)));k.expirationTime=1073741823;break a}k=h;l=g;var R=k.pingCache;null===R?(R=k.pingCache=new Bh,v=new Set,R.set(p,v)):(v=R.get(p),void 0===v&&(v=new Set,R.set(p,v)));v.has(l)||(v.add(l),k=ei.bind(null,k,p,l),p.then(k,k));-1===t?h=1073741823:(-1===A&&(A=10*(1073741822-gf(h,g))-5E3),h=A+t);0<=h&&Mh<h&&(Mh=h);m.effectTag|=2048;m.expirationTime=g;break a}m=m.return}while(null!==m);m=Error((ic(k.type)||\"A React component\")+\n\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\"+jc(k))}Nh=!0;m=jh(m,k);h=l;do{switch(h.tag){case 3:h.effectTag|=2048;h.expirationTime=g;g=Ch(h,m,g);eh(h,g);break a;case 1:if(t=m,A=h.type,k=h.stateNode,0===(h.effectTag&64)&&(\"function\"===typeof A.getDerivedStateFromError||null!==k&&\"function\"===typeof k.componentDidCatch&&(null===Fh||!Fh.has(k)))){h.effectTag|=2048;\nh.expirationTime=g;g=Eh(h,t,g);eh(h,g);break a}}h=h.return}while(null!==h)}T=ai(f);continue}}}break}while(1);Kh=!1;Hh.current=c;Yg=Xg=Wg=null;lg();if(e)Lh=null,a.finishedWork=null;else if(null!==T)a.finishedWork=null;else{c=a.current.alternate;null===c?x(\"281\"):void 0;Lh=null;if(Nh){e=a.latestPendingTime;f=a.latestSuspendedTime;g=a.latestPingedTime;if(0!==e&&e<d||0!==f&&f<d||0!==g&&g<d){ff(a,d);fi(a,c,d,a.expirationTime,-1);return}if(!a.didError&&b){a.didError=!0;d=a.nextExpirationTimeToWorkOn=d;\nb=a.expirationTime=1073741823;fi(a,c,d,b,-1);return}}b&&-1!==Mh?(ff(a,d),b=10*(1073741822-gf(a,d)),b<Mh&&(Mh=b),b=10*(1073741822-lf()),b=Mh-b,fi(a,c,d,a.expirationTime,0>b?0:b)):(a.pendingCommitExpirationTime=d,a.finishedWork=c)}}\nfunction sh(a,b){for(var c=a.return;null!==c;){switch(c.tag){case 1:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Fh||!Fh.has(d))){a=jh(b,a);a=Eh(c,a,1073741823);pf(c,a);qf(c,1073741823);return}break;case 3:a=jh(b,a);a=Ch(c,a,1073741823);pf(c,a);qf(c,1073741823);return}c=c.return}3===a.tag&&(c=jh(b,a),c=Ch(a,c,1073741823),pf(a,c),qf(a,1073741823))}\nfunction mf(a,b){var c=r.unstable_getCurrentPriorityLevel(),d=void 0;if(0===(b.mode&1))d=1073741823;else if(Kh&&!Oh)d=U;else{switch(c){case r.unstable_ImmediatePriority:d=1073741823;break;case r.unstable_UserBlockingPriority:d=1073741822-10*(((1073741822-a+15)/10|0)+1);break;case r.unstable_NormalPriority:d=1073741822-25*(((1073741822-a+500)/25|0)+1);break;case r.unstable_LowPriority:case r.unstable_IdlePriority:d=1;break;default:x(\"313\")}null!==Lh&&d===U&&--d}c===r.unstable_UserBlockingPriority&&\n(0===gi||d<gi)&&(gi=d);return d}function ei(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);if(null!==Lh&&U===c)Lh=null;else if(b=a.earliestSuspendedTime,d=a.latestSuspendedTime,0!==b&&c<=b&&c>=d){a.didError=!1;b=a.latestPingedTime;if(0===b||b>c)a.latestPingedTime=c;df(c,a);c=a.expirationTime;0!==c&&Xh(a,c)}}function Ah(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=lf();b=mf(b,a);a=hi(a,b);null!==a&&(cf(a,b),b=a.expirationTime,0!==b&&Xh(a,b))}\nfunction hi(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}return e}\nfunction qf(a,b){a=hi(a,b);null!==a&&(!Kh&&0!==U&&b>U&&Sh(),cf(a,b),Kh&&!Oh&&Lh===a||Xh(a,a.expirationTime),ii>ji&&(ii=0,x(\"185\")))}function ki(a,b,c,d,e){return r.unstable_runWithPriority(r.unstable_ImmediatePriority,function(){return a(b,c,d,e)})}var li=null,Y=null,mi=0,ni=void 0,W=!1,oi=null,Z=0,gi=0,pi=!1,qi=null,X=!1,ri=!1,si=null,ti=r.unstable_now(),ui=1073741822-(ti/10|0),vi=ui,ji=50,ii=0,wi=null;function xi(){ui=1073741822-((r.unstable_now()-ti)/10|0)}\nfunction yi(a,b){if(0!==mi){if(b<mi)return;null!==ni&&r.unstable_cancelCallback(ni)}mi=b;a=r.unstable_now()-ti;ni=r.unstable_scheduleCallback(zi,{timeout:10*(1073741822-b)-a})}function fi(a,b,c,d,e){a.expirationTime=d;0!==e||di()?0<e&&(a.timeoutHandle=ye(Ai.bind(null,a,b,c),e)):(a.pendingCommitExpirationTime=c,a.finishedWork=b)}function Ai(a,b,c){a.pendingCommitExpirationTime=c;a.finishedWork=b;xi();vi=ui;Bi(a,c)}function $h(a,b){a.expirationTime=b;a.finishedWork=null}\nfunction lf(){if(W)return vi;Ci();if(0===Z||1===Z)xi(),vi=ui;return vi}function Xh(a,b){null===a.nextScheduledRoot?(a.expirationTime=b,null===Y?(li=Y=a,a.nextScheduledRoot=a):(Y=Y.nextScheduledRoot=a,Y.nextScheduledRoot=li)):b>a.expirationTime&&(a.expirationTime=b);W||(X?ri&&(oi=a,Z=1073741823,Di(a,1073741823,!1)):1073741823===b?Yh(1073741823,!1):yi(a,b))}\nfunction Ci(){var a=0,b=null;if(null!==Y)for(var c=Y,d=li;null!==d;){var e=d.expirationTime;if(0===e){null===c||null===Y?x(\"244\"):void 0;if(d===d.nextScheduledRoot){li=Y=d.nextScheduledRoot=null;break}else if(d===li)li=e=d.nextScheduledRoot,Y.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===Y){Y=c;Y.nextScheduledRoot=li;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{e>a&&(a=e,b=d);if(d===Y)break;if(1073741823===\na)break;c=d;d=d.nextScheduledRoot}}oi=b;Z=a}var Ei=!1;function di(){return Ei?!0:r.unstable_shouldYield()?Ei=!0:!1}function zi(){try{if(!di()&&null!==li){xi();var a=li;do{var b=a.expirationTime;0!==b&&ui<=b&&(a.nextExpirationTimeToWorkOn=ui);a=a.nextScheduledRoot}while(a!==li)}Yh(0,!0)}finally{Ei=!1}}\nfunction Yh(a,b){Ci();if(b)for(xi(),vi=ui;null!==oi&&0!==Z&&a<=Z&&!(Ei&&ui>Z);)Di(oi,Z,ui>Z),Ci(),xi(),vi=ui;else for(;null!==oi&&0!==Z&&a<=Z;)Di(oi,Z,!1),Ci();b&&(mi=0,ni=null);0!==Z&&yi(oi,Z);ii=0;wi=null;if(null!==si)for(a=si,si=null,b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){pi||(pi=!0,qi=d)}}if(pi)throw a=qi,qi=null,pi=!1,a;}function Bi(a,b){W?x(\"253\"):void 0;oi=a;Z=b;Di(a,b,!1);Yh(1073741823,!1)}\nfunction Di(a,b,c){W?x(\"245\"):void 0;W=!0;if(c){var d=a.finishedWork;null!==d?Fi(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,ze(d)),ci(a,c),d=a.finishedWork,null!==d&&(di()?a.finishedWork=d:Fi(a,d,b)))}else d=a.finishedWork,null!==d?Fi(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,ze(d)),ci(a,c),d=a.finishedWork,null!==d&&Fi(a,d,b));W=!1}\nfunction Fi(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime>=c&&(null===si?si=[d]:si.push(d),d._defer)){a.finishedWork=b;a.expirationTime=0;return}a.finishedWork=null;a===wi?ii++:(wi=a,ii=0);r.unstable_runWithPriority(r.unstable_ImmediatePriority,function(){Zh(a,b)})}function Dh(a){null===oi?x(\"246\"):void 0;oi.expirationTime=0;pi||(pi=!0,qi=a)}function Gi(a,b){var c=X;X=!0;try{return a(b)}finally{(X=c)||W||Yh(1073741823,!1)}}\nfunction Hi(a,b){if(X&&!ri){ri=!0;try{return a(b)}finally{ri=!1}}return a(b)}function Ii(a,b,c){X||W||0===gi||(Yh(gi,!1),gi=0);var d=X;X=!0;try{return r.unstable_runWithPriority(r.unstable_UserBlockingPriority,function(){return a(b,c)})}finally{(X=d)||W||Yh(1073741823,!1)}}\nfunction Ji(a,b,c,d,e){var f=b.current;a:if(c){c=c._reactInternalFiber;b:{2===ed(c)&&1===c.tag?void 0:x(\"170\");var g=c;do{switch(g.tag){case 3:g=g.stateNode.context;break b;case 1:if(J(g.type)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}}g=g.return}while(null!==g);x(\"171\");g=void 0}if(1===c.tag){var h=c.type;if(J(h)){c=Ne(c,h,g);break a}}c=g}else c=He;null===b.context?b.context=c:b.pendingContext=c;b=e;e=nf(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);\nof();pf(f,e);qf(f,d);return d}function Ki(a,b,c,d){var e=b.current,f=lf();e=mf(f,e);return Ji(a,b,c,e,d)}function Li(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function Mi(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Wb,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nAb=function(a,b,c){switch(b){case \"input\":yc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Ka(d);e?void 0:x(\"90\");Sb(d);yc(d,e)}}}break;case \"textarea\":de(a,c);break;case \"select\":b=c.value,null!=b&&ae(a,!!c.multiple,b,!1)}};\nfunction Ni(a){var b=1073741822-25*(((1073741822-lf()+500)/25|0)+1);b>=Jh&&(b=Jh-1);this._expirationTime=Jh=b;this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}Ni.prototype.render=function(a){this._defer?void 0:x(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new Oi;Ji(a,b,null,c,d._onCommit);return d};\nNi.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nNi.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:x(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?x(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;Bi(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};Ni.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function Oi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}Oi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nOi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?x(\"191\",c):void 0;c()}}};\nfunction Pi(a,b,c){b=K(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:c,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null};this._internalRoot=b.stateNode=a}\nPi.prototype.render=function(a,b){var c=this._internalRoot,d=new Oi;b=void 0===b?null:b;null!==b&&d.then(b);Ki(a,c,null,d._onCommit);return d};Pi.prototype.unmount=function(a){var b=this._internalRoot,c=new Oi;a=void 0===a?null:a;null!==a&&c.then(a);Ki(null,b,null,c._onCommit);return c};Pi.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new Oi;c=void 0===c?null:c;null!==c&&e.then(c);Ki(b,d,a,e._onCommit);return e};\nPi.prototype.createBatch=function(){var a=new Ni(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime>=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function Qi(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Gb=Gi;Hb=Ii;Ib=function(){W||0===gi||(Yh(gi,!1),gi=0)};\nfunction Ri(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new Pi(a,!1,b)}\nfunction Si(a,b,c,d,e){var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=Li(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=Ri(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=Li(f._internalRoot);h.call(a)}}Hi(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return Li(f._internalRoot)}\nfunction Ti(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Qi(b)?void 0:x(\"200\");return Mi(a,b,null,c)}\nvar Vi={createPortal:Ti,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?x(\"188\"):x(\"268\",Object.keys(a)));a=hd(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){Qi(b)?void 0:x(\"200\");return Si(null,a,b,!0,c)},render:function(a,b,c){Qi(b)?void 0:x(\"200\");return Si(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){Qi(c)?void 0:x(\"200\");null==a||void 0===a._reactInternalFiber?\nx(\"38\"):void 0;return Si(a,b,c,!1,d)},unmountComponentAtNode:function(a){Qi(a)?void 0:x(\"40\");return a._reactRootContainer?(Hi(function(){Si(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return Ti.apply(void 0,arguments)},unstable_batchedUpdates:Gi,unstable_interactiveUpdates:Ii,flushSync:function(a,b){W?x(\"187\"):void 0;var c=X;X=!0;try{return ki(a,b)}finally{X=c,Yh(1073741823,!1)}},unstable_createRoot:Ui,unstable_flushControlled:function(a){var b=\nX;X=!0;try{ki(a)}finally{(X=b)||W||Yh(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[Ia,Ja,Ka,Ba.injectEventPluginsByName,pa,Qa,function(a){ya(a,Pa)},Eb,Fb,Dd,Da]}};function Ui(a,b){Qi(a)?void 0:x(\"299\",\"unstable_createRoot\");return new Pi(a,!0,null!=b&&!0===b.hydrate)}\n(function(a){var b=a.findFiberByHostInstance;return Te(n({},a,{overrideProps:null,currentDispatcherRef:Tb.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=hd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))})({findFiberByHostInstance:Ha,bundleType:0,version:\"16.8.6\",rendererPackageName:\"react-dom\"});var Wi={default:Vi},Xi=Wi&&Vi||Wi;module.exports=Xi.default||Xi;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/cjs/react-dom.production.min.js\n// module id = 18\n// module chunks = 0","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/index.js\n// module id = 19\n// module chunks = 0","/** @license React v16.8.6\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var k=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.concurrent_mode\"):60111,y=n?Symbol.for(\"react.forward_ref\"):60112,z=n?Symbol.for(\"react.suspense\"):60113,aa=n?Symbol.for(\"react.memo\"):\n60115,ba=n?Symbol.for(\"react.lazy\"):60116,A=\"function\"===typeof Symbol&&Symbol.iterator;function ca(a,b,d,c,e,g,h,f){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[d,c,e,g,h,f],m=0;a=Error(b.replace(/%s/g,function(){return l[m++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction B(a){for(var b=arguments.length-1,d=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)d+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);ca(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",d)}var C={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},D={};\nfunction E(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}E.prototype.isReactComponent={};E.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?B(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}var H=G.prototype=new F;\nH.constructor=G;k(H,E.prototype);H.isPureReactComponent=!0;var I={current:null},J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,d){var c=void 0,e={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=b[c]);var f=arguments.length-2;if(1===f)e.children=d;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];e.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===e[c]&&(e[c]=f[c]);return{$$typeof:p,type:a,key:g,ref:h,props:e,_owner:J.current}}\nfunction da(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,d,c){if(P.length){var e=P.pop();e.result=a;e.keyPrefix=b;e.func=d;e.context=c;e.count=0;return e}return{result:a,keyPrefix:b,func:d,context:c,count:0}}\nfunction R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\nfunction S(a,b,d,c){var e=typeof a;if(\"undefined\"===e||\"boolean\"===e)a=null;var g=!1;if(null===a)g=!0;else switch(e){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return d(c,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){e=a[h];var f=b+T(e,h);g+=S(e,f,d,c)}else if(null===a||\"object\"!==typeof a?f=null:(f=A&&a[A]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),h=\n0;!(e=a.next()).done;)e=e.value,f=b+T(e,h++),g+=S(e,f,d,c);else\"object\"===e&&(d=\"\"+a,B(\"31\",\"[object Object]\"===d?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":d,\"\"));return g}function U(a,b,d){return null==a?0:S(a,\"\",b,d)}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ea(a,b){a.func.call(a.context,b,a.count++)}\nfunction fa(a,b,d){var c=a.result,e=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?V(a,c,d,function(a){return a}):null!=a&&(N(a)&&(a=da(a,e+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+d)),c.push(a))}function V(a,b,d,c,e){var g=\"\";null!=d&&(g=(\"\"+d).replace(O,\"$&/\")+\"/\");b=Q(b,g,c,e);U(a,fa,b);R(b)}function W(){var a=I.current;null===a?B(\"321\"):void 0;return a}\nvar X={Children:{map:function(a,b,d){if(null==a)return a;var c=[];V(a,c,null,b,d);return c},forEach:function(a,b,d){if(null==a)return a;b=Q(null,null,b,d);U(a,ea,b);R(b)},count:function(a){return U(a,function(){return null},null)},toArray:function(a){var b=[];V(a,b,null,function(a){return a});return b},only:function(a){N(a)?void 0:B(\"143\");return a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:y,render:a}},lazy:function(a){return{$$typeof:ba,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:aa,type:a,compare:void 0===b?null:b}},useCallback:function(a,b){return W().useCallback(a,b)},useContext:function(a,b){return W().useContext(a,b)},useEffect:function(a,b){return W().useEffect(a,b)},useImperativeHandle:function(a,\nb,d){return W().useImperativeHandle(a,b,d)},useDebugValue:function(){},useLayoutEffect:function(a,b){return W().useLayoutEffect(a,b)},useMemo:function(a,b){return W().useMemo(a,b)},useReducer:function(a,b,d){return W().useReducer(a,b,d)},useRef:function(a){return W().useRef(a)},useState:function(a){return W().useState(a)},Fragment:r,StrictMode:t,Suspense:z,createElement:M,cloneElement:function(a,b,d){null===a||void 0===a?B(\"267\",a):void 0;var c=void 0,e=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=\nb){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==b.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)e.children=d;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];e.children=l}return{$$typeof:p,type:a.type,key:g,ref:h,props:e,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.8.6\",\nunstable_ConcurrentMode:x,unstable_Profiler:u,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:I,ReactCurrentOwner:J,assign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/cjs/react.production.min.js\n// module id = 20\n// module chunks = 0","/** @license React v0.13.6\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var d=null,e=!1,g=3,k=-1,l=-1,m=!1,n=!1;function p(){if(!m){var a=d.expirationTime;n?q():n=!0;r(t,a)}}\nfunction u(){var a=d,b=d.next;if(d===b)d=null;else{var c=d.previous;d=c.next=b;b.previous=c}a.next=a.previous=null;c=a.callback;b=a.expirationTime;a=a.priorityLevel;var f=g,Q=l;g=a;l=b;try{var h=c()}finally{g=f,l=Q}if(\"function\"===typeof h)if(h={callback:h,priorityLevel:a,expirationTime:b,next:null,previous:null},null===d)d=h.next=h.previous=h;else{c=null;a=d;do{if(a.expirationTime>=b){c=a;break}a=a.next}while(a!==d);null===c?c=d:c===d&&(d=h,p());b=c.previous;b.next=c.previous=h;h.next=c;h.previous=\nb}}function v(){if(-1===k&&null!==d&&1===d.priorityLevel){m=!0;try{do u();while(null!==d&&1===d.priorityLevel)}finally{m=!1,null!==d?p():n=!1}}}function t(a){m=!0;var b=e;e=a;try{if(a)for(;null!==d;){var c=exports.unstable_now();if(d.expirationTime<=c){do u();while(null!==d&&d.expirationTime<=c)}else break}else if(null!==d){do u();while(null!==d&&!w())}}finally{m=!1,e=b,null!==d?p():n=!1,v()}}\nvar x=Date,y=\"function\"===typeof setTimeout?setTimeout:void 0,z=\"function\"===typeof clearTimeout?clearTimeout:void 0,A=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,B=\"function\"===typeof cancelAnimationFrame?cancelAnimationFrame:void 0,C,D;function E(a){C=A(function(b){z(D);a(b)});D=y(function(){B(C);a(exports.unstable_now())},100)}\nif(\"object\"===typeof performance&&\"function\"===typeof performance.now){var F=performance;exports.unstable_now=function(){return F.now()}}else exports.unstable_now=function(){return x.now()};var r,q,w,G=null;\"undefined\"!==typeof window?G=window:\"undefined\"!==typeof global&&(G=global);\nif(G&&G._schedMock){var H=G._schedMock;r=H[0];q=H[1];w=H[2];exports.unstable_now=H[3]}else if(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var I=null,J=function(a){if(null!==I)try{I(a)}finally{I=null}};r=function(a){null!==I?setTimeout(r,0,a):(I=a,setTimeout(J,0,!1))};q=function(){I=null};w=function(){return!1}}else{\"undefined\"!==typeof console&&(\"function\"!==typeof A&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"),\n\"function\"!==typeof B&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));var K=null,L=!1,M=-1,N=!1,O=!1,P=0,R=33,S=33;w=function(){return P<=exports.unstable_now()};var T=new MessageChannel,U=T.port2;T.port1.onmessage=function(){L=!1;var a=K,b=M;K=null;M=-1;var c=exports.unstable_now(),f=!1;if(0>=P-c)if(-1!==b&&b<=c)f=!0;else{N||(N=!0,E(V));K=a;M=b;return}if(null!==a){O=!0;try{a(f)}finally{O=!1}}};\nvar V=function(a){if(null!==K){E(V);var b=a-P+S;b<S&&R<S?(8>b&&(b=8),S=b<R?R:b):R=b;P=a+S;L||(L=!0,U.postMessage(void 0))}else N=!1};r=function(a,b){K=a;M=b;O||0>b?U.postMessage(void 0):N||(N=!0,E(V))};q=function(){K=null;L=!1;M=-1}}exports.unstable_ImmediatePriority=1;exports.unstable_UserBlockingPriority=2;exports.unstable_NormalPriority=3;exports.unstable_IdlePriority=5;exports.unstable_LowPriority=4;\nexports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=g,f=k;g=a;k=exports.unstable_now();try{return b()}finally{g=c,k=f,v()}};exports.unstable_next=function(a){switch(g){case 1:case 2:case 3:var b=3;break;default:b=g}var c=g,f=k;g=b;k=exports.unstable_now();try{return a()}finally{g=c,k=f,v()}};\nexports.unstable_scheduleCallback=function(a,b){var c=-1!==k?k:exports.unstable_now();if(\"object\"===typeof b&&null!==b&&\"number\"===typeof b.timeout)b=c+b.timeout;else switch(g){case 1:b=c+-1;break;case 2:b=c+250;break;case 5:b=c+1073741823;break;case 4:b=c+1E4;break;default:b=c+5E3}a={callback:a,priorityLevel:g,expirationTime:b,next:null,previous:null};if(null===d)d=a.next=a.previous=a,p();else{c=null;var f=d;do{if(f.expirationTime>b){c=f;break}f=f.next}while(f!==d);null===c?c=d:c===d&&(d=a,p());\nb=c.previous;b.next=c.previous=a;a.next=c;a.previous=b}return a};exports.unstable_cancelCallback=function(a){var b=a.next;if(null!==b){if(b===a)d=null;else{a===d&&(d=b);var c=a.previous;c.next=b;b.previous=c}a.next=a.previous=null}};exports.unstable_wrapCallback=function(a){var b=g;return function(){var c=g,f=k;g=b;k=exports.unstable_now();try{return a.apply(this,arguments)}finally{g=c,k=f,v()}}};exports.unstable_getCurrentPriorityLevel=function(){return g};\nexports.unstable_shouldYield=function(){return!e&&(null!==d&&d.expirationTime<l||w())};exports.unstable_continueExecution=function(){null!==d&&p()};exports.unstable_pauseExecution=function(){};exports.unstable_getFirstCallbackNode=function(){return d};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/scheduler/cjs/scheduler.production.min.js\n// module id = 21\n// module chunks = 0","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/scheduler/index.js\n// module id = 22\n// module chunks = 0"],"sourceRoot":""}